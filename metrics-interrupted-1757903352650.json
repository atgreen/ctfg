{
  "startTime": 1757903331343,
  "endTime": 1757903352632,
  "players": [
    {
      "id": 1,
      "username": "player2",
      "password": "iNAk7p82",
      "displayName": "Player_player2_350",
      "sessionCookie": "hunchentoot-session=7:C04C19F9C117E329D0CFB523653E03E9; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player2.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player2.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player2.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player2.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331350,
        "loginTime": 1757903332109,
        "wsConnectTime": 1757903332233,
        "firstChallengeTime": 1757903332562,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 2,
      "username": "player3",
      "password": "qoomBnlP",
      "displayName": "Player_player3_351",
      "sessionCookie": "hunchentoot-session=40:00EADA59075EA87712A5A5590D4E34C4; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player3.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player3.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player3.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player3.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334314,
        "wsConnectTime": 1757903334479,
        "firstChallengeTime": 1757903334862,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 3,
      "username": "player4",
      "password": "09wTiwd4",
      "displayName": "Player_player4_351",
      "sessionCookie": "hunchentoot-session=52:C2BF8B8A6D9A450DA398DDBE208BA9BB; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player4.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player4.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player4.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player4.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334984,
        "wsConnectTime": 1757903335176,
        "firstChallengeTime": 1757903335585,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 4,
      "username": "player5",
      "password": "zB8K4VYA",
      "displayName": "Player_player5_351",
      "sessionCookie": "hunchentoot-session=50:8F0D0040EF38C28DDBDDB3B06BD575D9; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player5.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player5.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player5.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player5.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334932,
        "wsConnectTime": 1757903335123,
        "firstChallengeTime": 1757903335505,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 5,
      "username": "player6",
      "password": "otE3tMY8",
      "displayName": "Player_player6_351",
      "sessionCookie": "hunchentoot-session=11:CE8ED6EA2B18F4B164C4CC227790B9AB; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player6.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player6.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player6.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player6.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332230,
        "wsConnectTime": 1757903332390,
        "firstChallengeTime": 1757903332744,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 6,
      "username": "player7",
      "password": "c25FmQ5K",
      "displayName": "Player_player7_351",
      "sessionCookie": "hunchentoot-session=45:842F1C47AF1CBB6BCE0EA303B4FD4101; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player7.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player7.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player7.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player7.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334720,
        "wsConnectTime": 1757903334874,
        "firstChallengeTime": 1757903335263,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 7,
      "username": "player8",
      "password": "AFg8BQN2",
      "displayName": "Player_player8_351",
      "sessionCookie": "hunchentoot-session=80:A04888856487E26F261CD9AD2DCEB250; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player8.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player8.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player8.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player8.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336664,
        "wsConnectTime": 1757903336814,
        "firstChallengeTime": 1757903337138,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 8,
      "username": "player9",
      "password": "egq1CWwK",
      "displayName": "Player_player9_351",
      "sessionCookie": "hunchentoot-session=65:D40CE1C4272EB3EA7E3377106FE4C0F5; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player9.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player9.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player9.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player9.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335643,
        "wsConnectTime": 1757903335854,
        "firstChallengeTime": 1757903336191,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 9,
      "username": "player10",
      "password": "9Mjqwln9",
      "displayName": "Player_player10_351",
      "sessionCookie": "hunchentoot-session=16:44FBA1EBA9387D968634B091106730A9; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player10.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player10.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player10.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player10.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332606,
        "wsConnectTime": 1757903332752,
        "firstChallengeTime": 1757903333110,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 10,
      "username": "player11",
      "password": "IV2gsWdg",
      "displayName": "Player_player11_351",
      "sessionCookie": "hunchentoot-session=58:6D1FA2B864D946AE86A684DE7B07C571; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player11.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player11.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player11.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player11.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335278,
        "wsConnectTime": 1757903335475,
        "firstChallengeTime": 1757903335827,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 11,
      "username": "player12",
      "password": "wtnsLYGu",
      "displayName": "Player_player12_351",
      "sessionCookie": "hunchentoot-session=67:857E52ADE99D35806DDADE926C4773EA; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player12.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player12.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player12.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player12.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335655,
        "wsConnectTime": 1757903335868,
        "firstChallengeTime": 1757903336225,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 12,
      "username": "player13",
      "password": "qU7hfAac",
      "displayName": "Player_player13_351",
      "sessionCookie": "hunchentoot-session=23:02C0AA6E4A4AEEA5C864C627EA37FD2E; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player13.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player13.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player13.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player13.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333362,
        "wsConnectTime": 1757903333502,
        "firstChallengeTime": 1757903333840,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 13,
      "username": "player14",
      "password": "EeZP5gNw",
      "displayName": "Player_player14_351",
      "sessionCookie": "hunchentoot-session=54:862437BA73C5108DEB795B73270BCD67; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player14.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player14.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player14.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player14.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335134,
        "wsConnectTime": 1757903335326,
        "firstChallengeTime": 1757903335712,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 14,
      "username": "player15",
      "password": "qmlnHhc7",
      "displayName": "Player_player15_351",
      "sessionCookie": "hunchentoot-session=28:B216BA3E2E70F740FB95146C0995B270; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player15.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player15.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player15.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player15.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333463,
        "wsConnectTime": 1757903333626,
        "firstChallengeTime": 1757903333998,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 15,
      "username": "player16",
      "password": "6pu1F9Ru",
      "displayName": "Player_player16_351",
      "sessionCookie": "hunchentoot-session=37:D5EC7E20F1D9390763A09EC065706926; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player16.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player16.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player16.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player16.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334118,
        "wsConnectTime": 1757903334271,
        "firstChallengeTime": 1757903334703,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 16,
      "username": "player17",
      "password": "TXV9FycM",
      "displayName": "Player_player17_351",
      "sessionCookie": "hunchentoot-session=13:2542D9F46F1B3673A03BD92BF54B5593; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player17.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player17.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player17.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player17.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332428,
        "wsConnectTime": 1757903332583,
        "firstChallengeTime": 1757903333106,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 17,
      "username": "player18",
      "password": "XHkFdcNr",
      "displayName": "Player_player18_351",
      "sessionCookie": "hunchentoot-session=71:D44C75D0A998E6D6C95A128E02C94372; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player18.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player18.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player18.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player18.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336165,
        "wsConnectTime": 1757903336335,
        "firstChallengeTime": 1757903336656,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 18,
      "username": "player19",
      "password": "7pdlkrn1",
      "displayName": "Player_player19_351",
      "sessionCookie": "hunchentoot-session=32:0DD4F92E83C7F53E4128B1901016B816; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player19.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player19.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player19.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player19.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333809,
        "wsConnectTime": 1757903333967,
        "firstChallengeTime": 1757903334323,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 19,
      "username": "player20",
      "password": "PFENy7Nq",
      "displayName": "Player_player20_351",
      "sessionCookie": "hunchentoot-session=3:8F30955E48B7713502FAE14458A8B6CF; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player20.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player20.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player20.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player20.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903331936,
        "wsConnectTime": 1757903332111,
        "firstChallengeTime": 1757903332470,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 20,
      "username": "player21",
      "password": "ozL1Lato",
      "displayName": "Player_player21_351",
      "sessionCookie": "hunchentoot-session=72:B9643CFC28A03968DB331B441FF106D5; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player21.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player21.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player21.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player21.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336165,
        "wsConnectTime": 1757903336320,
        "firstChallengeTime": 1757903336674,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 21,
      "username": "player22",
      "password": "tS3cNQOz",
      "displayName": "Player_player22_351",
      "sessionCookie": "hunchentoot-session=25:E90CF17FECA80771544847796C7FFD09; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player22.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player22.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player22.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player22.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333320,
        "wsConnectTime": 1757903333448,
        "firstChallengeTime": 1757903333772,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 22,
      "username": "player23",
      "password": "jvd94uM2",
      "displayName": "Player_player23_351",
      "sessionCookie": "hunchentoot-session=30:C928DD2065DAC5A3C6678A9B141F07A8; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player23.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player23.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player23.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player23.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333557,
        "wsConnectTime": 1757903333707,
        "firstChallengeTime": 1757903334070,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 23,
      "username": "player24",
      "password": "bAbGtcED",
      "displayName": "Player_player24_351",
      "sessionCookie": "hunchentoot-session=8:C1F4EA1E26EFB7CA5C7BE6D19DADA81D; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player24.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player24.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player24.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player24.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332123,
        "wsConnectTime": 1757903332253,
        "firstChallengeTime": 1757903332609,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 24,
      "username": "player25",
      "password": "1T7viNg8",
      "displayName": "Player_player25_351",
      "sessionCookie": "hunchentoot-session=15:394D9069E0CA74889D096B2E17CEFAFF; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player25.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player25.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player25.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player25.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332590,
        "wsConnectTime": 1757903332738,
        "firstChallengeTime": 1757903333102,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 25,
      "username": "player26",
      "password": "er0cTqZr",
      "displayName": "Player_player26_351",
      "sessionCookie": "hunchentoot-session=51:96215883F68CA6DCFC75C54B6FAA8FBA; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player26.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player26.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player26.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player26.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334926,
        "wsConnectTime": 1757903335119,
        "firstChallengeTime": 1757903335486,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 26,
      "username": "player27",
      "password": "AYDJxaMS",
      "displayName": "Player_player27_351",
      "sessionCookie": "hunchentoot-session=63:6F5EF75F9B2C4A10FD0F2A181F68440F; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player27.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player27.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player27.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player27.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335532,
        "wsConnectTime": 1757903335690,
        "firstChallengeTime": 1757903336121,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 27,
      "username": "player28",
      "password": "YHPQvLc5",
      "displayName": "Player_player28_351",
      "sessionCookie": "hunchentoot-session=42:AF0C3127B0B75721ADCA30E2888E4610; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player28.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player28.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player28.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player28.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334433,
        "wsConnectTime": 1757903334671,
        "firstChallengeTime": 1757903335063,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 28,
      "username": "player29",
      "password": "Yuj1nQda",
      "displayName": "Player_player29_351",
      "sessionCookie": "hunchentoot-session=66:64126086A6CEE0D63566420110E61B97; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player29.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player29.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player29.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player29.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335623,
        "wsConnectTime": 1757903335819,
        "firstChallengeTime": 1757903336263,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 29,
      "username": "player30",
      "password": "z3ddOka9",
      "displayName": "Player_player30_351",
      "sessionCookie": "hunchentoot-session=14:207208CB3753E07501AF0CB31DCAF11D; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player30.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player30.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player30.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player30.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332560,
        "wsConnectTime": 1757903332708,
        "firstChallengeTime": 1757903333215,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 30,
      "username": "player31",
      "password": "qnMjHxJD",
      "displayName": "Player_player31_351",
      "sessionCookie": "hunchentoot-session=75:0B1486174609904F4092B262BA6091D4; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player31.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player31.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player31.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player31.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336393,
        "wsConnectTime": 1757903336570,
        "firstChallengeTime": 1757903336957,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 31,
      "username": "player32",
      "password": "3Q9kYxQs",
      "displayName": "Player_player32_351",
      "sessionCookie": "hunchentoot-session=18:547F990AD7179D0D18D5D27DDB5B0F7D; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player32.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player32.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player32.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player32.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332860,
        "wsConnectTime": 1757903333077,
        "firstChallengeTime": 1757903333426,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 32,
      "username": "player33",
      "password": "u01mfjek",
      "displayName": "Player_player33_351",
      "sessionCookie": "hunchentoot-session=20:76F9F318BEDE5CF443FCB70D1D420DD7; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player33.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player33.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player33.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player33.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333030,
        "wsConnectTime": 1757903333210,
        "firstChallengeTime": 1757903333592,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 33,
      "username": "player34",
      "password": "oJeBOK36",
      "displayName": "Player_player34_351",
      "sessionCookie": "hunchentoot-session=47:80EAF0D15229B1AC2DA0DB2826AA08B4; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player34.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player34.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player34.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player34.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334787,
        "wsConnectTime": 1757903334929,
        "firstChallengeTime": 1757903335269,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 34,
      "username": "player35",
      "password": "8DuI092V",
      "displayName": "Player_player35_351",
      "sessionCookie": "hunchentoot-session=74:65B4756445C52F7E81B50B99EA7531EF; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player35.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player35.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player35.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player35.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336226,
        "wsConnectTime": 1757903336411,
        "firstChallengeTime": 1757903336774,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 35,
      "username": "player36",
      "password": "qO3s8LCX",
      "displayName": "Player_player36_351",
      "sessionCookie": "hunchentoot-session=62:753CC1369DBAFE34BC5DD23557181090; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player36.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player36.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player36.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player36.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335494,
        "wsConnectTime": 1757903335667,
        "firstChallengeTime": 1757903336056,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 36,
      "username": "player37",
      "password": "oe8lEXfF",
      "displayName": "Player_player37_351",
      "sessionCookie": "hunchentoot-session=33:CDD622E2D3F37238212A36A4A1244C76; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player37.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player37.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player37.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player37.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333754,
        "wsConnectTime": 1757903333892,
        "firstChallengeTime": 1757903334312,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 37,
      "username": "player38",
      "password": "Sj1JbIat",
      "displayName": "Player_player38_351",
      "sessionCookie": "hunchentoot-session=60:E77C772E43FE3C083171AE83E2FD320E; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player38.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player38.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player38.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player38.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335371,
        "wsConnectTime": 1757903335606,
        "firstChallengeTime": 1757903336047,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 38,
      "username": "player39",
      "password": "H5SZiKv7",
      "displayName": "Player_player39_351",
      "sessionCookie": "hunchentoot-session=35:46F29D5CA062BEB3CD71576E35878AD0; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player39.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player39.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player39.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player39.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333994,
        "wsConnectTime": 1757903334142,
        "firstChallengeTime": 1757903338914,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 39,
      "username": "player40",
      "password": "6JTLuJgK",
      "displayName": "Player_player40_351",
      "sessionCookie": "hunchentoot-session=41:0C77C0751F2B6634CB2504BFA5259035; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player40.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player40.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player40.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player40.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334434,
        "wsConnectTime": 1757903334671,
        "firstChallengeTime": 1757903335016,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 40,
      "username": "player41",
      "password": "9PRXT8DO",
      "displayName": "Player_player41_351",
      "sessionCookie": "hunchentoot-session=64:2881D65187E75D597DD653EA9F9A4DFA; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player41.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player41.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player41.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player41.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335607,
        "wsConnectTime": 1757903335768,
        "firstChallengeTime": 1757903336133,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 41,
      "username": "player42",
      "password": "YdYI38t7",
      "displayName": "Player_player42_351",
      "sessionCookie": "hunchentoot-session=68:041F88A36298615DF09D2BCC981BADE2; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player42.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player42.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player42.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player42.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335777,
        "wsConnectTime": 1757903336072,
        "firstChallengeTime": 1757903336440,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 42,
      "username": "player43",
      "password": "fzb7Neig",
      "displayName": "Player_player43_351",
      "sessionCookie": "hunchentoot-session=4:873EFEC9FAA9C3FB917042635E09381C; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player43.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player43.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player43.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player43.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903331942,
        "wsConnectTime": 1757903332129,
        "firstChallengeTime": 1757903332473,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 43,
      "username": "player44",
      "password": "VvRFfraz",
      "displayName": "Player_player44_351",
      "sessionCookie": "hunchentoot-session=2:3618770973C729DE9D1026EA49A52B9B; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player44.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player44.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player44.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player44.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903331942,
        "wsConnectTime": 1757903332132,
        "firstChallengeTime": 1757903332489,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 44,
      "username": "player45",
      "password": "KuqKhXze",
      "displayName": "Player_player45_351",
      "sessionCookie": "hunchentoot-session=12:3883E1D2EB36EDE086D20C402F44B3BD; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player45.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player45.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player45.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player45.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332286,
        "wsConnectTime": 1757903332417,
        "firstChallengeTime": 1757903332772,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 45,
      "username": "player46",
      "password": "NKedt2xr",
      "displayName": "Player_player46_351",
      "sessionCookie": "hunchentoot-session=10:6F126215F75CD4E120136AB940B5FFC8; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player46.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player46.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player46.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player46.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332181,
        "wsConnectTime": 1757903332327,
        "firstChallengeTime": 1757903332714,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 46,
      "username": "player47",
      "password": "tP3npMpB",
      "displayName": "Player_player47_351",
      "sessionCookie": "hunchentoot-session=6:F76759A4864DBD90ADC1897A67BC5DA9; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player47.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player47.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player47.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player47.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332053,
        "wsConnectTime": 1757903332203,
        "firstChallengeTime": 1757903332519,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 47,
      "username": "player48",
      "password": "qWHWffYl",
      "displayName": "Player_player48_351",
      "sessionCookie": "hunchentoot-session=46:5EE9CCCDB2CADAF54217C5D86024C837; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player48.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player48.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player48.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player48.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334758,
        "wsConnectTime": 1757903334906,
        "firstChallengeTime": 1757903335264,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 48,
      "username": "player49",
      "password": "6eheWDh9",
      "displayName": "Player_player49_351",
      "sessionCookie": "hunchentoot-session=27:6FB3A17A5EAF491F638AE17EBBCE53C6; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player49.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player49.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player49.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player49.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333428,
        "wsConnectTime": 1757903333620,
        "firstChallengeTime": 1757903333967,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 49,
      "username": "player50",
      "password": "AUDhPLt5",
      "displayName": "Player_player50_351",
      "sessionCookie": "hunchentoot-session=9:16302E84BEC07195391942DD991D1DF9; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player50.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player50.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player50.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player50.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332177,
        "wsConnectTime": 1757903332306,
        "firstChallengeTime": 1757903332613,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 50,
      "username": "player51",
      "password": "gBtwWGNV",
      "displayName": "Player_player51_351",
      "sessionCookie": "hunchentoot-session=24:D6493929155AA9B8765576B42F2C82EA; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player51.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player51.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player51.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player51.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333390,
        "wsConnectTime": 1757903333568,
        "firstChallengeTime": 1757903333917,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 51,
      "username": "player52",
      "password": "JXnetsxY",
      "displayName": "Player_player52_351",
      "sessionCookie": "hunchentoot-session=56:D7F02250DFB35DD154F8DC97164B613F; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player52.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player52.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player52.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player52.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335217,
        "wsConnectTime": 1757903335393,
        "firstChallengeTime": 1757903335719,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 52,
      "username": "player53",
      "password": "NeKvuEhw",
      "displayName": "Player_player53_351",
      "sessionCookie": "hunchentoot-session=43:356879253559C0AFE91F1AF227BF3DA1; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player53.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player53.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player53.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player53.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334527,
        "wsConnectTime": 1757903334706,
        "firstChallengeTime": 1757903335112,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 53,
      "username": "player54",
      "password": "bZbOdtO5",
      "displayName": "Player_player54_351",
      "sessionCookie": "hunchentoot-session=1:92F03E823D639DEB3CEEF6961DB8E055; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player54.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player54.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player54.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player54.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903331937,
        "wsConnectTime": 1757903332107,
        "firstChallengeTime": 1757903332493,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 54,
      "username": "player55",
      "password": "FVgMLoZu",
      "displayName": "Player_player55_351",
      "sessionCookie": "hunchentoot-session=77:9EB0CE6B6A218C5B35630783095FFB4B; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player55.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player55.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player55.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player55.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336544,
        "wsConnectTime": 1757903336694,
        "firstChallengeTime": 1757903337109,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 55,
      "username": "player56",
      "password": "fcamGiOQ",
      "displayName": "Player_player56_351",
      "sessionCookie": "hunchentoot-session=34:04057F1BE4AAF4291C9AF1A182AAD42A; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player56.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player56.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player56.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player56.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333765,
        "wsConnectTime": 1757903333901,
        "firstChallengeTime": 1757903334316,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 56,
      "username": "player57",
      "password": "0QAnpFhq",
      "displayName": "Player_player57_351",
      "sessionCookie": "hunchentoot-session=38:D6AE71B785A5E751166A13633D59D590; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player57.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player57.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player57.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player57.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334196,
        "wsConnectTime": 1757903334336,
        "firstChallengeTime": 1757903334699,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 57,
      "username": "player58",
      "password": "JbvG9vZr",
      "displayName": "Player_player58_351",
      "sessionCookie": "hunchentoot-session=5:9564E875A0CFF13873C4CF59E127F451; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player58.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player58.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player58.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player58.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332026,
        "wsConnectTime": 1757903332184,
        "firstChallengeTime": 1757903332534,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 58,
      "username": "player59",
      "password": "sKsjRqDY",
      "displayName": "Player_player59_351",
      "sessionCookie": "hunchentoot-session=53:BFF3ECBE901C9CA087628CBA5499BB7A; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player59.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player59.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player59.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player59.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335031,
        "wsConnectTime": 1757903335217,
        "firstChallengeTime": 1757903335605,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 59,
      "username": "player60",
      "password": "zedmL6Jt",
      "displayName": "Player_player60_351",
      "sessionCookie": "hunchentoot-session=26:653589F771AC689B9D0436ACAA9755A5; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player60.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player60.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player60.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player60.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333393,
        "wsConnectTime": 1757903333565,
        "firstChallengeTime": 1757903333909,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 60,
      "username": "player61",
      "password": "tP3rs0Ic",
      "displayName": "Player_player61_351",
      "sessionCookie": "hunchentoot-session=57:E9052EF202216E258704BA879A15C41C; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player61.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player61.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player61.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player61.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335259,
        "wsConnectTime": 1757903335471,
        "firstChallengeTime": 1757903335826,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 61,
      "username": "player62",
      "password": "3sf6XNEB",
      "displayName": "Player_player62_351",
      "sessionCookie": "hunchentoot-session=21:67FEB11CB9AB5E21E15A9237086F4A7D; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player62.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player62.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player62.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player62.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333170,
        "wsConnectTime": 1757903333357,
        "firstChallengeTime": 1757903333714,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 62,
      "username": "player63",
      "password": "0f6G8KyQ",
      "displayName": "Player_player63_351",
      "sessionCookie": "hunchentoot-session=36:02EEC1A78F83B352654AAC75FBB39C7C; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player63.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player63.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player63.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player63.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334118,
        "wsConnectTime": 1757903334262,
        "firstChallengeTime": 1757903334731,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 63,
      "username": "player64",
      "password": "FdleQ8ZC",
      "displayName": "Player_player64_351",
      "sessionCookie": "hunchentoot-session=69:A1FB8973C3B750F8DB2CD25737E1A00D; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player64.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player64.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player64.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player64.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336039,
        "wsConnectTime": 1757903336215,
        "firstChallengeTime": 1757903336601,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 64,
      "username": "player65",
      "password": "W7UBBqdP",
      "displayName": "Player_player65_351",
      "sessionCookie": "hunchentoot-session=22:DD4D4C3DF8E2F63FA6FFC922F612BF53; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player65.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player65.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player65.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player65.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333412,
        "wsConnectTime": 1757903333569,
        "firstChallengeTime": 1757903333984,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 65,
      "username": "player66",
      "password": "j09PE3oj",
      "displayName": "Player_player66_351",
      "sessionCookie": "hunchentoot-session=73:56D2A3F0404C18DC4F2C362CE53E3D85; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player66.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player66.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player66.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player66.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336167,
        "wsConnectTime": 1757903336336,
        "firstChallengeTime": 1757903336647,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 66,
      "username": "player67",
      "password": "KkSaye43",
      "displayName": "Player_player67_351",
      "sessionCookie": "hunchentoot-session=55:60C275721F8C991D0674851BB8DF464E; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player67.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player67.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player67.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player67.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335136,
        "wsConnectTime": 1757903335322,
        "firstChallengeTime": 1757903335726,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 67,
      "username": "player68",
      "password": "jx2UHkUg",
      "displayName": "Player_player68_351",
      "sessionCookie": "hunchentoot-session=70:A7CA517F98EC61D6CACEB8836E924AB1; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player68.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player68.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player68.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player68.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336071,
        "wsConnectTime": 1757903336226,
        "firstChallengeTime": 1757903336636,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 68,
      "username": "player69",
      "password": "URQsPEQe",
      "displayName": "Player_player69_351",
      "sessionCookie": "hunchentoot-session=31:6D2944E334114A432B10DC276F1F8AD3; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player69.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player69.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player69.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player69.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333739,
        "wsConnectTime": 1757903333883,
        "firstChallengeTime": 1757903334229,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 69,
      "username": "player70",
      "password": "IZCxOCus",
      "displayName": "Player_player70_351",
      "sessionCookie": "hunchentoot-session=78:36241B5854C1FA8507F6E4430C588511; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player70.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player70.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player70.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player70.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336621,
        "wsConnectTime": 1757903336800,
        "firstChallengeTime": 1757903337212,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 70,
      "username": "player71",
      "password": "UPxgYLMn",
      "displayName": "Player_player71_351",
      "sessionCookie": "hunchentoot-session=29:8440FE9328D07DDAE251DB6F8CCB29BF; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player71.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player71.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player71.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player71.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333519,
        "wsConnectTime": 1757903333673,
        "firstChallengeTime": 1757903334000,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 71,
      "username": "player72",
      "password": "azdZsW37",
      "displayName": "Player_player72_351",
      "sessionCookie": "hunchentoot-session=19:805FB8BE5BF73F00048F2E1FFC161E66; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player72.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player72.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player72.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player72.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903333025,
        "wsConnectTime": 1757903333194,
        "firstChallengeTime": 1757903333530,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 72,
      "username": "player73",
      "password": "a98qtiSN",
      "displayName": "Player_player73_351",
      "sessionCookie": "hunchentoot-session=39:B79EDE41D5384A525A35368C80543CC3; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player73.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player73.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player73.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player73.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334375,
        "wsConnectTime": 1757903334608,
        "firstChallengeTime": 1757903334974,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 73,
      "username": "player74",
      "password": "B7XdnVP2",
      "displayName": "Player_player74_351",
      "sessionCookie": "hunchentoot-session=17:84984A05416DF5DFA8226B2269A2FB9A; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player74.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player74.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player74.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player74.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903332645,
        "wsConnectTime": 1757903332794,
        "firstChallengeTime": 1757903333248,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 74,
      "username": "player75",
      "password": "J8lOkyxk",
      "displayName": "Player_player75_351",
      "sessionCookie": "hunchentoot-session=79:65AEC10B16AD036D2D414DDA8CA0CFD4; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player75.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player75.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player75.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player75.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336636,
        "wsConnectTime": 1757903336803,
        "firstChallengeTime": 1757903337153,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 75,
      "username": "player76",
      "password": "4RKO5Se4",
      "displayName": "Player_player76_351",
      "sessionCookie": "hunchentoot-session=48:9F03FA70DF00F0C30F48C09977BAA1D0; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player76.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player76.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player76.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player76.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334805,
        "wsConnectTime": 1757903334966,
        "firstChallengeTime": 1757903335656,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 76,
      "username": "player77",
      "password": "10MyENCI",
      "displayName": "Player_player77_351",
      "sessionCookie": "hunchentoot-session=76:A79FA1ECA8B07119418B83419B926341; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player77.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player77.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player77.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player77.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-kvxlc.kvxlc.sandbox5177.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903336417,
        "wsConnectTime": 1757903336599,
        "firstChallengeTime": 1757903336966,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 77,
      "username": "player78",
      "password": "Rs5w7l8J",
      "displayName": "Player_player78_351",
      "sessionCookie": "hunchentoot-session=44:8A4F495EA8A64258E33E0B08B44D06F2; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player78.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player78.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player78.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player78.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903337360,
        "wsConnectTime": 1757903337491,
        "firstChallengeTime": 1757903337796,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 78,
      "username": "player79",
      "password": "P1D6s1QS",
      "displayName": "Player_player79_351",
      "sessionCookie": "hunchentoot-session=49:B4889390567C5607C75C80F571B33011; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player79.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player79.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player79.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player79.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903334968,
        "wsConnectTime": 1757903335158,
        "firstChallengeTime": 1757903335552,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 79,
      "username": "player80",
      "password": "VoNH23Sv",
      "displayName": "Player_player80_351",
      "sessionCookie": "hunchentoot-session=59:6C5DF5007DE06B1CE36239B1739EBA5C; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player80.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player80.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player80.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player80.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335281,
        "wsConnectTime": 1757903335472,
        "firstChallengeTime": 1757903335868,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    },
    {
      "id": 80,
      "username": "player81",
      "password": "5DTuKnCh",
      "displayName": "Player_player81_351",
      "sessionCookie": "hunchentoot-session=61:A211BD2596488E8801E8D0982F86F12A; Path=/; HttpOnly",
      "ws": null,
      "wsConnected": false,
      "wsConnectTime": null,
      "solvedChallenges": {},
      "availableChallenges": [
        {
          "id": 15,
          "title": "The Traveling Sailor",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "Now that you can compute the distance between any two islands, let's do something more ambitious!<br><br>It would be nice if you could visit every island listed by **mapster**'s `/maps` API, but you'll want to minimize your time at sea. It's time to calculate the shortest path that visits every island. The list of islands isn't very long, so you can probably brute force this!<br><br>You don't know which island you're starting from, so let's just look for the shortest path starting on any island. More specifically, check the shortest path starting from each island and visiting every other one. The answer is the shortest one of those. Once again, be sure to round your answer to the nearest kilometer.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 14,
          "title": "Island Hopping",
          "category": "Island APIs",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "The **mapster** peer-to-peer map sharing application you've deployed provides a very useful service: island coordinate sharing.<br><br>The mapster `/maps` API should return text output where each row represents the X and Y coordinates of an island on a simple grid. Each grid unit represents one kilometer.<br><br>If only you could travel from one island to another... But how far apart are they? Start your journey by computing the distance (km) between the first two islands on the list. Round your answer to the nearest kilometer.",
          "hints": [
            {
              "id": 1,
              "cost": 10
            }
          ],
          "content": null
        },
        {
          "id": 13,
          "title": "Message in a Bottle",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 125,
          "solved": true,
          "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.<br><br>\n## Objective:\n<br>Develop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.<br><br>\n## Specifications:\n**Endpoint**: `POST /collect-bottles`<br>\n**Input**: JSON body containing a list of JSON objects, each containing:\n- `character`: A single non-space character in the bottle\n- `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\n\nExample input:\n```json\n[\n  {\n    \"character\": \"H\",\n    \"coordinates\": {\n      \"x\": 0,\n      \"y\": 1\n    }\n  },\n  {\n    \"character\": \"$\",\n    \"coordinates\": {\n      \"x\": 12,\n      \"y\": 5\n    }\n  }\n]\n```\n<br>Note that you don't know the dimensions of the grid, or the orientation of the message.<br>Once you have the flag text, enter it in the field below.<br>You will receive bottles at https://bottles-player81.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/collect-bottles.\n<br><br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 12,
          "title": "Morse Coding",
          "category": "Island APIs",
          "difficulty": "Hard",
          "points": 100,
          "solved": true,
          "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.<br><br>\n## Objective:\n<br>Develop an API service that can receive a Morse code message and extract the hidden flag. Not all messages will contain the flag. A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.<br><br>\n## Specifications:\n<br>**Endpoint:** POST /decode-morse<br><br>**Input:**<br><br>JSON body with a key named message containing the Morse code string.<br><br>Example: `{ \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }`<br><br>**Functional Requirements:**<br>\n- The service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\n- The API should focus on extracting the flag pattern and decoding it.\n- Submit the flag below once you've received the flag message!<br><br>The morse code sender must be able to access your service at https://morse-player81.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/decode-morse.<br>\n## Links:\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 11,
          "title": "Persistence Pays Off",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 30,
          "solved": true,
          "description": "There's a treasure key stored on a Persistent Volume!<br><br>Your namespace already includes a Persistent Volume Claim called **treasure-key-pvc**. Mount the volume into a container and access `mykey.txt`. The text flag you're looking for is in that file.",
          "hints": [
            {
              "id": 1,
              "cost": 1
            },
            {
              "id": 2,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 10,
          "title": "Journal",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island. If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!<br><br>What is the final journal entry for the most skilled explorer?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 9,
          "title": "Top Explorer",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 40,
          "solved": true,
          "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers! They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap, then deploy a postgresql database using one of the database application templates on OpenShift's **Add** page.<br><br>Interestingly, in addition to the personal logs, the SQL tables also includes skill assessment scores for every explorer across a number of IT survival skills.<br><br>What's the name of the explorer with the highest aggregate skills score?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 3
            },
            {
              "id": 2,
              "cost": 3
            },
            {
              "id": 3,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 8,
          "title": "Aloha!",
          "category": "SurvivalOps",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "While the island appears tropical, there are few other clues to help you identify your location. Are you in Hawai'i? Maybe \"aloha\" is the customary greeting on this island.<br><br>Add a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://aloha-player81.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/<br><br>The response from the new route will be your flag<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 7,
          "title": "Scrambled Islands",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 20,
          "solved": true,
          "description": "Now that **mapster** is running, you can try to access it.<br><br>One of the services mapster provides is island imagery. Imagery is available through a simple REST API: `/island/X`, where X is an integer 1 or greater.<br><br>As you examine the images, it dawns on you that you are looking at the *Alphabet Island* chain, where islands are all shaped like letters. Look at the first four island images, and rearrange them to form a word.<br><br>What useful item do the rearranged letters spell?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 6,
          "title": "mapster",
          "category": "SurvivalOps",
          "difficulty": "Medium",
          "points": 50,
          "solved": true,
          "description": "You come across an old notebook that references the famous peer-to-peer map sharing application **mapster**. The notes say that mapster is available in a public container registry at `quay.io/atgreen0/mapster:latest`.<br><br>Try deploying mapster in your namespace. Once deployed and running, it should connect to the mapster peer network.<br><br>How many peers was mapster able to connect to?<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 5
            }
          ],
          "content": null
        },
        {
          "id": 5,
          "title": "Treasure Map",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 15,
          "solved": true,
          "description": "Jackpot! There's a treasure map hidden in a ConfigMap! It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 4,
          "title": "Native Java",
          "category": "Treasure Hunts",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log in the OpenShift console using your username/password.<br><br>In the top/left, make sure you are in the \"Developer\" view. In this view, your first option in the left menu is \"+Add\". This page helps you quickly build services from different sources.<br><br>Under \"Getting started resources\", you'll find a \"Create applications using samples\" section. What language comes first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": null,
          "content": null
        },
        {
          "id": 3,
          "title": "Unlock the island",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 11,
          "solved": true,
          "description": "Wait for the game master to provide a KEY to unlock the rest of the island.<br><br>Enter this key in the flag section and click submit.",
          "hints": null,
          "content": null
        },
        {
          "id": 2,
          "title": "Hello World",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Your gitea account includes a project called `python-starter`.  Deploy it in your OCP namespace. This will deploy a webserver with the FLAG you must capture!<br><br>Once deployed, it should be here: https://hello-player81.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/ .<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **gitea**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com\n- **starters**: https://gitea-gitea.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com/starter<br>",
          "hints": null,
          "content": null
        },
        {
          "id": 1,
          "title": "Kubernetes version",
          "category": "Warm Up",
          "difficulty": "Easy",
          "points": 10,
          "solved": true,
          "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.<br><br>\n## Links:\n- **ocp**: https://console-openshift-console.apps.cluster-5ffsb.5ffsb.sandbox5427.opentlc.com",
          "hints": [
            {
              "id": 1,
              "cost": 0
            }
          ],
          "content": null
        }
      ],
      "metrics": {
        "startTime": 1757903331351,
        "loginTime": 1757903335463,
        "wsConnectTime": 1757903335670,
        "firstChallengeTime": 1757903336073,
        "challengesSolved": 15,
        "flagsSubmitted": 15,
        "errors": []
      },
      "wsUrl": "wss://scorestream-ctfg.apps.cluster-5zk99.5zk99.sandbox548.opentlc.com:443/scorestream",
      "pingInterval": null
    }
  ],
  "totals": {
    "loginAttempts": 80,
    "loginSuccess": 80,
    "wsConnections": 80,
    "wsSuccessful": 80,
    "flagSubmissions": 1200,
    "flagsCorrect": 1200,
    "challengesLoaded": 0,
    "staticFilesLoaded": 320,
    "errors": []
  },
  "timeline": [
    {
      "timestamp": 1757903331540,
      "category": "static_file_loaded",
      "value": 142,
      "playerId": 43
    },
    {
      "timestamp": 1757903331549,
      "category": "static_file_loaded",
      "value": 120,
      "playerId": 19
    },
    {
      "timestamp": 1757903331557,
      "category": "static_file_loaded",
      "value": 104,
      "playerId": 53
    },
    {
      "timestamp": 1757903331565,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 43
    },
    {
      "timestamp": 1757903331576,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 19
    },
    {
      "timestamp": 1757903331582,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 53
    },
    {
      "timestamp": 1757903331598,
      "category": "static_file_loaded",
      "value": 107,
      "playerId": 42
    },
    {
      "timestamp": 1757903331602,
      "category": "static_file_loaded",
      "value": 104,
      "playerId": 57
    },
    {
      "timestamp": 1757903331624,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 42
    },
    {
      "timestamp": 1757903331626,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 57
    },
    {
      "timestamp": 1757903331695,
      "category": "static_file_loaded",
      "value": 111,
      "playerId": 46
    },
    {
      "timestamp": 1757903331724,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 46
    },
    {
      "timestamp": 1757903331745,
      "category": "static_file_loaded",
      "value": 163,
      "playerId": 53
    },
    {
      "timestamp": 1757903331748,
      "category": "static_file_loaded",
      "value": 183,
      "playerId": 43
    },
    {
      "timestamp": 1757903331767,
      "category": "static_file_loaded",
      "value": 191,
      "playerId": 19
    },
    {
      "timestamp": 1757903331769,
      "category": "static_file_loaded",
      "value": 114,
      "playerId": 23
    },
    {
      "timestamp": 1757903331770,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 53
    },
    {
      "timestamp": 1757903331773,
      "category": "static_file_loaded",
      "value": 149,
      "playerId": 42
    },
    {
      "timestamp": 1757903331774,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 43
    },
    {
      "timestamp": 1757903331794,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 19
    },
    {
      "timestamp": 1757903331795,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 23
    },
    {
      "timestamp": 1757903331799,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 42
    },
    {
      "timestamp": 1757903331809,
      "category": "static_file_loaded",
      "value": 181,
      "playerId": 57
    },
    {
      "timestamp": 1757903331810,
      "category": "static_file_loaded",
      "value": 117,
      "playerId": 49
    },
    {
      "timestamp": 1757903331834,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 57
    },
    {
      "timestamp": 1757903331835,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 49
    },
    {
      "timestamp": 1757903331845,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 1
    },
    {
      "timestamp": 1757903331850,
      "category": "static_file_loaded",
      "value": 110,
      "playerId": 45
    },
    {
      "timestamp": 1757903331870,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 1
    },
    {
      "timestamp": 1757903331876,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 45
    },
    {
      "timestamp": 1757903331890,
      "category": "static_file_loaded",
      "value": 166,
      "playerId": 46
    },
    {
      "timestamp": 1757903331923,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 46
    },
    {
      "timestamp": 1757903331936,
      "category": "static_file_loaded",
      "value": 64,
      "playerId": 1
    },
    {
      "timestamp": 1757903331936,
      "category": "login_attempt",
      "value": 42,
      "playerId": 19
    },
    {
      "timestamp": 1757903331936,
      "category": "login_success",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903331937,
      "category": "login_attempt",
      "value": 64,
      "playerId": 53
    },
    {
      "timestamp": 1757903331937,
      "category": "login_success",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903331942,
      "category": "login_attempt",
      "value": 65,
      "playerId": 43
    },
    {
      "timestamp": 1757903331942,
      "category": "login_success",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903331942,
      "category": "login_attempt",
      "value": 38,
      "playerId": 42
    },
    {
      "timestamp": 1757903331942,
      "category": "login_success",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903331951,
      "category": "static_file_loaded",
      "value": 156,
      "playerId": 23
    },
    {
      "timestamp": 1757903331954,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 5
    },
    {
      "timestamp": 1757903331963,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 1
    },
    {
      "timestamp": 1757903331978,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 23
    },
    {
      "timestamp": 1757903331980,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 5
    },
    {
      "timestamp": 1757903332023,
      "category": "static_file_loaded",
      "value": 188,
      "playerId": 49
    },
    {
      "timestamp": 1757903332025,
      "category": "static_file_loaded",
      "value": 40,
      "playerId": 44
    },
    {
      "timestamp": 1757903332025,
      "category": "login_attempt",
      "value": 92,
      "playerId": 57
    },
    {
      "timestamp": 1757903332026,
      "category": "login_success",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903332027,
      "category": "static_file_loaded",
      "value": 151,
      "playerId": 45
    },
    {
      "timestamp": 1757903332049,
      "category": "static_file_loaded",
      "value": 69,
      "playerId": 5
    },
    {
      "timestamp": 1757903332051,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 49
    },
    {
      "timestamp": 1757903332052,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 45
    },
    {
      "timestamp": 1757903332052,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 44
    },
    {
      "timestamp": 1757903332053,
      "category": "login_attempt",
      "value": 29,
      "playerId": 46
    },
    {
      "timestamp": 1757903332053,
      "category": "login_success",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332100,
      "category": "static_file_loaded",
      "value": 50,
      "playerId": 5
    },
    {
      "timestamp": 1757903332107,
      "category": "websocket_connected",
      "value": 116,
      "playerId": 53
    },
    {
      "timestamp": 1757903332109,
      "category": "login_attempt",
      "value": 42,
      "playerId": 1
    },
    {
      "timestamp": 1757903332109,
      "category": "login_success",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332111,
      "category": "websocket_connected",
      "value": 124,
      "playerId": 19
    },
    {
      "timestamp": 1757903332123,
      "category": "login_attempt",
      "value": 43,
      "playerId": 23
    },
    {
      "timestamp": 1757903332123,
      "category": "login_success",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332129,
      "category": "websocket_connected",
      "value": 130,
      "playerId": 42
    },
    {
      "timestamp": 1757903332131,
      "category": "static_file_loaded",
      "value": 79,
      "playerId": 44
    },
    {
      "timestamp": 1757903332132,
      "category": "websocket_connected",
      "value": 135,
      "playerId": 43
    },
    {
      "timestamp": 1757903332158,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 44
    },
    {
      "timestamp": 1757903332177,
      "category": "login_attempt",
      "value": 26,
      "playerId": 49
    },
    {
      "timestamp": 1757903332177,
      "category": "login_success",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903332181,
      "category": "login_attempt",
      "value": 29,
      "playerId": 45
    },
    {
      "timestamp": 1757903332181,
      "category": "login_success",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903332184,
      "category": "websocket_connected",
      "value": 108,
      "playerId": 57
    },
    {
      "timestamp": 1757903332196,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 16
    },
    {
      "timestamp": 1757903332203,
      "category": "websocket_connected",
      "value": 94,
      "playerId": 46
    },
    {
      "timestamp": 1757903332218,
      "category": "static_file_loaded",
      "value": 22,
      "playerId": 16
    },
    {
      "timestamp": 1757903332230,
      "category": "login_attempt",
      "value": 30,
      "playerId": 5
    },
    {
      "timestamp": 1757903332230,
      "category": "login_success",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903332233,
      "category": "websocket_connected",
      "value": 75,
      "playerId": 1
    },
    {
      "timestamp": 1757903332253,
      "category": "websocket_connected",
      "value": 79,
      "playerId": 23
    },
    {
      "timestamp": 1757903332260,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 9
    },
    {
      "timestamp": 1757903332261,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 24
    },
    {
      "timestamp": 1757903332275,
      "category": "static_file_loaded",
      "value": 57,
      "playerId": 16
    },
    {
      "timestamp": 1757903332284,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 24
    },
    {
      "timestamp": 1757903332285,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 9
    },
    {
      "timestamp": 1757903332286,
      "category": "login_attempt",
      "value": 28,
      "playerId": 44
    },
    {
      "timestamp": 1757903332286,
      "category": "login_success",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903332298,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 16
    },
    {
      "timestamp": 1757903332306,
      "category": "websocket_connected",
      "value": 77,
      "playerId": 49
    },
    {
      "timestamp": 1757903332307,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 29
    },
    {
      "timestamp": 1757903332327,
      "category": "websocket_connected",
      "value": 96,
      "playerId": 45
    },
    {
      "timestamp": 1757903332338,
      "category": "static_file_loaded",
      "value": 31,
      "playerId": 29
    },
    {
      "timestamp": 1757903332361,
      "category": "static_file_loaded",
      "value": 77,
      "playerId": 24
    },
    {
      "timestamp": 1757903332372,
      "category": "static_file_loaded",
      "value": 87,
      "playerId": 9
    },
    {
      "timestamp": 1757903332389,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 73
    },
    {
      "timestamp": 1757903332390,
      "category": "websocket_connected",
      "value": 108,
      "playerId": 5
    },
    {
      "timestamp": 1757903332391,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 24
    },
    {
      "timestamp": 1757903332396,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 9
    },
    {
      "timestamp": 1757903332400,
      "category": "static_file_loaded",
      "value": 62,
      "playerId": 29
    },
    {
      "timestamp": 1757903332413,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 73
    },
    {
      "timestamp": 1757903332417,
      "category": "websocket_connected",
      "value": 81,
      "playerId": 44
    },
    {
      "timestamp": 1757903332428,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 29
    },
    {
      "timestamp": 1757903332428,
      "category": "login_attempt",
      "value": 29,
      "playerId": 16
    },
    {
      "timestamp": 1757903332428,
      "category": "login_success",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903332470,
      "category": "submit_flag",
      "value": 36,
      "playerId": 19
    },
    {
      "timestamp": 1757903332470,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903332473,
      "category": "submit_flag",
      "value": 28,
      "playerId": 42
    },
    {
      "timestamp": 1757903332473,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903332476,
      "category": "submit_flag",
      "value": 37,
      "playerId": 19
    },
    {
      "timestamp": 1757903332476,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903332488,
      "category": "static_file_loaded",
      "value": 75,
      "playerId": 73
    },
    {
      "timestamp": 1757903332489,
      "category": "submit_flag",
      "value": 39,
      "playerId": 43
    },
    {
      "timestamp": 1757903332489,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903332492,
      "category": "submit_flag",
      "value": 33,
      "playerId": 53
    },
    {
      "timestamp": 1757903332493,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903332493,
      "category": "submit_flag",
      "value": 30,
      "playerId": 42
    },
    {
      "timestamp": 1757903332493,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903332504,
      "category": "submit_flag",
      "value": 35,
      "playerId": 53
    },
    {
      "timestamp": 1757903332504,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903332506,
      "category": "submit_flag",
      "value": 37,
      "playerId": 43
    },
    {
      "timestamp": 1757903332506,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903332513,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 73
    },
    {
      "timestamp": 1757903332519,
      "category": "submit_flag",
      "value": 29,
      "playerId": 46
    },
    {
      "timestamp": 1757903332519,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332533,
      "category": "submit_flag",
      "value": 26,
      "playerId": 57
    },
    {
      "timestamp": 1757903332534,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903332560,
      "category": "login_attempt",
      "value": 32,
      "playerId": 29
    },
    {
      "timestamp": 1757903332560,
      "category": "login_success",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903332562,
      "category": "submit_flag",
      "value": 31,
      "playerId": 1
    },
    {
      "timestamp": 1757903332562,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332565,
      "category": "submit_flag",
      "value": 28,
      "playerId": 46
    },
    {
      "timestamp": 1757903332565,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332570,
      "category": "submit_flag",
      "value": 29,
      "playerId": 46
    },
    {
      "timestamp": 1757903332570,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332577,
      "category": "submit_flag",
      "value": 29,
      "playerId": 1
    },
    {
      "timestamp": 1757903332577,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332582,
      "category": "submit_flag",
      "value": 105,
      "playerId": 57
    },
    {
      "timestamp": 1757903332582,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903332583,
      "category": "websocket_connected",
      "value": 103,
      "playerId": 16
    },
    {
      "timestamp": 1757903332585,
      "category": "submit_flag",
      "value": 95,
      "playerId": 42
    },
    {
      "timestamp": 1757903332585,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903332590,
      "category": "login_attempt",
      "value": 95,
      "playerId": 24
    },
    {
      "timestamp": 1757903332590,
      "category": "login_success",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903332597,
      "category": "submit_flag",
      "value": 122,
      "playerId": 53
    },
    {
      "timestamp": 1757903332597,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903332599,
      "category": "submit_flag",
      "value": 101,
      "playerId": 43
    },
    {
      "timestamp": 1757903332599,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903332606,
      "category": "login_attempt",
      "value": 105,
      "playerId": 9
    },
    {
      "timestamp": 1757903332606,
      "category": "login_success",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903332609,
      "category": "submit_flag",
      "value": 30,
      "playerId": 23
    },
    {
      "timestamp": 1757903332609,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332610,
      "category": "static_file_loaded",
      "value": 110,
      "playerId": 71
    },
    {
      "timestamp": 1757903332613,
      "category": "submit_flag",
      "value": 29,
      "playerId": 49
    },
    {
      "timestamp": 1757903332613,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903332620,
      "category": "submit_flag",
      "value": 34,
      "playerId": 23
    },
    {
      "timestamp": 1757903332620,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332623,
      "category": "submit_flag",
      "value": 27,
      "playerId": 23
    },
    {
      "timestamp": 1757903332623,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332625,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 31
    },
    {
      "timestamp": 1757903332632,
      "category": "submit_flag",
      "value": 29,
      "playerId": 1
    },
    {
      "timestamp": 1757903332632,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332635,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 71
    },
    {
      "timestamp": 1757903332645,
      "category": "login_attempt",
      "value": 31,
      "playerId": 73
    },
    {
      "timestamp": 1757903332645,
      "category": "login_success",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903332650,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 31
    },
    {
      "timestamp": 1757903332654,
      "category": "submit_flag",
      "value": 94,
      "playerId": 57
    },
    {
      "timestamp": 1757903332654,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903332674,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 32
    },
    {
      "timestamp": 1757903332697,
      "category": "static_file_loaded",
      "value": 47,
      "playerId": 31
    },
    {
      "timestamp": 1757903332703,
      "category": "submit_flag",
      "value": 207,
      "playerId": 19
    },
    {
      "timestamp": 1757903332703,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903332707,
      "category": "submit_flag",
      "value": 55,
      "playerId": 49
    },
    {
      "timestamp": 1757903332708,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903332708,
      "category": "websocket_connected",
      "value": 97,
      "playerId": 29
    },
    {
      "timestamp": 1757903332714,
      "category": "submit_flag",
      "value": 47,
      "playerId": 45
    },
    {
      "timestamp": 1757903332714,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903332715,
      "category": "static_file_loaded",
      "value": 41,
      "playerId": 32
    },
    {
      "timestamp": 1757903332716,
      "category": "submit_flag",
      "value": 44,
      "playerId": 45
    },
    {
      "timestamp": 1757903332717,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903332723,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 31
    },
    {
      "timestamp": 1757903332732,
      "category": "submit_flag",
      "value": 34,
      "playerId": 49
    },
    {
      "timestamp": 1757903332732,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903332736,
      "category": "submit_flag",
      "value": 38,
      "playerId": 45
    },
    {
      "timestamp": 1757903332737,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903332738,
      "category": "websocket_connected",
      "value": 98,
      "playerId": 24
    },
    {
      "timestamp": 1757903332744,
      "category": "submit_flag",
      "value": 28,
      "playerId": 5
    },
    {
      "timestamp": 1757903332744,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903332752,
      "category": "websocket_connected",
      "value": 96,
      "playerId": 9
    },
    {
      "timestamp": 1757903332768,
      "category": "submit_flag",
      "value": 70,
      "playerId": 5
    },
    {
      "timestamp": 1757903332768,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903332770,
      "category": "submit_flag",
      "value": 36,
      "playerId": 5
    },
    {
      "timestamp": 1757903332770,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903332772,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 50
    },
    {
      "timestamp": 1757903332772,
      "category": "submit_flag",
      "value": 38,
      "playerId": 44
    },
    {
      "timestamp": 1757903332772,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903332787,
      "category": "submit_flag",
      "value": 29,
      "playerId": 44
    },
    {
      "timestamp": 1757903332787,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903332794,
      "category": "websocket_connected",
      "value": 95,
      "playerId": 73
    },
    {
      "timestamp": 1757903332796,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 50
    },
    {
      "timestamp": 1757903332797,
      "category": "submit_flag",
      "value": 30,
      "playerId": 44
    },
    {
      "timestamp": 1757903332797,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903332805,
      "category": "submit_flag",
      "value": 33,
      "playerId": 42
    },
    {
      "timestamp": 1757903332805,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903332818,
      "category": "submit_flag",
      "value": 29,
      "playerId": 46
    },
    {
      "timestamp": 1757903332818,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332836,
      "category": "submit_flag",
      "value": 41,
      "playerId": 53
    },
    {
      "timestamp": 1757903332836,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903332839,
      "category": "submit_flag",
      "value": 40,
      "playerId": 46
    },
    {
      "timestamp": 1757903332839,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332840,
      "category": "submit_flag",
      "value": 36,
      "playerId": 42
    },
    {
      "timestamp": 1757903332840,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903332841,
      "category": "submit_flag",
      "value": 32,
      "playerId": 23
    },
    {
      "timestamp": 1757903332841,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332842,
      "category": "submit_flag",
      "value": 30,
      "playerId": 42
    },
    {
      "timestamp": 1757903332842,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903332852,
      "category": "static_file_loaded",
      "value": 217,
      "playerId": 71
    },
    {
      "timestamp": 1757903332853,
      "category": "submit_flag",
      "value": 43,
      "playerId": 46
    },
    {
      "timestamp": 1757903332853,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903332854,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 12
    },
    {
      "timestamp": 1757903332859,
      "category": "submit_flag",
      "value": 31,
      "playerId": 43
    },
    {
      "timestamp": 1757903332859,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903332859,
      "category": "login_attempt",
      "value": 31,
      "playerId": 31
    },
    {
      "timestamp": 1757903332860,
      "category": "login_success",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903332866,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 64
    },
    {
      "timestamp": 1757903332869,
      "category": "static_file_loaded",
      "value": 154,
      "playerId": 32
    },
    {
      "timestamp": 1757903332870,
      "category": "submit_flag",
      "value": 32,
      "playerId": 53
    },
    {
      "timestamp": 1757903332870,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903332877,
      "category": "submit_flag",
      "value": 33,
      "playerId": 1
    },
    {
      "timestamp": 1757903332877,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332878,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 71
    },
    {
      "timestamp": 1757903332878,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 12
    },
    {
      "timestamp": 1757903332879,
      "category": "submit_flag",
      "value": 30,
      "playerId": 53
    },
    {
      "timestamp": 1757903332879,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903332884,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 61
    },
    {
      "timestamp": 1757903332884,
      "category": "submit_flag",
      "value": 27,
      "playerId": 43
    },
    {
      "timestamp": 1757903332884,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903332888,
      "category": "submit_flag",
      "value": 31,
      "playerId": 23
    },
    {
      "timestamp": 1757903332888,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332893,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 32
    },
    {
      "timestamp": 1757903332893,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 64
    },
    {
      "timestamp": 1757903332898,
      "category": "submit_flag",
      "value": 38,
      "playerId": 23
    },
    {
      "timestamp": 1757903332898,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903332902,
      "category": "submit_flag",
      "value": 28,
      "playerId": 1
    },
    {
      "timestamp": 1757903332902,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332919,
      "category": "submit_flag",
      "value": 44,
      "playerId": 43
    },
    {
      "timestamp": 1757903332919,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903332924,
      "category": "static_file_loaded",
      "value": 40,
      "playerId": 61
    },
    {
      "timestamp": 1757903332957,
      "category": "static_file_loaded",
      "value": 64,
      "playerId": 64
    },
    {
      "timestamp": 1757903332982,
      "category": "static_file_loaded",
      "value": 58,
      "playerId": 61
    },
    {
      "timestamp": 1757903332983,
      "category": "submit_flag",
      "value": 123,
      "playerId": 1
    },
    {
      "timestamp": 1757903332983,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903332994,
      "category": "static_file_loaded",
      "value": 115,
      "playerId": 12
    },
    {
      "timestamp": 1757903332996,
      "category": "static_file_loaded",
      "value": 74,
      "playerId": 59
    },
    {
      "timestamp": 1757903332997,
      "category": "submit_flag",
      "value": 75,
      "playerId": 19
    },
    {
      "timestamp": 1757903332997,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333003,
      "category": "static_file_loaded",
      "value": 46,
      "playerId": 64
    },
    {
      "timestamp": 1757903333003,
      "category": "submit_flag",
      "value": 45,
      "playerId": 19
    },
    {
      "timestamp": 1757903333003,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333004,
      "category": "submit_flag",
      "value": 44,
      "playerId": 57
    },
    {
      "timestamp": 1757903333004,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333004,
      "category": "submit_flag",
      "value": 45,
      "playerId": 45
    },
    {
      "timestamp": 1757903333004,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333006,
      "category": "static_file_loaded",
      "value": 210,
      "playerId": 50
    },
    {
      "timestamp": 1757903333007,
      "category": "submit_flag",
      "value": 49,
      "playerId": 57
    },
    {
      "timestamp": 1757903333007,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333008,
      "category": "static_file_loaded",
      "value": 146,
      "playerId": 48
    },
    {
      "timestamp": 1757903333009,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 61
    },
    {
      "timestamp": 1757903333019,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 12
    },
    {
      "timestamp": 1757903333020,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 59
    },
    {
      "timestamp": 1757903333022,
      "category": "submit_flag",
      "value": 63,
      "playerId": 19
    },
    {
      "timestamp": 1757903333022,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333025,
      "category": "login_attempt",
      "value": 27,
      "playerId": 71
    },
    {
      "timestamp": 1757903333025,
      "category": "login_success",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903333030,
      "category": "login_attempt",
      "value": 32,
      "playerId": 32
    },
    {
      "timestamp": 1757903333030,
      "category": "login_success",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903333033,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 50
    },
    {
      "timestamp": 1757903333034,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 48
    },
    {
      "timestamp": 1757903333035,
      "category": "submit_flag",
      "value": 30,
      "playerId": 45
    },
    {
      "timestamp": 1757903333035,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333038,
      "category": "submit_flag",
      "value": 30,
      "playerId": 45
    },
    {
      "timestamp": 1757903333038,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333041,
      "category": "submit_flag",
      "value": 82,
      "playerId": 57
    },
    {
      "timestamp": 1757903333041,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333045,
      "category": "submit_flag",
      "value": 47,
      "playerId": 49
    },
    {
      "timestamp": 1757903333045,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333052,
      "category": "submit_flag",
      "value": 31,
      "playerId": 49
    },
    {
      "timestamp": 1757903333052,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333055,
      "category": "submit_flag",
      "value": 29,
      "playerId": 44
    },
    {
      "timestamp": 1757903333056,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903333061,
      "category": "submit_flag",
      "value": 62,
      "playerId": 49
    },
    {
      "timestamp": 1757903333061,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333065,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 21
    },
    {
      "timestamp": 1757903333068,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 22
    },
    {
      "timestamp": 1757903333071,
      "category": "submit_flag",
      "value": 47,
      "playerId": 5
    },
    {
      "timestamp": 1757903333071,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333077,
      "category": "websocket_connected",
      "value": 157,
      "playerId": 31
    },
    {
      "timestamp": 1757903333080,
      "category": "submit_flag",
      "value": 81,
      "playerId": 5
    },
    {
      "timestamp": 1757903333080,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333090,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 21
    },
    {
      "timestamp": 1757903333092,
      "category": "submit_flag",
      "value": 92,
      "playerId": 5
    },
    {
      "timestamp": 1757903333092,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333093,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 22
    },
    {
      "timestamp": 1757903333102,
      "category": "submit_flag",
      "value": 33,
      "playerId": 24
    },
    {
      "timestamp": 1757903333102,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903333106,
      "category": "submit_flag",
      "value": 35,
      "playerId": 16
    },
    {
      "timestamp": 1757903333106,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903333110,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 14
    },
    {
      "timestamp": 1757903333110,
      "category": "submit_flag",
      "value": 33,
      "playerId": 9
    },
    {
      "timestamp": 1757903333110,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333136,
      "category": "submit_flag",
      "value": 53,
      "playerId": 42
    },
    {
      "timestamp": 1757903333136,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333138,
      "category": "submit_flag",
      "value": 49,
      "playerId": 53
    },
    {
      "timestamp": 1757903333138,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333151,
      "category": "static_file_loaded",
      "value": 61,
      "playerId": 21
    },
    {
      "timestamp": 1757903333157,
      "category": "submit_flag",
      "value": 67,
      "playerId": 9
    },
    {
      "timestamp": 1757903333157,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333158,
      "category": "submit_flag",
      "value": 64,
      "playerId": 44
    },
    {
      "timestamp": 1757903333158,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903333161,
      "category": "static_file_loaded",
      "value": 51,
      "playerId": 14
    },
    {
      "timestamp": 1757903333162,
      "category": "submit_flag",
      "value": 60,
      "playerId": 44
    },
    {
      "timestamp": 1757903333162,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903333169,
      "category": "submit_flag",
      "value": 67,
      "playerId": 46
    },
    {
      "timestamp": 1757903333169,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903333170,
      "category": "login_attempt",
      "value": 55,
      "playerId": 61
    },
    {
      "timestamp": 1757903333170,
      "category": "login_success",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903333177,
      "category": "submit_flag",
      "value": 90,
      "playerId": 9
    },
    {
      "timestamp": 1757903333177,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333178,
      "category": "submit_flag",
      "value": 63,
      "playerId": 46
    },
    {
      "timestamp": 1757903333178,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903333181,
      "category": "submit_flag",
      "value": 84,
      "playerId": 53
    },
    {
      "timestamp": 1757903333181,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333183,
      "category": "submit_flag",
      "value": 80,
      "playerId": 53
    },
    {
      "timestamp": 1757903333183,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333183,
      "category": "submit_flag",
      "value": 96,
      "playerId": 16
    },
    {
      "timestamp": 1757903333183,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903333192,
      "category": "static_file_loaded",
      "value": 41,
      "playerId": 21
    },
    {
      "timestamp": 1757903333192,
      "category": "submit_flag",
      "value": 96,
      "playerId": 24
    },
    {
      "timestamp": 1757903333192,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903333194,
      "category": "websocket_connected",
      "value": 118,
      "playerId": 71
    },
    {
      "timestamp": 1757903333210,
      "category": "websocket_connected",
      "value": 129,
      "playerId": 32
    },
    {
      "timestamp": 1757903333215,
      "category": "submit_flag",
      "value": 127,
      "playerId": 29
    },
    {
      "timestamp": 1757903333215,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333233,
      "category": "submit_flag",
      "value": 46,
      "playerId": 23
    },
    {
      "timestamp": 1757903333234,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333238,
      "category": "static_file_loaded",
      "value": 218,
      "playerId": 59
    },
    {
      "timestamp": 1757903333242,
      "category": "submit_flag",
      "value": 53,
      "playerId": 23
    },
    {
      "timestamp": 1757903333242,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333242,
      "category": "submit_flag",
      "value": 136,
      "playerId": 42
    },
    {
      "timestamp": 1757903333242,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333248,
      "category": "submit_flag",
      "value": 43,
      "playerId": 73
    },
    {
      "timestamp": 1757903333248,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333258,
      "category": "submit_flag",
      "value": 70,
      "playerId": 43
    },
    {
      "timestamp": 1757903333258,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903333259,
      "category": "submit_flag",
      "value": 121,
      "playerId": 42
    },
    {
      "timestamp": 1757903333259,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333259,
      "category": "submit_flag",
      "value": 116,
      "playerId": 16
    },
    {
      "timestamp": 1757903333259,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903333262,
      "category": "submit_flag",
      "value": 46,
      "playerId": 73
    },
    {
      "timestamp": 1757903333262,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333264,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 59
    },
    {
      "timestamp": 1757903333265,
      "category": "static_file_loaded",
      "value": 230,
      "playerId": 48
    },
    {
      "timestamp": 1757903333266,
      "category": "submit_flag",
      "value": 30,
      "playerId": 45
    },
    {
      "timestamp": 1757903333266,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333268,
      "category": "submit_flag",
      "value": 34,
      "playerId": 43
    },
    {
      "timestamp": 1757903333268,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903333271,
      "category": "submit_flag",
      "value": 155,
      "playerId": 29
    },
    {
      "timestamp": 1757903333271,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333271,
      "category": "submit_flag",
      "value": 65,
      "playerId": 23
    },
    {
      "timestamp": 1757903333271,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333273,
      "category": "submit_flag",
      "value": 129,
      "playerId": 46
    },
    {
      "timestamp": 1757903333273,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903333277,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 70
    },
    {
      "timestamp": 1757903333283,
      "category": "submit_flag",
      "value": 34,
      "playerId": 1
    },
    {
      "timestamp": 1757903333283,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903333288,
      "category": "submit_flag",
      "value": 82,
      "playerId": 73
    },
    {
      "timestamp": 1757903333288,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333295,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 48
    },
    {
      "timestamp": 1757903333295,
      "category": "submit_flag",
      "value": 35,
      "playerId": 19
    },
    {
      "timestamp": 1757903333295,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333297,
      "category": "submit_flag",
      "value": 34,
      "playerId": 45
    },
    {
      "timestamp": 1757903333297,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333301,
      "category": "static_file_loaded",
      "value": 140,
      "playerId": 14
    },
    {
      "timestamp": 1757903333303,
      "category": "submit_flag",
      "value": 86,
      "playerId": 43
    },
    {
      "timestamp": 1757903333303,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903333305,
      "category": "submit_flag",
      "value": 33,
      "playerId": 57
    },
    {
      "timestamp": 1757903333305,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333305,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 70
    },
    {
      "timestamp": 1757903333306,
      "category": "submit_flag",
      "value": 31,
      "playerId": 57
    },
    {
      "timestamp": 1757903333306,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333312,
      "category": "submit_flag",
      "value": 63,
      "playerId": 45
    },
    {
      "timestamp": 1757903333312,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333317,
      "category": "submit_flag",
      "value": 30,
      "playerId": 49
    },
    {
      "timestamp": 1757903333317,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333320,
      "category": "login_attempt",
      "value": 28,
      "playerId": 21
    },
    {
      "timestamp": 1757903333320,
      "category": "login_success",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903333325,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 14
    },
    {
      "timestamp": 1757903333326,
      "category": "submit_flag",
      "value": 184,
      "playerId": 24
    },
    {
      "timestamp": 1757903333326,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903333329,
      "category": "submit_flag",
      "value": 27,
      "playerId": 19
    },
    {
      "timestamp": 1757903333329,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333350,
      "category": "static_file_loaded",
      "value": 45,
      "playerId": 70
    },
    {
      "timestamp": 1757903333356,
      "category": "static_file_loaded",
      "value": 262,
      "playerId": 22
    },
    {
      "timestamp": 1757903333356,
      "category": "submit_flag",
      "value": 52,
      "playerId": 49
    },
    {
      "timestamp": 1757903333356,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333357,
      "category": "websocket_connected",
      "value": 122,
      "playerId": 61
    },
    {
      "timestamp": 1757903333358,
      "category": "submit_flag",
      "value": 49,
      "playerId": 57
    },
    {
      "timestamp": 1757903333358,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333359,
      "category": "submit_flag",
      "value": 99,
      "playerId": 1
    },
    {
      "timestamp": 1757903333359,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903333359,
      "category": "static_file_loaded",
      "value": 38,
      "playerId": 18
    },
    {
      "timestamp": 1757903333359,
      "category": "submit_flag",
      "value": 251,
      "playerId": 29
    },
    {
      "timestamp": 1757903333360,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333362,
      "category": "login_attempt",
      "value": 223,
      "playerId": 12
    },
    {
      "timestamp": 1757903333362,
      "category": "login_success",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903333367,
      "category": "submit_flag",
      "value": 107,
      "playerId": 49
    },
    {
      "timestamp": 1757903333367,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333376,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 68
    },
    {
      "timestamp": 1757903333377,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 70
    },
    {
      "timestamp": 1757903333380,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 22
    },
    {
      "timestamp": 1757903333382,
      "category": "submit_flag",
      "value": 80,
      "playerId": 19
    },
    {
      "timestamp": 1757903333382,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333383,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 18
    },
    {
      "timestamp": 1757903333390,
      "category": "login_attempt",
      "value": 249,
      "playerId": 50
    },
    {
      "timestamp": 1757903333390,
      "category": "login_success",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903333393,
      "category": "login_attempt",
      "value": 29,
      "playerId": 59
    },
    {
      "timestamp": 1757903333393,
      "category": "login_success",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903333399,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 36
    },
    {
      "timestamp": 1757903333400,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 68
    },
    {
      "timestamp": 1757903333412,
      "category": "login_attempt",
      "value": 309,
      "playerId": 64
    },
    {
      "timestamp": 1757903333412,
      "category": "login_success",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903333425,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 36
    },
    {
      "timestamp": 1757903333425,
      "category": "submit_flag",
      "value": 33,
      "playerId": 31
    },
    {
      "timestamp": 1757903333426,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903333428,
      "category": "login_attempt",
      "value": 32,
      "playerId": 48
    },
    {
      "timestamp": 1757903333428,
      "category": "login_success",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903333433,
      "category": "submit_flag",
      "value": 33,
      "playerId": 5
    },
    {
      "timestamp": 1757903333433,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333434,
      "category": "submit_flag",
      "value": 34,
      "playerId": 31
    },
    {
      "timestamp": 1757903333434,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903333435,
      "category": "submit_flag",
      "value": 36,
      "playerId": 5
    },
    {
      "timestamp": 1757903333435,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333443,
      "category": "submit_flag",
      "value": 30,
      "playerId": 53
    },
    {
      "timestamp": 1757903333444,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333448,
      "category": "websocket_connected",
      "value": 77,
      "playerId": 21
    },
    {
      "timestamp": 1757903333457,
      "category": "submit_flag",
      "value": 50,
      "playerId": 5
    },
    {
      "timestamp": 1757903333457,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333463,
      "category": "login_attempt",
      "value": 35,
      "playerId": 14
    },
    {
      "timestamp": 1757903333463,
      "category": "login_success",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903333463,
      "category": "submit_flag",
      "value": 27,
      "playerId": 31
    },
    {
      "timestamp": 1757903333463,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903333468,
      "category": "submit_flag",
      "value": 36,
      "playerId": 9
    },
    {
      "timestamp": 1757903333468,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333489,
      "category": "submit_flag",
      "value": 44,
      "playerId": 53
    },
    {
      "timestamp": 1757903333489,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333491,
      "category": "submit_flag",
      "value": 38,
      "playerId": 9
    },
    {
      "timestamp": 1757903333491,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333491,
      "category": "submit_flag",
      "value": 35,
      "playerId": 16
    },
    {
      "timestamp": 1757903333491,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903333492,
      "category": "submit_flag",
      "value": 34,
      "playerId": 16
    },
    {
      "timestamp": 1757903333492,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903333495,
      "category": "submit_flag",
      "value": 39,
      "playerId": 44
    },
    {
      "timestamp": 1757903333495,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903333499,
      "category": "submit_flag",
      "value": 33,
      "playerId": 42
    },
    {
      "timestamp": 1757903333499,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333502,
      "category": "websocket_connected",
      "value": 88,
      "playerId": 12
    },
    {
      "timestamp": 1757903333503,
      "category": "submit_flag",
      "value": 33,
      "playerId": 23
    },
    {
      "timestamp": 1757903333503,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333509,
      "category": "submit_flag",
      "value": 51,
      "playerId": 46
    },
    {
      "timestamp": 1757903333509,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903333512,
      "category": "submit_flag",
      "value": 26,
      "playerId": 53
    },
    {
      "timestamp": 1757903333512,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333519,
      "category": "login_attempt",
      "value": 33,
      "playerId": 70
    },
    {
      "timestamp": 1757903333519,
      "category": "login_success",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903333530,
      "category": "submit_flag",
      "value": 37,
      "playerId": 71
    },
    {
      "timestamp": 1757903333530,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903333531,
      "category": "submit_flag",
      "value": 38,
      "playerId": 43
    },
    {
      "timestamp": 1757903333531,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903333542,
      "category": "submit_flag",
      "value": 94,
      "playerId": 9
    },
    {
      "timestamp": 1757903333542,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333545,
      "category": "static_file_loaded",
      "value": 37,
      "playerId": 55
    },
    {
      "timestamp": 1757903333546,
      "category": "submit_flag",
      "value": 58,
      "playerId": 73
    },
    {
      "timestamp": 1757903333546,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333546,
      "category": "submit_flag",
      "value": 38,
      "playerId": 45
    },
    {
      "timestamp": 1757903333546,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333552,
      "category": "static_file_loaded",
      "value": 152,
      "playerId": 68
    },
    {
      "timestamp": 1757903333553,
      "category": "submit_flag",
      "value": 49,
      "playerId": 42
    },
    {
      "timestamp": 1757903333553,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333554,
      "category": "static_file_loaded",
      "value": 171,
      "playerId": 18
    },
    {
      "timestamp": 1757903333557,
      "category": "login_attempt",
      "value": 70,
      "playerId": 22
    },
    {
      "timestamp": 1757903333557,
      "category": "login_success",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903333557,
      "category": "submit_flag",
      "value": 97,
      "playerId": 23
    },
    {
      "timestamp": 1757903333557,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333559,
      "category": "submit_flag",
      "value": 30,
      "playerId": 46
    },
    {
      "timestamp": 1757903333559,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903333565,
      "category": "websocket_connected",
      "value": 119,
      "playerId": 59
    },
    {
      "timestamp": 1757903333568,
      "category": "websocket_connected",
      "value": 127,
      "playerId": 50
    },
    {
      "timestamp": 1757903333569,
      "category": "websocket_connected",
      "value": 108,
      "playerId": 64
    },
    {
      "timestamp": 1757903333569,
      "category": "submit_flag",
      "value": 363,
      "playerId": 1
    },
    {
      "timestamp": 1757903333569,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903333570,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 55
    },
    {
      "timestamp": 1757903333575,
      "category": "submit_flag",
      "value": 32,
      "playerId": 73
    },
    {
      "timestamp": 1757903333575,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333576,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 68
    },
    {
      "timestamp": 1757903333577,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 18
    },
    {
      "timestamp": 1757903333581,
      "category": "submit_flag",
      "value": 38,
      "playerId": 73
    },
    {
      "timestamp": 1757903333581,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333590,
      "category": "static_file_loaded",
      "value": 165,
      "playerId": 36
    },
    {
      "timestamp": 1757903333592,
      "category": "submit_flag",
      "value": 37,
      "playerId": 32
    },
    {
      "timestamp": 1757903333592,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903333614,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 55
    },
    {
      "timestamp": 1757903333620,
      "category": "websocket_connected",
      "value": 133,
      "playerId": 48
    },
    {
      "timestamp": 1757903333621,
      "category": "submit_flag",
      "value": 62,
      "playerId": 29
    },
    {
      "timestamp": 1757903333621,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333624,
      "category": "submit_flag",
      "value": 69,
      "playerId": 23
    },
    {
      "timestamp": 1757903333625,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333625,
      "category": "submit_flag",
      "value": 52,
      "playerId": 49
    },
    {
      "timestamp": 1757903333625,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333626,
      "category": "websocket_connected",
      "value": 113,
      "playerId": 14
    },
    {
      "timestamp": 1757903333626,
      "category": "submit_flag",
      "value": 46,
      "playerId": 49
    },
    {
      "timestamp": 1757903333626,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903333627,
      "category": "static_file_loaded",
      "value": 37,
      "playerId": 36
    },
    {
      "timestamp": 1757903333627,
      "category": "submit_flag",
      "value": 69,
      "playerId": 71
    },
    {
      "timestamp": 1757903333627,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903333627,
      "category": "submit_flag",
      "value": 36,
      "playerId": 45
    },
    {
      "timestamp": 1757903333627,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903333630,
      "category": "submit_flag",
      "value": 172,
      "playerId": 42
    },
    {
      "timestamp": 1757903333630,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333631,
      "category": "submit_flag",
      "value": 40,
      "playerId": 19
    },
    {
      "timestamp": 1757903333631,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333632,
      "category": "submit_flag",
      "value": 64,
      "playerId": 24
    },
    {
      "timestamp": 1757903333632,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903333637,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 55
    },
    {
      "timestamp": 1757903333641,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 38
    },
    {
      "timestamp": 1757903333643,
      "category": "submit_flag",
      "value": 64,
      "playerId": 43
    },
    {
      "timestamp": 1757903333643,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903333644,
      "category": "submit_flag",
      "value": 29,
      "playerId": 24
    },
    {
      "timestamp": 1757903333644,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903333657,
      "category": "submit_flag",
      "value": 29,
      "playerId": 19
    },
    {
      "timestamp": 1757903333657,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333659,
      "category": "submit_flag",
      "value": 31,
      "playerId": 57
    },
    {
      "timestamp": 1757903333659,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333663,
      "category": "submit_flag",
      "value": 35,
      "playerId": 19
    },
    {
      "timestamp": 1757903333663,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333667,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 38
    },
    {
      "timestamp": 1757903333673,
      "category": "websocket_connected",
      "value": 103,
      "playerId": 70
    },
    {
      "timestamp": 1757903333685,
      "category": "submit_flag",
      "value": 57,
      "playerId": 29
    },
    {
      "timestamp": 1757903333685,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333692,
      "category": "submit_flag",
      "value": 64,
      "playerId": 57
    },
    {
      "timestamp": 1757903333692,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333699,
      "category": "submit_flag",
      "value": 31,
      "playerId": 31
    },
    {
      "timestamp": 1757903333699,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903333704,
      "category": "submit_flag",
      "value": 26,
      "playerId": 31
    },
    {
      "timestamp": 1757903333704,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903333707,
      "category": "websocket_connected",
      "value": 90,
      "playerId": 22
    },
    {
      "timestamp": 1757903333708,
      "category": "submit_flag",
      "value": 89,
      "playerId": 29
    },
    {
      "timestamp": 1757903333708,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333714,
      "category": "submit_flag",
      "value": 28,
      "playerId": 61
    },
    {
      "timestamp": 1757903333714,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903333721,
      "category": "submit_flag",
      "value": 103,
      "playerId": 24
    },
    {
      "timestamp": 1757903333721,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903333722,
      "category": "submit_flag",
      "value": 31,
      "playerId": 5
    },
    {
      "timestamp": 1757903333722,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333739,
      "category": "login_attempt",
      "value": 61,
      "playerId": 68
    },
    {
      "timestamp": 1757903333739,
      "category": "login_success",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903333749,
      "category": "submit_flag",
      "value": 37,
      "playerId": 5
    },
    {
      "timestamp": 1757903333749,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333750,
      "category": "submit_flag",
      "value": 257,
      "playerId": 16
    },
    {
      "timestamp": 1757903333750,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903333753,
      "category": "submit_flag",
      "value": 30,
      "playerId": 5
    },
    {
      "timestamp": 1757903333753,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903333754,
      "category": "login_attempt",
      "value": 27,
      "playerId": 36
    },
    {
      "timestamp": 1757903333754,
      "category": "login_success",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903333762,
      "category": "submit_flag",
      "value": 32,
      "playerId": 53
    },
    {
      "timestamp": 1757903333762,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333765,
      "category": "submit_flag",
      "value": 49,
      "playerId": 31
    },
    {
      "timestamp": 1757903333765,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903333765,
      "category": "login_attempt",
      "value": 27,
      "playerId": 55
    },
    {
      "timestamp": 1757903333765,
      "category": "login_success",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903333772,
      "category": "submit_flag",
      "value": 38,
      "playerId": 21
    },
    {
      "timestamp": 1757903333772,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903333773,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 72
    },
    {
      "timestamp": 1757903333776,
      "category": "submit_flag",
      "value": 32,
      "playerId": 9
    },
    {
      "timestamp": 1757903333776,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333779,
      "category": "submit_flag",
      "value": 27,
      "playerId": 61
    },
    {
      "timestamp": 1757903333779,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903333781,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 56
    },
    {
      "timestamp": 1757903333783,
      "category": "submit_flag",
      "value": 29,
      "playerId": 21
    },
    {
      "timestamp": 1757903333783,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903333784,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 62
    },
    {
      "timestamp": 1757903333787,
      "category": "submit_flag",
      "value": 28,
      "playerId": 61
    },
    {
      "timestamp": 1757903333787,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903333792,
      "category": "submit_flag",
      "value": 32,
      "playerId": 53
    },
    {
      "timestamp": 1757903333792,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903333801,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 72
    },
    {
      "timestamp": 1757903333802,
      "category": "submit_flag",
      "value": 362,
      "playerId": 44
    },
    {
      "timestamp": 1757903333802,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903333804,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 56
    },
    {
      "timestamp": 1757903333806,
      "category": "submit_flag",
      "value": 81,
      "playerId": 9
    },
    {
      "timestamp": 1757903333806,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333809,
      "category": "login_attempt",
      "value": 131,
      "playerId": 18
    },
    {
      "timestamp": 1757903333809,
      "category": "login_success",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903333809,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 62
    },
    {
      "timestamp": 1757903333819,
      "category": "static_file_loaded",
      "value": 152,
      "playerId": 38
    },
    {
      "timestamp": 1757903333821,
      "category": "submit_flag",
      "value": 266,
      "playerId": 57
    },
    {
      "timestamp": 1757903333821,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903333826,
      "category": "submit_flag",
      "value": 62,
      "playerId": 21
    },
    {
      "timestamp": 1757903333826,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903333829,
      "category": "submit_flag",
      "value": 27,
      "playerId": 1
    },
    {
      "timestamp": 1757903333829,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903333839,
      "category": "submit_flag",
      "value": 35,
      "playerId": 73
    },
    {
      "timestamp": 1757903333839,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333840,
      "category": "submit_flag",
      "value": 29,
      "playerId": 12
    },
    {
      "timestamp": 1757903333840,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903333842,
      "category": "submit_flag",
      "value": 27,
      "playerId": 9
    },
    {
      "timestamp": 1757903333842,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903333849,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 38
    },
    {
      "timestamp": 1757903333855,
      "category": "submit_flag",
      "value": 423,
      "playerId": 44
    },
    {
      "timestamp": 1757903333855,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903333859,
      "category": "submit_flag",
      "value": 30,
      "playerId": 12
    },
    {
      "timestamp": 1757903333859,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903333866,
      "category": "submit_flag",
      "value": 37,
      "playerId": 23
    },
    {
      "timestamp": 1757903333866,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333867,
      "category": "submit_flag",
      "value": 34,
      "playerId": 73
    },
    {
      "timestamp": 1757903333867,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333871,
      "category": "submit_flag",
      "value": 31,
      "playerId": 73
    },
    {
      "timestamp": 1757903333871,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903333879,
      "category": "submit_flag",
      "value": 366,
      "playerId": 71
    },
    {
      "timestamp": 1757903333879,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903333883,
      "category": "websocket_connected",
      "value": 93,
      "playerId": 68
    },
    {
      "timestamp": 1757903333886,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 15
    },
    {
      "timestamp": 1757903333888,
      "category": "submit_flag",
      "value": 47,
      "playerId": 42
    },
    {
      "timestamp": 1757903333888,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333891,
      "category": "submit_flag",
      "value": 35,
      "playerId": 23
    },
    {
      "timestamp": 1757903333891,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333892,
      "category": "websocket_connected",
      "value": 87,
      "playerId": 36
    },
    {
      "timestamp": 1757903333900,
      "category": "submit_flag",
      "value": 30,
      "playerId": 12
    },
    {
      "timestamp": 1757903333900,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903333901,
      "category": "websocket_connected",
      "value": 85,
      "playerId": 55
    },
    {
      "timestamp": 1757903333906,
      "category": "submit_flag",
      "value": 35,
      "playerId": 1
    },
    {
      "timestamp": 1757903333906,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903333909,
      "category": "submit_flag",
      "value": 39,
      "playerId": 59
    },
    {
      "timestamp": 1757903333909,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903333912,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 15
    },
    {
      "timestamp": 1757903333914,
      "category": "submit_flag",
      "value": 34,
      "playerId": 19
    },
    {
      "timestamp": 1757903333914,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333915,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 39
    },
    {
      "timestamp": 1757903333917,
      "category": "submit_flag",
      "value": 34,
      "playerId": 50
    },
    {
      "timestamp": 1757903333917,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903333925,
      "category": "submit_flag",
      "value": 69,
      "playerId": 19
    },
    {
      "timestamp": 1757903333925,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903333927,
      "category": "static_file_loaded",
      "value": 118,
      "playerId": 62
    },
    {
      "timestamp": 1757903333927,
      "category": "submit_flag",
      "value": 36,
      "playerId": 59
    },
    {
      "timestamp": 1757903333927,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903333934,
      "category": "submit_flag",
      "value": 33,
      "playerId": 23
    },
    {
      "timestamp": 1757903333934,
      "category": "flag_correct",
      "value": 1,
      "playerId": 23
    },
    {
      "timestamp": 1757903333934,
      "category": "submit_flag",
      "value": 37,
      "playerId": 50
    },
    {
      "timestamp": 1757903333934,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903333955,
      "category": "static_file_loaded",
      "value": 43,
      "playerId": 15
    },
    {
      "timestamp": 1757903333961,
      "category": "static_file_loaded",
      "value": 157,
      "playerId": 56
    },
    {
      "timestamp": 1757903333965,
      "category": "static_file_loaded",
      "value": 164,
      "playerId": 72
    },
    {
      "timestamp": 1757903333966,
      "category": "static_file_loaded",
      "value": 51,
      "playerId": 39
    },
    {
      "timestamp": 1757903333966,
      "category": "submit_flag",
      "value": 110,
      "playerId": 42
    },
    {
      "timestamp": 1757903333966,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333967,
      "category": "websocket_connected",
      "value": 107,
      "playerId": 18
    },
    {
      "timestamp": 1757903333967,
      "category": "submit_flag",
      "value": 54,
      "playerId": 48
    },
    {
      "timestamp": 1757903333967,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903333968,
      "category": "submit_flag",
      "value": 129,
      "playerId": 1
    },
    {
      "timestamp": 1757903333968,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903333968,
      "category": "static_file_loaded",
      "value": 41,
      "playerId": 62
    },
    {
      "timestamp": 1757903333968,
      "category": "submit_flag",
      "value": 81,
      "playerId": 59
    },
    {
      "timestamp": 1757903333969,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903333977,
      "category": "submit_flag",
      "value": 84,
      "playerId": 29
    },
    {
      "timestamp": 1757903333977,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903333979,
      "category": "submit_flag",
      "value": 151,
      "playerId": 42
    },
    {
      "timestamp": 1757903333979,
      "category": "flag_correct",
      "value": 1,
      "playerId": 42
    },
    {
      "timestamp": 1757903333982,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 15
    },
    {
      "timestamp": 1757903333984,
      "category": "submit_flag",
      "value": 56,
      "playerId": 64
    },
    {
      "timestamp": 1757903333984,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903333985,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 56
    },
    {
      "timestamp": 1757903333991,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 72
    },
    {
      "timestamp": 1757903333992,
      "category": "submit_flag",
      "value": 36,
      "playerId": 48
    },
    {
      "timestamp": 1757903333992,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903333994,
      "category": "login_attempt",
      "value": 38,
      "playerId": 38
    },
    {
      "timestamp": 1757903333994,
      "category": "login_success",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903333998,
      "category": "submit_flag",
      "value": 29,
      "playerId": 14
    },
    {
      "timestamp": 1757903333998,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334000,
      "category": "submit_flag",
      "value": 31,
      "playerId": 70
    },
    {
      "timestamp": 1757903334000,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334005,
      "category": "submit_flag",
      "value": 49,
      "playerId": 29
    },
    {
      "timestamp": 1757903334005,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903334010,
      "category": "submit_flag",
      "value": 85,
      "playerId": 64
    },
    {
      "timestamp": 1757903334010,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334011,
      "category": "submit_flag",
      "value": 30,
      "playerId": 24
    },
    {
      "timestamp": 1757903334011,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334020,
      "category": "submit_flag",
      "value": 39,
      "playerId": 48
    },
    {
      "timestamp": 1757903334020,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903334022,
      "category": "submit_flag",
      "value": 32,
      "playerId": 70
    },
    {
      "timestamp": 1757903334022,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334024,
      "category": "submit_flag",
      "value": 29,
      "playerId": 5
    },
    {
      "timestamp": 1757903334024,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903334029,
      "category": "submit_flag",
      "value": 46,
      "playerId": 29
    },
    {
      "timestamp": 1757903334029,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903334040,
      "category": "submit_flag",
      "value": 34,
      "playerId": 70
    },
    {
      "timestamp": 1757903334040,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334040,
      "category": "submit_flag",
      "value": 33,
      "playerId": 5
    },
    {
      "timestamp": 1757903334040,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903334044,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 2
    },
    {
      "timestamp": 1757903334047,
      "category": "submit_flag",
      "value": 64,
      "playerId": 24
    },
    {
      "timestamp": 1757903334047,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334051,
      "category": "submit_flag",
      "value": 82,
      "playerId": 16
    },
    {
      "timestamp": 1757903334051,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903334055,
      "category": "submit_flag",
      "value": 29,
      "playerId": 16
    },
    {
      "timestamp": 1757903334055,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903334060,
      "category": "submit_flag",
      "value": 130,
      "playerId": 50
    },
    {
      "timestamp": 1757903334060,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903334061,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 27
    },
    {
      "timestamp": 1757903334064,
      "category": "submit_flag",
      "value": 108,
      "playerId": 5
    },
    {
      "timestamp": 1757903334064,
      "category": "flag_correct",
      "value": 1,
      "playerId": 5
    },
    {
      "timestamp": 1757903334068,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 2
    },
    {
      "timestamp": 1757903334070,
      "category": "submit_flag",
      "value": 31,
      "playerId": 22
    },
    {
      "timestamp": 1757903334070,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334074,
      "category": "submit_flag",
      "value": 84,
      "playerId": 31
    },
    {
      "timestamp": 1757903334074,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903334076,
      "category": "submit_flag",
      "value": 106,
      "playerId": 61
    },
    {
      "timestamp": 1757903334076,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903334082,
      "category": "submit_flag",
      "value": 38,
      "playerId": 21
    },
    {
      "timestamp": 1757903334082,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334086,
      "category": "submit_flag",
      "value": 108,
      "playerId": 24
    },
    {
      "timestamp": 1757903334086,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334087,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 27
    },
    {
      "timestamp": 1757903334112,
      "category": "submit_flag",
      "value": 193,
      "playerId": 19
    },
    {
      "timestamp": 1757903334112,
      "category": "flag_correct",
      "value": 1,
      "playerId": 19
    },
    {
      "timestamp": 1757903334112,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 52
    },
    {
      "timestamp": 1757903334113,
      "category": "submit_flag",
      "value": 51,
      "playerId": 9
    },
    {
      "timestamp": 1757903334113,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903334116,
      "category": "submit_flag",
      "value": 46,
      "playerId": 57
    },
    {
      "timestamp": 1757903334116,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903334117,
      "category": "submit_flag",
      "value": 45,
      "playerId": 73
    },
    {
      "timestamp": 1757903334117,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903334117,
      "category": "login_attempt",
      "value": 48,
      "playerId": 62
    },
    {
      "timestamp": 1757903334118,
      "category": "login_success",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903334118,
      "category": "login_attempt",
      "value": 36,
      "playerId": 15
    },
    {
      "timestamp": 1757903334118,
      "category": "login_success",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903334132,
      "category": "static_file_loaded",
      "value": 64,
      "playerId": 2
    },
    {
      "timestamp": 1757903334132,
      "category": "submit_flag",
      "value": 45,
      "playerId": 44
    },
    {
      "timestamp": 1757903334132,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903334135,
      "category": "submit_flag",
      "value": 102,
      "playerId": 57
    },
    {
      "timestamp": 1757903334135,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903334135,
      "category": "submit_flag",
      "value": 72,
      "playerId": 22
    },
    {
      "timestamp": 1757903334135,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334136,
      "category": "submit_flag",
      "value": 87,
      "playerId": 31
    },
    {
      "timestamp": 1757903334136,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903334137,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 52
    },
    {
      "timestamp": 1757903334138,
      "category": "submit_flag",
      "value": 33,
      "playerId": 44
    },
    {
      "timestamp": 1757903334138,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903334140,
      "category": "submit_flag",
      "value": 220,
      "playerId": 64
    },
    {
      "timestamp": 1757903334140,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334142,
      "category": "websocket_connected",
      "value": 98,
      "playerId": 38
    },
    {
      "timestamp": 1757903334148,
      "category": "submit_flag",
      "value": 116,
      "playerId": 14
    },
    {
      "timestamp": 1757903334148,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334154,
      "category": "submit_flag",
      "value": 36,
      "playerId": 21
    },
    {
      "timestamp": 1757903334154,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334157,
      "category": "submit_flag",
      "value": 38,
      "playerId": 44
    },
    {
      "timestamp": 1757903334157,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903334159,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 2
    },
    {
      "timestamp": 1757903334159,
      "category": "submit_flag",
      "value": 41,
      "playerId": 9
    },
    {
      "timestamp": 1757903334159,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903334163,
      "category": "submit_flag",
      "value": 31,
      "playerId": 12
    },
    {
      "timestamp": 1757903334163,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334171,
      "category": "static_file_loaded",
      "value": 205,
      "playerId": 39
    },
    {
      "timestamp": 1757903334173,
      "category": "submit_flag",
      "value": 54,
      "playerId": 22
    },
    {
      "timestamp": 1757903334173,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334187,
      "category": "submit_flag",
      "value": 149,
      "playerId": 61
    },
    {
      "timestamp": 1757903334187,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903334188,
      "category": "submit_flag",
      "value": 219,
      "playerId": 14
    },
    {
      "timestamp": 1757903334188,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334190,
      "category": "submit_flag",
      "value": 41,
      "playerId": 73
    },
    {
      "timestamp": 1757903334190,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903334194,
      "category": "submit_flag",
      "value": 41,
      "playerId": 71
    },
    {
      "timestamp": 1757903334194,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334195,
      "category": "submit_flag",
      "value": 86,
      "playerId": 9
    },
    {
      "timestamp": 1757903334195,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903334196,
      "category": "login_attempt",
      "value": 112,
      "playerId": 56
    },
    {
      "timestamp": 1757903334196,
      "category": "login_success",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903334197,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 39
    },
    {
      "timestamp": 1757903334202,
      "category": "submit_flag",
      "value": 83,
      "playerId": 73
    },
    {
      "timestamp": 1757903334202,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903334208,
      "category": "submit_flag",
      "value": 118,
      "playerId": 71
    },
    {
      "timestamp": 1757903334208,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334213,
      "category": "submit_flag",
      "value": 32,
      "playerId": 59
    },
    {
      "timestamp": 1757903334213,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334218,
      "category": "submit_flag",
      "value": 37,
      "playerId": 12
    },
    {
      "timestamp": 1757903334218,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334219,
      "category": "submit_flag",
      "value": 31,
      "playerId": 1
    },
    {
      "timestamp": 1757903334219,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903334221,
      "category": "submit_flag",
      "value": 33,
      "playerId": 1
    },
    {
      "timestamp": 1757903334221,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903334224,
      "category": "submit_flag",
      "value": 45,
      "playerId": 12
    },
    {
      "timestamp": 1757903334224,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334229,
      "category": "submit_flag",
      "value": 31,
      "playerId": 68
    },
    {
      "timestamp": 1757903334229,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903334244,
      "category": "submit_flag",
      "value": 91,
      "playerId": 71
    },
    {
      "timestamp": 1757903334244,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334248,
      "category": "submit_flag",
      "value": 41,
      "playerId": 1
    },
    {
      "timestamp": 1757903334248,
      "category": "flag_correct",
      "value": 1,
      "playerId": 1
    },
    {
      "timestamp": 1757903334255,
      "category": "submit_flag",
      "value": 137,
      "playerId": 21
    },
    {
      "timestamp": 1757903334255,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334262,
      "category": "static_file_loaded",
      "value": 175,
      "playerId": 27
    },
    {
      "timestamp": 1757903334262,
      "category": "websocket_connected",
      "value": 94,
      "playerId": 62
    },
    {
      "timestamp": 1757903334264,
      "category": "submit_flag",
      "value": 51,
      "playerId": 68
    },
    {
      "timestamp": 1757903334264,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903334267,
      "category": "submit_flag",
      "value": 86,
      "playerId": 59
    },
    {
      "timestamp": 1757903334267,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334271,
      "category": "submit_flag",
      "value": 30,
      "playerId": 70
    },
    {
      "timestamp": 1757903334271,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334271,
      "category": "websocket_connected",
      "value": 92,
      "playerId": 15
    },
    {
      "timestamp": 1757903334277,
      "category": "submit_flag",
      "value": 168,
      "playerId": 57
    },
    {
      "timestamp": 1757903334277,
      "category": "flag_correct",
      "value": 1,
      "playerId": 57
    },
    {
      "timestamp": 1757903334277,
      "category": "submit_flag",
      "value": 722,
      "playerId": 43
    },
    {
      "timestamp": 1757903334278,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903334297,
      "category": "static_file_loaded",
      "value": 35,
      "playerId": 27
    },
    {
      "timestamp": 1757903334303,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 75
    },
    {
      "timestamp": 1757903334311,
      "category": "static_file_loaded",
      "value": 174,
      "playerId": 52
    },
    {
      "timestamp": 1757903334311,
      "category": "submit_flag",
      "value": 130,
      "playerId": 59
    },
    {
      "timestamp": 1757903334311,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334312,
      "category": "submit_flag",
      "value": 39,
      "playerId": 36
    },
    {
      "timestamp": 1757903334312,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903334314,
      "category": "login_attempt",
      "value": 56,
      "playerId": 2
    },
    {
      "timestamp": 1757903334314,
      "category": "login_success",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903334315,
      "category": "submit_flag",
      "value": 33,
      "playerId": 24
    },
    {
      "timestamp": 1757903334315,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334316,
      "category": "submit_flag",
      "value": 32,
      "playerId": 55
    },
    {
      "timestamp": 1757903334316,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903334323,
      "category": "submit_flag",
      "value": 39,
      "playerId": 18
    },
    {
      "timestamp": 1757903334323,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903334326,
      "category": "submit_flag",
      "value": 46,
      "playerId": 48
    },
    {
      "timestamp": 1757903334326,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903334328,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 75
    },
    {
      "timestamp": 1757903334333,
      "category": "submit_flag",
      "value": 47,
      "playerId": 29
    },
    {
      "timestamp": 1757903334333,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903334334,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 52
    },
    {
      "timestamp": 1757903334336,
      "category": "websocket_connected",
      "value": 90,
      "playerId": 56
    },
    {
      "timestamp": 1757903334337,
      "category": "submit_flag",
      "value": 28,
      "playerId": 50
    },
    {
      "timestamp": 1757903334337,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903334339,
      "category": "submit_flag",
      "value": 30,
      "playerId": 24
    },
    {
      "timestamp": 1757903334339,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334344,
      "category": "submit_flag",
      "value": 95,
      "playerId": 70
    },
    {
      "timestamp": 1757903334344,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334349,
      "category": "submit_flag",
      "value": 31,
      "playerId": 50
    },
    {
      "timestamp": 1757903334349,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903334353,
      "category": "submit_flag",
      "value": 32,
      "playerId": 36
    },
    {
      "timestamp": 1757903334353,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903334356,
      "category": "submit_flag",
      "value": 30,
      "playerId": 18
    },
    {
      "timestamp": 1757903334356,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903334364,
      "category": "submit_flag",
      "value": 31,
      "playerId": 50
    },
    {
      "timestamp": 1757903334364,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903334370,
      "category": "submit_flag",
      "value": 38,
      "playerId": 18
    },
    {
      "timestamp": 1757903334370,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903334375,
      "category": "login_attempt",
      "value": 269,
      "playerId": 72
    },
    {
      "timestamp": 1757903334375,
      "category": "login_success",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903334384,
      "category": "static_file_loaded",
      "value": 31,
      "playerId": 77
    },
    {
      "timestamp": 1757903334385,
      "category": "submit_flag",
      "value": 122,
      "playerId": 55
    },
    {
      "timestamp": 1757903334385,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903334388,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 6
    },
    {
      "timestamp": 1757903334390,
      "category": "submit_flag",
      "value": 28,
      "playerId": 24
    },
    {
      "timestamp": 1757903334390,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334400,
      "category": "submit_flag",
      "value": 30,
      "playerId": 44
    },
    {
      "timestamp": 1757903334401,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903334402,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 47
    },
    {
      "timestamp": 1757903334409,
      "category": "submit_flag",
      "value": 142,
      "playerId": 48
    },
    {
      "timestamp": 1757903334409,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903334410,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 4
    },
    {
      "timestamp": 1757903334410,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 77
    },
    {
      "timestamp": 1757903334411,
      "category": "submit_flag",
      "value": 30,
      "playerId": 14
    },
    {
      "timestamp": 1757903334411,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334414,
      "category": "submit_flag",
      "value": 84,
      "playerId": 36
    },
    {
      "timestamp": 1757903334414,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903334415,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 6
    },
    {
      "timestamp": 1757903334417,
      "category": "submit_flag",
      "value": 29,
      "playerId": 14
    },
    {
      "timestamp": 1757903334417,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334422,
      "category": "submit_flag",
      "value": 241,
      "playerId": 68
    },
    {
      "timestamp": 1757903334422,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903334429,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 47
    },
    {
      "timestamp": 1757903334433,
      "category": "login_attempt",
      "value": 37,
      "playerId": 27
    },
    {
      "timestamp": 1757903334433,
      "category": "login_success",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903334434,
      "category": "login_attempt",
      "value": 134,
      "playerId": 39
    },
    {
      "timestamp": 1757903334434,
      "category": "login_success",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903334434,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 33
    },
    {
      "timestamp": 1757903334435,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 4
    },
    {
      "timestamp": 1757903334438,
      "category": "submit_flag",
      "value": 32,
      "playerId": 12
    },
    {
      "timestamp": 1757903334438,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334458,
      "category": "static_file_loaded",
      "value": 47,
      "playerId": 77
    },
    {
      "timestamp": 1757903334462,
      "category": "submit_flag",
      "value": 53,
      "playerId": 64
    },
    {
      "timestamp": 1757903334462,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334478,
      "category": "submit_flag",
      "value": 63,
      "playerId": 12
    },
    {
      "timestamp": 1757903334478,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334479,
      "category": "submit_flag",
      "value": 60,
      "playerId": 73
    },
    {
      "timestamp": 1757903334479,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903334479,
      "category": "websocket_connected",
      "value": 112,
      "playerId": 2
    },
    {
      "timestamp": 1757903334493,
      "category": "submit_flag",
      "value": 66,
      "playerId": 22
    },
    {
      "timestamp": 1757903334493,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334494,
      "category": "submit_flag",
      "value": 68,
      "playerId": 64
    },
    {
      "timestamp": 1757903334494,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334494,
      "category": "static_file_loaded",
      "value": 60,
      "playerId": 33
    },
    {
      "timestamp": 1757903334518,
      "category": "static_file_loaded",
      "value": 103,
      "playerId": 6
    },
    {
      "timestamp": 1757903334527,
      "category": "login_attempt",
      "value": 92,
      "playerId": 52
    },
    {
      "timestamp": 1757903334527,
      "category": "login_success",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903334527,
      "category": "submit_flag",
      "value": 106,
      "playerId": 64
    },
    {
      "timestamp": 1757903334527,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334528,
      "category": "submit_flag",
      "value": 94,
      "playerId": 14
    },
    {
      "timestamp": 1757903334528,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334528,
      "category": "submit_flag",
      "value": 259,
      "playerId": 29
    },
    {
      "timestamp": 1757903334528,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903334528,
      "category": "static_file_loaded",
      "value": 68,
      "playerId": 78
    },
    {
      "timestamp": 1757903334529,
      "category": "static_file_loaded",
      "value": 70,
      "playerId": 25
    },
    {
      "timestamp": 1757903334530,
      "category": "static_file_loaded",
      "value": 72,
      "playerId": 77
    },
    {
      "timestamp": 1757903334530,
      "category": "submit_flag",
      "value": 70,
      "playerId": 9
    },
    {
      "timestamp": 1757903334530,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903334530,
      "category": "submit_flag",
      "value": 70,
      "playerId": 9
    },
    {
      "timestamp": 1757903334530,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903334530,
      "category": "submit_flag",
      "value": 142,
      "playerId": 22
    },
    {
      "timestamp": 1757903334530,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334531,
      "category": "submit_flag",
      "value": 537,
      "playerId": 16
    },
    {
      "timestamp": 1757903334531,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903334531,
      "category": "submit_flag",
      "value": 72,
      "playerId": 44
    },
    {
      "timestamp": 1757903334531,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903334556,
      "category": "submit_flag",
      "value": 149,
      "playerId": 22
    },
    {
      "timestamp": 1757903334556,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334570,
      "category": "submit_flag",
      "value": 75,
      "playerId": 12
    },
    {
      "timestamp": 1757903334570,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334573,
      "category": "submit_flag",
      "value": 78,
      "playerId": 71
    },
    {
      "timestamp": 1757903334573,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334577,
      "category": "static_file_loaded",
      "value": 148,
      "playerId": 47
    },
    {
      "timestamp": 1757903334582,
      "category": "static_file_loaded",
      "value": 64,
      "playerId": 6
    },
    {
      "timestamp": 1757903334582,
      "category": "submit_flag",
      "value": 369,
      "playerId": 29
    },
    {
      "timestamp": 1757903334583,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903334583,
      "category": "static_file_loaded",
      "value": 54,
      "playerId": 78
    },
    {
      "timestamp": 1757903334585,
      "category": "static_file_loaded",
      "value": 56,
      "playerId": 25
    },
    {
      "timestamp": 1757903334590,
      "category": "submit_flag",
      "value": 58,
      "playerId": 21
    },
    {
      "timestamp": 1757903334590,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334590,
      "category": "submit_flag",
      "value": 281,
      "playerId": 70
    },
    {
      "timestamp": 1757903334590,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334604,
      "category": "static_file_loaded",
      "value": 110,
      "playerId": 33
    },
    {
      "timestamp": 1757903334604,
      "category": "submit_flag",
      "value": 184,
      "playerId": 44
    },
    {
      "timestamp": 1757903334604,
      "category": "flag_correct",
      "value": 1,
      "playerId": 44
    },
    {
      "timestamp": 1757903334605,
      "category": "submit_flag",
      "value": 73,
      "playerId": 21
    },
    {
      "timestamp": 1757903334605,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334608,
      "category": "websocket_connected",
      "value": 181,
      "playerId": 72
    },
    {
      "timestamp": 1757903334610,
      "category": "submit_flag",
      "value": 1052,
      "playerId": 45
    },
    {
      "timestamp": 1757903334610,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903334611,
      "category": "static_file_loaded",
      "value": 34,
      "playerId": 47
    },
    {
      "timestamp": 1757903334611,
      "category": "submit_flag",
      "value": 38,
      "playerId": 59
    },
    {
      "timestamp": 1757903334611,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334625,
      "category": "submit_flag",
      "value": 52,
      "playerId": 43
    },
    {
      "timestamp": 1757903334625,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903334634,
      "category": "submit_flag",
      "value": 102,
      "playerId": 43
    },
    {
      "timestamp": 1757903334634,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903334641,
      "category": "static_file_loaded",
      "value": 312,
      "playerId": 75
    },
    {
      "timestamp": 1757903334648,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 33
    },
    {
      "timestamp": 1757903334648,
      "category": "submit_flag",
      "value": 390,
      "playerId": 55
    },
    {
      "timestamp": 1757903334648,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903334661,
      "category": "submit_flag",
      "value": 56,
      "playerId": 59
    },
    {
      "timestamp": 1757903334661,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334662,
      "category": "submit_flag",
      "value": 57,
      "playerId": 18
    },
    {
      "timestamp": 1757903334662,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903334662,
      "category": "submit_flag",
      "value": 131,
      "playerId": 71
    },
    {
      "timestamp": 1757903334662,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334666,
      "category": "submit_flag",
      "value": 45,
      "playerId": 18
    },
    {
      "timestamp": 1757903334666,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903334667,
      "category": "submit_flag",
      "value": 206,
      "playerId": 9
    },
    {
      "timestamp": 1757903334667,
      "category": "flag_correct",
      "value": 1,
      "playerId": 9
    },
    {
      "timestamp": 1757903334670,
      "category": "submit_flag",
      "value": 64,
      "playerId": 24
    },
    {
      "timestamp": 1757903334670,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903334670,
      "category": "submit_flag",
      "value": 172,
      "playerId": 21
    },
    {
      "timestamp": 1757903334670,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334671,
      "category": "websocket_connected",
      "value": 168,
      "playerId": 39
    },
    {
      "timestamp": 1757903334671,
      "category": "websocket_connected",
      "value": 170,
      "playerId": 27
    },
    {
      "timestamp": 1757903334671,
      "category": "submit_flag",
      "value": 139,
      "playerId": 71
    },
    {
      "timestamp": 1757903334671,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334673,
      "category": "static_file_loaded",
      "value": 32,
      "playerId": 75
    },
    {
      "timestamp": 1757903334674,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 3
    },
    {
      "timestamp": 1757903334681,
      "category": "static_file_loaded",
      "value": 98,
      "playerId": 78
    },
    {
      "timestamp": 1757903334683,
      "category": "submit_flag",
      "value": 149,
      "playerId": 59
    },
    {
      "timestamp": 1757903334683,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334688,
      "category": "submit_flag",
      "value": 192,
      "playerId": 43
    },
    {
      "timestamp": 1757903334688,
      "category": "flag_correct",
      "value": 1,
      "playerId": 43
    },
    {
      "timestamp": 1757903334696,
      "category": "static_file_loaded",
      "value": 192,
      "playerId": 13
    },
    {
      "timestamp": 1757903334699,
      "category": "submit_flag",
      "value": 36,
      "playerId": 56
    },
    {
      "timestamp": 1757903334699,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903334701,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 3
    },
    {
      "timestamp": 1757903334703,
      "category": "submit_flag",
      "value": 40,
      "playerId": 15
    },
    {
      "timestamp": 1757903334703,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903334706,
      "category": "websocket_connected",
      "value": 113,
      "playerId": 52
    },
    {
      "timestamp": 1757903334706,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 58
    },
    {
      "timestamp": 1757903334707,
      "category": "submit_flag",
      "value": 34,
      "playerId": 36
    },
    {
      "timestamp": 1757903334707,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903334710,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 78
    },
    {
      "timestamp": 1757903334712,
      "category": "submit_flag",
      "value": 50,
      "playerId": 50
    },
    {
      "timestamp": 1757903334712,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903334719,
      "category": "login_attempt",
      "value": 36,
      "playerId": 6
    },
    {
      "timestamp": 1757903334720,
      "category": "login_success",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903334722,
      "category": "static_file_loaded",
      "value": 287,
      "playerId": 4
    },
    {
      "timestamp": 1757903334723,
      "category": "submit_flag",
      "value": 61,
      "playerId": 68
    },
    {
      "timestamp": 1757903334723,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903334725,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 13
    },
    {
      "timestamp": 1757903334725,
      "category": "submit_flag",
      "value": 31,
      "playerId": 56
    },
    {
      "timestamp": 1757903334725,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903334730,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 58
    },
    {
      "timestamp": 1757903334731,
      "category": "submit_flag",
      "value": 68,
      "playerId": 62
    },
    {
      "timestamp": 1757903334731,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903334738,
      "category": "submit_flag",
      "value": 66,
      "playerId": 56
    },
    {
      "timestamp": 1757903334738,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903334742,
      "category": "submit_flag",
      "value": 30,
      "playerId": 36
    },
    {
      "timestamp": 1757903334742,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903334745,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 4
    },
    {
      "timestamp": 1757903334747,
      "category": "submit_flag",
      "value": 103,
      "playerId": 50
    },
    {
      "timestamp": 1757903334747,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903334755,
      "category": "submit_flag",
      "value": 260,
      "playerId": 73
    },
    {
      "timestamp": 1757903334755,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903334758,
      "category": "login_attempt",
      "value": 48,
      "playerId": 47
    },
    {
      "timestamp": 1757903334758,
      "category": "login_success",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903334765,
      "category": "static_file_loaded",
      "value": 180,
      "playerId": 25
    },
    {
      "timestamp": 1757903334766,
      "category": "submit_flag",
      "value": 35,
      "playerId": 68
    },
    {
      "timestamp": 1757903334766,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903334769,
      "category": "submit_flag",
      "value": 28,
      "playerId": 36
    },
    {
      "timestamp": 1757903334769,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903334780,
      "category": "submit_flag",
      "value": 36,
      "playerId": 14
    },
    {
      "timestamp": 1757903334780,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334784,
      "category": "submit_flag",
      "value": 121,
      "playerId": 15
    },
    {
      "timestamp": 1757903334784,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903334787,
      "category": "login_attempt",
      "value": 39,
      "playerId": 33
    },
    {
      "timestamp": 1757903334787,
      "category": "login_success",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903334790,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 25
    },
    {
      "timestamp": 1757903334790,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 51
    },
    {
      "timestamp": 1757903334798,
      "category": "submit_flag",
      "value": 32,
      "playerId": 12
    },
    {
      "timestamp": 1757903334798,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334803,
      "category": "static_file_loaded",
      "value": 102,
      "playerId": 3
    },
    {
      "timestamp": 1757903334805,
      "category": "login_attempt",
      "value": 32,
      "playerId": 75
    },
    {
      "timestamp": 1757903334805,
      "category": "login_success",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903334814,
      "category": "submit_flag",
      "value": 35,
      "playerId": 22
    },
    {
      "timestamp": 1757903334814,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334816,
      "category": "submit_flag",
      "value": 137,
      "playerId": 15
    },
    {
      "timestamp": 1757903334816,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903334817,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 51
    },
    {
      "timestamp": 1757903334817,
      "category": "submit_flag",
      "value": 30,
      "playerId": 14
    },
    {
      "timestamp": 1757903334818,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334820,
      "category": "submit_flag",
      "value": 47,
      "playerId": 16
    },
    {
      "timestamp": 1757903334820,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903334826,
      "category": "submit_flag",
      "value": 327,
      "playerId": 73
    },
    {
      "timestamp": 1757903334826,
      "category": "flag_correct",
      "value": 1,
      "playerId": 73
    },
    {
      "timestamp": 1757903334831,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 3
    },
    {
      "timestamp": 1757903334833,
      "category": "submit_flag",
      "value": 34,
      "playerId": 12
    },
    {
      "timestamp": 1757903334833,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334834,
      "category": "submit_flag",
      "value": 29,
      "playerId": 70
    },
    {
      "timestamp": 1757903334834,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334845,
      "category": "submit_flag",
      "value": 39,
      "playerId": 14
    },
    {
      "timestamp": 1757903334845,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903334848,
      "category": "submit_flag",
      "value": 33,
      "playerId": 64
    },
    {
      "timestamp": 1757903334848,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334853,
      "category": "static_file_loaded",
      "value": 32,
      "playerId": 79
    },
    {
      "timestamp": 1757903334855,
      "category": "submit_flag",
      "value": 37,
      "playerId": 16
    },
    {
      "timestamp": 1757903334855,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903334858,
      "category": "submit_flag",
      "value": 30,
      "playerId": 64
    },
    {
      "timestamp": 1757903334858,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903334862,
      "category": "submit_flag",
      "value": 29,
      "playerId": 2
    },
    {
      "timestamp": 1757903334862,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903334873,
      "category": "static_file_loaded",
      "value": 142,
      "playerId": 58
    },
    {
      "timestamp": 1757903334874,
      "category": "websocket_connected",
      "value": 105,
      "playerId": 6
    },
    {
      "timestamp": 1757903334881,
      "category": "submit_flag",
      "value": 43,
      "playerId": 2
    },
    {
      "timestamp": 1757903334881,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903334886,
      "category": "submit_flag",
      "value": 48,
      "playerId": 29
    },
    {
      "timestamp": 1757903334886,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903334887,
      "category": "static_file_loaded",
      "value": 34,
      "playerId": 79
    },
    {
      "timestamp": 1757903334889,
      "category": "static_file_loaded",
      "value": 31,
      "playerId": 66
    },
    {
      "timestamp": 1757903334890,
      "category": "submit_flag",
      "value": 91,
      "playerId": 2
    },
    {
      "timestamp": 1757903334890,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903334891,
      "category": "submit_flag",
      "value": 35,
      "playerId": 45
    },
    {
      "timestamp": 1757903334891,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903334897,
      "category": "submit_flag",
      "value": 39,
      "playerId": 12
    },
    {
      "timestamp": 1757903334897,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903334898,
      "category": "submit_flag",
      "value": 66,
      "playerId": 70
    },
    {
      "timestamp": 1757903334898,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334898,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 58
    },
    {
      "timestamp": 1757903334900,
      "category": "submit_flag",
      "value": 42,
      "playerId": 70
    },
    {
      "timestamp": 1757903334900,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903334900,
      "category": "submit_flag",
      "value": 132,
      "playerId": 22
    },
    {
      "timestamp": 1757903334900,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334906,
      "category": "websocket_connected",
      "value": 97,
      "playerId": 47
    },
    {
      "timestamp": 1757903334911,
      "category": "submit_flag",
      "value": 112,
      "playerId": 16
    },
    {
      "timestamp": 1757903334911,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903334913,
      "category": "submit_flag",
      "value": 36,
      "playerId": 45
    },
    {
      "timestamp": 1757903334913,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903334916,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 66
    },
    {
      "timestamp": 1757903334922,
      "category": "static_file_loaded",
      "value": 197,
      "playerId": 13
    },
    {
      "timestamp": 1757903334924,
      "category": "submit_flag",
      "value": 37,
      "playerId": 21
    },
    {
      "timestamp": 1757903334924,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334926,
      "category": "login_attempt",
      "value": 31,
      "playerId": 25
    },
    {
      "timestamp": 1757903334926,
      "category": "login_success",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903334929,
      "category": "websocket_connected",
      "value": 91,
      "playerId": 33
    },
    {
      "timestamp": 1757903334930,
      "category": "static_file_loaded",
      "value": 25,
      "playerId": 37
    },
    {
      "timestamp": 1757903334932,
      "category": "login_attempt",
      "value": 84,
      "playerId": 4
    },
    {
      "timestamp": 1757903334932,
      "category": "login_success",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903334940,
      "category": "submit_flag",
      "value": 268,
      "playerId": 62
    },
    {
      "timestamp": 1757903334940,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903334940,
      "category": "submit_flag",
      "value": 135,
      "playerId": 22
    },
    {
      "timestamp": 1757903334940,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903334941,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 10
    },
    {
      "timestamp": 1757903334965,
      "category": "static_file_loaded",
      "value": 49,
      "playerId": 66
    },
    {
      "timestamp": 1757903334966,
      "category": "websocket_connected",
      "value": 110,
      "playerId": 75
    },
    {
      "timestamp": 1757903334967,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 80
    },
    {
      "timestamp": 1757903334968,
      "category": "login_attempt",
      "value": 153,
      "playerId": 78
    },
    {
      "timestamp": 1757903334968,
      "category": "login_success",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903334968,
      "category": "static_file_loaded",
      "value": 46,
      "playerId": 13
    },
    {
      "timestamp": 1757903334970,
      "category": "submit_flag",
      "value": 83,
      "playerId": 21
    },
    {
      "timestamp": 1757903334970,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334970,
      "category": "submit_flag",
      "value": 46,
      "playerId": 21
    },
    {
      "timestamp": 1757903334970,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903334974,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 37
    },
    {
      "timestamp": 1757903334974,
      "category": "submit_flag",
      "value": 47,
      "playerId": 72
    },
    {
      "timestamp": 1757903334974,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903334978,
      "category": "submit_flag",
      "value": 123,
      "playerId": 55
    },
    {
      "timestamp": 1757903334978,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903334983,
      "category": "static_file_loaded",
      "value": 42,
      "playerId": 10
    },
    {
      "timestamp": 1757903334983,
      "category": "submit_flag",
      "value": 48,
      "playerId": 56
    },
    {
      "timestamp": 1757903334983,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903334983,
      "category": "submit_flag",
      "value": 60,
      "playerId": 59
    },
    {
      "timestamp": 1757903334983,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903334984,
      "category": "login_attempt",
      "value": 52,
      "playerId": 3
    },
    {
      "timestamp": 1757903334984,
      "category": "login_success",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903334986,
      "category": "submit_flag",
      "value": 62,
      "playerId": 72
    },
    {
      "timestamp": 1757903334986,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903334986,
      "category": "static_file_loaded",
      "value": 23,
      "playerId": 60
    },
    {
      "timestamp": 1757903334989,
      "category": "submit_flag",
      "value": 27,
      "playerId": 71
    },
    {
      "timestamp": 1757903334989,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903334989,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 66
    },
    {
      "timestamp": 1757903334991,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 80
    },
    {
      "timestamp": 1757903334997,
      "category": "submit_flag",
      "value": 35,
      "playerId": 71
    },
    {
      "timestamp": 1757903334998,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903335004,
      "category": "submit_flag",
      "value": 41,
      "playerId": 36
    },
    {
      "timestamp": 1757903335004,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335009,
      "category": "submit_flag",
      "value": 161,
      "playerId": 29
    },
    {
      "timestamp": 1757903335009,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903335015,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 60
    },
    {
      "timestamp": 1757903335016,
      "category": "submit_flag",
      "value": 37,
      "playerId": 39
    },
    {
      "timestamp": 1757903335016,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335023,
      "category": "static_file_loaded",
      "value": 206,
      "playerId": 51
    },
    {
      "timestamp": 1757903335024,
      "category": "submit_flag",
      "value": 40,
      "playerId": 39
    },
    {
      "timestamp": 1757903335024,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335030,
      "category": "submit_flag",
      "value": 119,
      "playerId": 59
    },
    {
      "timestamp": 1757903335030,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903335031,
      "category": "login_attempt",
      "value": 33,
      "playerId": 58
    },
    {
      "timestamp": 1757903335031,
      "category": "login_success",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903335042,
      "category": "submit_flag",
      "value": 62,
      "playerId": 72
    },
    {
      "timestamp": 1757903335042,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335063,
      "category": "static_file_loaded",
      "value": 48,
      "playerId": 60
    },
    {
      "timestamp": 1757903335063,
      "category": "submit_flag",
      "value": 55,
      "playerId": 27
    },
    {
      "timestamp": 1757903335063,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335069,
      "category": "static_file_loaded",
      "value": 52,
      "playerId": 35
    },
    {
      "timestamp": 1757903335072,
      "category": "submit_flag",
      "value": 57,
      "playerId": 15
    },
    {
      "timestamp": 1757903335072,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335077,
      "category": "static_file_loaded",
      "value": 54,
      "playerId": 51
    },
    {
      "timestamp": 1757903335077,
      "category": "submit_flag",
      "value": 54,
      "playerId": 15
    },
    {
      "timestamp": 1757903335077,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335094,
      "category": "submit_flag",
      "value": 115,
      "playerId": 56
    },
    {
      "timestamp": 1757903335094,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335094,
      "category": "submit_flag",
      "value": 63,
      "playerId": 36
    },
    {
      "timestamp": 1757903335095,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335095,
      "category": "static_file_loaded",
      "value": 54,
      "playerId": 28
    },
    {
      "timestamp": 1757903335103,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 35
    },
    {
      "timestamp": 1757903335109,
      "category": "static_file_loaded",
      "value": 221,
      "playerId": 79
    },
    {
      "timestamp": 1757903335111,
      "category": "static_file_loaded",
      "value": 128,
      "playerId": 10
    },
    {
      "timestamp": 1757903335111,
      "category": "submit_flag",
      "value": 81,
      "playerId": 52
    },
    {
      "timestamp": 1757903335112,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335112,
      "category": "submit_flag",
      "value": 89,
      "playerId": 56
    },
    {
      "timestamp": 1757903335112,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335112,
      "category": "static_file_loaded",
      "value": 49,
      "playerId": 60
    },
    {
      "timestamp": 1757903335112,
      "category": "submit_flag",
      "value": 104,
      "playerId": 27
    },
    {
      "timestamp": 1757903335112,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335113,
      "category": "submit_flag",
      "value": 49,
      "playerId": 39
    },
    {
      "timestamp": 1757903335113,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335118,
      "category": "submit_flag",
      "value": 54,
      "playerId": 52
    },
    {
      "timestamp": 1757903335118,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335119,
      "category": "websocket_connected",
      "value": 140,
      "playerId": 25
    },
    {
      "timestamp": 1757903335122,
      "category": "submit_flag",
      "value": 58,
      "playerId": 36
    },
    {
      "timestamp": 1757903335122,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335123,
      "category": "websocket_connected",
      "value": 139,
      "playerId": 4
    },
    {
      "timestamp": 1757903335128,
      "category": "submit_flag",
      "value": 150,
      "playerId": 27
    },
    {
      "timestamp": 1757903335128,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335128,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 28
    },
    {
      "timestamp": 1757903335129,
      "category": "submit_flag",
      "value": 450,
      "playerId": 68
    },
    {
      "timestamp": 1757903335129,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335130,
      "category": "submit_flag",
      "value": 34,
      "playerId": 14
    },
    {
      "timestamp": 1757903335130,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903335133,
      "category": "login_attempt",
      "value": 38,
      "playerId": 13
    },
    {
      "timestamp": 1757903335134,
      "category": "login_success",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903335136,
      "category": "login_attempt",
      "value": 41,
      "playerId": 66
    },
    {
      "timestamp": 1757903335136,
      "category": "login_success",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903335137,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 79
    },
    {
      "timestamp": 1757903335139,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 10
    },
    {
      "timestamp": 1757903335145,
      "category": "static_file_loaded",
      "value": 31,
      "playerId": 40
    },
    {
      "timestamp": 1757903335146,
      "category": "submit_flag",
      "value": 31,
      "playerId": 70
    },
    {
      "timestamp": 1757903335146,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903335147,
      "category": "submit_flag",
      "value": 32,
      "playerId": 12
    },
    {
      "timestamp": 1757903335147,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903335148,
      "category": "submit_flag",
      "value": 83,
      "playerId": 52
    },
    {
      "timestamp": 1757903335148,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335156,
      "category": "submit_flag",
      "value": 33,
      "playerId": 12
    },
    {
      "timestamp": 1757903335156,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903335158,
      "category": "submit_flag",
      "value": 35,
      "playerId": 14
    },
    {
      "timestamp": 1757903335158,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903335158,
      "category": "websocket_connected",
      "value": 140,
      "playerId": 78
    },
    {
      "timestamp": 1757903335164,
      "category": "submit_flag",
      "value": 34,
      "playerId": 2
    },
    {
      "timestamp": 1757903335164,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335171,
      "category": "submit_flag",
      "value": 56,
      "playerId": 15
    },
    {
      "timestamp": 1757903335171,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335176,
      "category": "websocket_connected",
      "value": 136,
      "playerId": 3
    },
    {
      "timestamp": 1757903335178,
      "category": "submit_flag",
      "value": 114,
      "playerId": 14
    },
    {
      "timestamp": 1757903335178,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903335179,
      "category": "static_file_loaded",
      "value": 34,
      "playerId": 26
    },
    {
      "timestamp": 1757903335185,
      "category": "static_file_loaded",
      "value": 40,
      "playerId": 40
    },
    {
      "timestamp": 1757903335188,
      "category": "submit_flag",
      "value": 373,
      "playerId": 64
    },
    {
      "timestamp": 1757903335188,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335196,
      "category": "static_file_loaded",
      "value": 222,
      "playerId": 37
    },
    {
      "timestamp": 1757903335198,
      "category": "submit_flag",
      "value": 46,
      "playerId": 12
    },
    {
      "timestamp": 1757903335198,
      "category": "flag_correct",
      "value": 1,
      "playerId": 12
    },
    {
      "timestamp": 1757903335199,
      "category": "submit_flag",
      "value": 47,
      "playerId": 70
    },
    {
      "timestamp": 1757903335199,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903335207,
      "category": "submit_flag",
      "value": 49,
      "playerId": 70
    },
    {
      "timestamp": 1757903335207,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903335215,
      "category": "submit_flag",
      "value": 49,
      "playerId": 22
    },
    {
      "timestamp": 1757903335215,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903335216,
      "category": "submit_flag",
      "value": 118,
      "playerId": 2
    },
    {
      "timestamp": 1757903335216,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335216,
      "category": "static_file_loaded",
      "value": 37,
      "playerId": 26
    },
    {
      "timestamp": 1757903335217,
      "category": "websocket_connected",
      "value": 121,
      "playerId": 58
    },
    {
      "timestamp": 1757903335217,
      "category": "login_attempt",
      "value": 38,
      "playerId": 51
    },
    {
      "timestamp": 1757903335217,
      "category": "login_success",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903335217,
      "category": "submit_flag",
      "value": 38,
      "playerId": 21
    },
    {
      "timestamp": 1757903335217,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903335223,
      "category": "static_file_loaded",
      "value": 126,
      "playerId": 11
    },
    {
      "timestamp": 1757903335223,
      "category": "submit_flag",
      "value": 44,
      "playerId": 22
    },
    {
      "timestamp": 1757903335223,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903335226,
      "category": "submit_flag",
      "value": 34,
      "playerId": 21
    },
    {
      "timestamp": 1757903335226,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903335226,
      "category": "submit_flag",
      "value": 34,
      "playerId": 21
    },
    {
      "timestamp": 1757903335226,
      "category": "flag_correct",
      "value": 1,
      "playerId": 21
    },
    {
      "timestamp": 1757903335226,
      "category": "submit_flag",
      "value": 111,
      "playerId": 2
    },
    {
      "timestamp": 1757903335226,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335230,
      "category": "static_file_loaded",
      "value": 34,
      "playerId": 37
    },
    {
      "timestamp": 1757903335243,
      "category": "static_file_loaded",
      "value": 252,
      "playerId": 80
    },
    {
      "timestamp": 1757903335246,
      "category": "submit_flag",
      "value": 38,
      "playerId": 16
    },
    {
      "timestamp": 1757903335246,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903335259,
      "category": "login_attempt",
      "value": 40,
      "playerId": 60
    },
    {
      "timestamp": 1757903335259,
      "category": "login_success",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903335259,
      "category": "static_file_loaded",
      "value": 36,
      "playerId": 11
    },
    {
      "timestamp": 1757903335263,
      "category": "submit_flag",
      "value": 43,
      "playerId": 6
    },
    {
      "timestamp": 1757903335263,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903335264,
      "category": "submit_flag",
      "value": 40,
      "playerId": 6
    },
    {
      "timestamp": 1757903335264,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903335264,
      "category": "submit_flag",
      "value": 40,
      "playerId": 47
    },
    {
      "timestamp": 1757903335264,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903335265,
      "category": "submit_flag",
      "value": 31,
      "playerId": 47
    },
    {
      "timestamp": 1757903335265,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903335269,
      "category": "submit_flag",
      "value": 35,
      "playerId": 33
    },
    {
      "timestamp": 1757903335269,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903335272,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 80
    },
    {
      "timestamp": 1757903335278,
      "category": "login_attempt",
      "value": 33,
      "playerId": 10
    },
    {
      "timestamp": 1757903335278,
      "category": "login_success",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903335281,
      "category": "login_attempt",
      "value": 36,
      "playerId": 79
    },
    {
      "timestamp": 1757903335281,
      "category": "login_success",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903335296,
      "category": "submit_flag",
      "value": 51,
      "playerId": 22
    },
    {
      "timestamp": 1757903335296,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903335297,
      "category": "submit_flag",
      "value": 52,
      "playerId": 16
    },
    {
      "timestamp": 1757903335297,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903335301,
      "category": "submit_flag",
      "value": 56,
      "playerId": 16
    },
    {
      "timestamp": 1757903335301,
      "category": "flag_correct",
      "value": 1,
      "playerId": 16
    },
    {
      "timestamp": 1757903335302,
      "category": "submit_flag",
      "value": 42,
      "playerId": 47
    },
    {
      "timestamp": 1757903335302,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903335302,
      "category": "submit_flag",
      "value": 57,
      "playerId": 33
    },
    {
      "timestamp": 1757903335302,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903335311,
      "category": "static_file_loaded",
      "value": 208,
      "playerId": 35
    },
    {
      "timestamp": 1757903335314,
      "category": "submit_flag",
      "value": 45,
      "playerId": 6
    },
    {
      "timestamp": 1757903335314,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903335322,
      "category": "websocket_connected",
      "value": 131,
      "playerId": 66
    },
    {
      "timestamp": 1757903335322,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 8
    },
    {
      "timestamp": 1757903335326,
      "category": "websocket_connected",
      "value": 137,
      "playerId": 13
    },
    {
      "timestamp": 1757903335330,
      "category": "submit_flag",
      "value": 667,
      "playerId": 18
    },
    {
      "timestamp": 1757903335330,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903335351,
      "category": "static_file_loaded",
      "value": 135,
      "playerId": 26
    },
    {
      "timestamp": 1757903335358,
      "category": "static_file_loaded",
      "value": 36,
      "playerId": 8
    },
    {
      "timestamp": 1757903335358,
      "category": "static_file_loaded",
      "value": 47,
      "playerId": 35
    },
    {
      "timestamp": 1757903335367,
      "category": "submit_flag",
      "value": 440,
      "playerId": 59
    },
    {
      "timestamp": 1757903335367,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903335368,
      "category": "submit_flag",
      "value": 60,
      "playerId": 72
    },
    {
      "timestamp": 1757903335368,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335370,
      "category": "submit_flag",
      "value": 43,
      "playerId": 27
    },
    {
      "timestamp": 1757903335370,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335371,
      "category": "login_attempt",
      "value": 35,
      "playerId": 37
    },
    {
      "timestamp": 1757903335371,
      "category": "login_success",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903335379,
      "category": "submit_flag",
      "value": 35,
      "playerId": 68
    },
    {
      "timestamp": 1757903335379,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335383,
      "category": "submit_flag",
      "value": 40,
      "playerId": 72
    },
    {
      "timestamp": 1757903335384,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335387,
      "category": "static_file_loaded",
      "value": 36,
      "playerId": 26
    },
    {
      "timestamp": 1757903335389,
      "category": "submit_flag",
      "value": 41,
      "playerId": 36
    },
    {
      "timestamp": 1757903335389,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335392,
      "category": "submit_flag",
      "value": 43,
      "playerId": 68
    },
    {
      "timestamp": 1757903335392,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335393,
      "category": "websocket_connected",
      "value": 123,
      "playerId": 51
    },
    {
      "timestamp": 1757903335414,
      "category": "static_file_loaded",
      "value": 56,
      "playerId": 8
    },
    {
      "timestamp": 1757903335423,
      "category": "static_file_loaded",
      "value": 238,
      "playerId": 40
    },
    {
      "timestamp": 1757903335433,
      "category": "submit_flag",
      "value": 124,
      "playerId": 33
    },
    {
      "timestamp": 1757903335433,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903335437,
      "category": "submit_flag",
      "value": 74,
      "playerId": 27
    },
    {
      "timestamp": 1757903335437,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335438,
      "category": "submit_flag",
      "value": 74,
      "playerId": 36
    },
    {
      "timestamp": 1757903335438,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335442,
      "category": "submit_flag",
      "value": 70,
      "playerId": 56
    },
    {
      "timestamp": 1757903335442,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335443,
      "category": "static_file_loaded",
      "value": 315,
      "playerId": 28
    },
    {
      "timestamp": 1757903335444,
      "category": "submit_flag",
      "value": 123,
      "playerId": 39
    },
    {
      "timestamp": 1757903335444,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335446,
      "category": "submit_flag",
      "value": 61,
      "playerId": 27
    },
    {
      "timestamp": 1757903335446,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335447,
      "category": "submit_flag",
      "value": 76,
      "playerId": 39
    },
    {
      "timestamp": 1757903335447,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335456,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 40
    },
    {
      "timestamp": 1757903335461,
      "category": "submit_flag",
      "value": 77,
      "playerId": 15
    },
    {
      "timestamp": 1757903335462,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335462,
      "category": "submit_flag",
      "value": 78,
      "playerId": 15
    },
    {
      "timestamp": 1757903335462,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335463,
      "category": "submit_flag",
      "value": 78,
      "playerId": 36
    },
    {
      "timestamp": 1757903335463,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335463,
      "category": "login_attempt",
      "value": 79,
      "playerId": 80
    },
    {
      "timestamp": 1757903335463,
      "category": "login_success",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903335464,
      "category": "static_file_loaded",
      "value": 50,
      "playerId": 8
    },
    {
      "timestamp": 1757903335464,
      "category": "static_file_loaded",
      "value": 48,
      "playerId": 41
    },
    {
      "timestamp": 1757903335464,
      "category": "submit_flag",
      "value": 49,
      "playerId": 56
    },
    {
      "timestamp": 1757903335464,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335464,
      "category": "submit_flag",
      "value": 49,
      "playerId": 15
    },
    {
      "timestamp": 1757903335465,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335465,
      "category": "submit_flag",
      "value": 50,
      "playerId": 14
    },
    {
      "timestamp": 1757903335465,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903335465,
      "category": "submit_flag",
      "value": 49,
      "playerId": 68
    },
    {
      "timestamp": 1757903335465,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335465,
      "category": "submit_flag",
      "value": 49,
      "playerId": 14
    },
    {
      "timestamp": 1757903335465,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903335470,
      "category": "submit_flag",
      "value": 648,
      "playerId": 45
    },
    {
      "timestamp": 1757903335470,
      "category": "flag_correct",
      "value": 1,
      "playerId": 45
    },
    {
      "timestamp": 1757903335471,
      "category": "websocket_connected",
      "value": 153,
      "playerId": 60
    },
    {
      "timestamp": 1757903335471,
      "category": "submit_flag",
      "value": 55,
      "playerId": 64
    },
    {
      "timestamp": 1757903335471,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335472,
      "category": "websocket_connected",
      "value": 137,
      "playerId": 79
    },
    {
      "timestamp": 1757903335473,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 28
    },
    {
      "timestamp": 1757903335474,
      "category": "submit_flag",
      "value": 111,
      "playerId": 72
    },
    {
      "timestamp": 1757903335474,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335475,
      "category": "websocket_connected",
      "value": 142,
      "playerId": 10
    },
    {
      "timestamp": 1757903335476,
      "category": "submit_flag",
      "value": 61,
      "playerId": 56
    },
    {
      "timestamp": 1757903335476,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335482,
      "category": "submit_flag",
      "value": 32,
      "playerId": 52
    },
    {
      "timestamp": 1757903335483,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335486,
      "category": "submit_flag",
      "value": 38,
      "playerId": 25
    },
    {
      "timestamp": 1757903335486,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903335487,
      "category": "static_file_loaded",
      "value": 228,
      "playerId": 11
    },
    {
      "timestamp": 1757903335489,
      "category": "submit_flag",
      "value": 39,
      "playerId": 52
    },
    {
      "timestamp": 1757903335489,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335491,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 41
    },
    {
      "timestamp": 1757903335493,
      "category": "submit_flag",
      "value": 43,
      "playerId": 2
    },
    {
      "timestamp": 1757903335493,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335494,
      "category": "login_attempt",
      "value": 28,
      "playerId": 35
    },
    {
      "timestamp": 1757903335494,
      "category": "login_success",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903335494,
      "category": "submit_flag",
      "value": 44,
      "playerId": 64
    },
    {
      "timestamp": 1757903335494,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335497,
      "category": "submit_flag",
      "value": 81,
      "playerId": 39
    },
    {
      "timestamp": 1757903335497,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335499,
      "category": "submit_flag",
      "value": 33,
      "playerId": 64
    },
    {
      "timestamp": 1757903335499,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335500,
      "category": "submit_flag",
      "value": 34,
      "playerId": 2
    },
    {
      "timestamp": 1757903335500,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335505,
      "category": "submit_flag",
      "value": 30,
      "playerId": 4
    },
    {
      "timestamp": 1757903335505,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903335515,
      "category": "submit_flag",
      "value": 34,
      "playerId": 25
    },
    {
      "timestamp": 1757903335515,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903335516,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 11
    },
    {
      "timestamp": 1757903335519,
      "category": "submit_flag",
      "value": 39,
      "playerId": 70
    },
    {
      "timestamp": 1757903335520,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903335532,
      "category": "login_attempt",
      "value": 44,
      "playerId": 26
    },
    {
      "timestamp": 1757903335532,
      "category": "login_success",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903335552,
      "category": "submit_flag",
      "value": 60,
      "playerId": 78
    },
    {
      "timestamp": 1757903335552,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903335555,
      "category": "submit_flag",
      "value": 139,
      "playerId": 14
    },
    {
      "timestamp": 1757903335555,
      "category": "flag_correct",
      "value": 1,
      "playerId": 14
    },
    {
      "timestamp": 1757903335576,
      "category": "static_file_loaded",
      "value": 85,
      "playerId": 41
    },
    {
      "timestamp": 1757903335585,
      "category": "submit_flag",
      "value": 82,
      "playerId": 3
    },
    {
      "timestamp": 1757903335585,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903335587,
      "category": "submit_flag",
      "value": 137,
      "playerId": 25
    },
    {
      "timestamp": 1757903335587,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903335591,
      "category": "submit_flag",
      "value": 80,
      "playerId": 78
    },
    {
      "timestamp": 1757903335591,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903335591,
      "category": "static_file_loaded",
      "value": 68,
      "playerId": 67
    },
    {
      "timestamp": 1757903335592,
      "category": "submit_flag",
      "value": 177,
      "playerId": 52
    },
    {
      "timestamp": 1757903335592,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335592,
      "category": "submit_flag",
      "value": 67,
      "playerId": 3
    },
    {
      "timestamp": 1757903335592,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903335593,
      "category": "submit_flag",
      "value": 745,
      "playerId": 29
    },
    {
      "timestamp": 1757903335593,
      "category": "flag_correct",
      "value": 1,
      "playerId": 29
    },
    {
      "timestamp": 1757903335593,
      "category": "submit_flag",
      "value": 68,
      "playerId": 2
    },
    {
      "timestamp": 1757903335593,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335601,
      "category": "submit_flag",
      "value": 76,
      "playerId": 22
    },
    {
      "timestamp": 1757903335601,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903335601,
      "category": "submit_flag",
      "value": 44,
      "playerId": 6
    },
    {
      "timestamp": 1757903335601,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903335602,
      "category": "submit_flag",
      "value": 42,
      "playerId": 18
    },
    {
      "timestamp": 1757903335602,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903335605,
      "category": "submit_flag",
      "value": 48,
      "playerId": 4
    },
    {
      "timestamp": 1757903335605,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903335605,
      "category": "submit_flag",
      "value": 47,
      "playerId": 58
    },
    {
      "timestamp": 1757903335605,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903335606,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 41
    },
    {
      "timestamp": 1757903335606,
      "category": "websocket_connected",
      "value": 158,
      "playerId": 37
    },
    {
      "timestamp": 1757903335607,
      "category": "login_attempt",
      "value": 47,
      "playerId": 40
    },
    {
      "timestamp": 1757903335607,
      "category": "login_success",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903335609,
      "category": "submit_flag",
      "value": 82,
      "playerId": 4
    },
    {
      "timestamp": 1757903335609,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903335610,
      "category": "submit_flag",
      "value": 51,
      "playerId": 47
    },
    {
      "timestamp": 1757903335610,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903335612,
      "category": "submit_flag",
      "value": 161,
      "playerId": 70
    },
    {
      "timestamp": 1757903335612,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903335615,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 67
    },
    {
      "timestamp": 1757903335619,
      "category": "submit_flag",
      "value": 26,
      "playerId": 18
    },
    {
      "timestamp": 1757903335619,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903335620,
      "category": "submit_flag",
      "value": 170,
      "playerId": 70
    },
    {
      "timestamp": 1757903335620,
      "category": "flag_correct",
      "value": 1,
      "playerId": 70
    },
    {
      "timestamp": 1757903335622,
      "category": "submit_flag",
      "value": 28,
      "playerId": 22
    },
    {
      "timestamp": 1757903335622,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903335623,
      "category": "login_attempt",
      "value": 29,
      "playerId": 28
    },
    {
      "timestamp": 1757903335623,
      "category": "login_success",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903335628,
      "category": "submit_flag",
      "value": 32,
      "playerId": 3
    },
    {
      "timestamp": 1757903335628,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903335628,
      "category": "submit_flag",
      "value": 34,
      "playerId": 47
    },
    {
      "timestamp": 1757903335628,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903335631,
      "category": "submit_flag",
      "value": 38,
      "playerId": 78
    },
    {
      "timestamp": 1757903335631,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903335635,
      "category": "submit_flag",
      "value": 41,
      "playerId": 18
    },
    {
      "timestamp": 1757903335636,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903335643,
      "category": "login_attempt",
      "value": 49,
      "playerId": 8
    },
    {
      "timestamp": 1757903335643,
      "category": "login_success",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903335644,
      "category": "submit_flag",
      "value": 37,
      "playerId": 58
    },
    {
      "timestamp": 1757903335644,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903335655,
      "category": "login_attempt",
      "value": 39,
      "playerId": 11
    },
    {
      "timestamp": 1757903335655,
      "category": "login_success",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903335656,
      "category": "submit_flag",
      "value": 54,
      "playerId": 58
    },
    {
      "timestamp": 1757903335656,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903335656,
      "category": "submit_flag",
      "value": 36,
      "playerId": 6
    },
    {
      "timestamp": 1757903335656,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903335656,
      "category": "submit_flag",
      "value": 35,
      "playerId": 75
    },
    {
      "timestamp": 1757903335656,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903335659,
      "category": "submit_flag",
      "value": 34,
      "playerId": 75
    },
    {
      "timestamp": 1757903335659,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903335664,
      "category": "static_file_loaded",
      "value": 36,
      "playerId": 63
    },
    {
      "timestamp": 1757903335667,
      "category": "websocket_connected",
      "value": 108,
      "playerId": 35
    },
    {
      "timestamp": 1757903335670,
      "category": "websocket_connected",
      "value": 147,
      "playerId": 80
    },
    {
      "timestamp": 1757903335674,
      "category": "submit_flag",
      "value": 80,
      "playerId": 47
    },
    {
      "timestamp": 1757903335674,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903335679,
      "category": "submit_flag",
      "value": 28,
      "playerId": 59
    },
    {
      "timestamp": 1757903335679,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903335684,
      "category": "submit_flag",
      "value": 88,
      "playerId": 75
    },
    {
      "timestamp": 1757903335684,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903335690,
      "category": "websocket_connected",
      "value": 96,
      "playerId": 26
    },
    {
      "timestamp": 1757903335694,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 63
    },
    {
      "timestamp": 1757903335703,
      "category": "submit_flag",
      "value": 42,
      "playerId": 36
    },
    {
      "timestamp": 1757903335703,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335711,
      "category": "submit_flag",
      "value": 50,
      "playerId": 59
    },
    {
      "timestamp": 1757903335711,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903335712,
      "category": "submit_flag",
      "value": 51,
      "playerId": 59
    },
    {
      "timestamp": 1757903335712,
      "category": "flag_correct",
      "value": 1,
      "playerId": 59
    },
    {
      "timestamp": 1757903335712,
      "category": "submit_flag",
      "value": 42,
      "playerId": 13
    },
    {
      "timestamp": 1757903335712,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903335712,
      "category": "submit_flag",
      "value": 42,
      "playerId": 68
    },
    {
      "timestamp": 1757903335712,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335713,
      "category": "submit_flag",
      "value": 38,
      "playerId": 27
    },
    {
      "timestamp": 1757903335713,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335719,
      "category": "submit_flag",
      "value": 42,
      "playerId": 51
    },
    {
      "timestamp": 1757903335720,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903335725,
      "category": "static_file_loaded",
      "value": 110,
      "playerId": 67
    },
    {
      "timestamp": 1757903335725,
      "category": "submit_flag",
      "value": 39,
      "playerId": 33
    },
    {
      "timestamp": 1757903335725,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903335726,
      "category": "submit_flag",
      "value": 41,
      "playerId": 66
    },
    {
      "timestamp": 1757903335726,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903335726,
      "category": "static_file_loaded",
      "value": 35,
      "playerId": 17
    },
    {
      "timestamp": 1757903335732,
      "category": "submit_flag",
      "value": 41,
      "playerId": 33
    },
    {
      "timestamp": 1757903335732,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903335734,
      "category": "submit_flag",
      "value": 43,
      "playerId": 72
    },
    {
      "timestamp": 1757903335735,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335756,
      "category": "static_file_loaded",
      "value": 62,
      "playerId": 63
    },
    {
      "timestamp": 1757903335756,
      "category": "submit_flag",
      "value": 163,
      "playerId": 6
    },
    {
      "timestamp": 1757903335756,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903335768,
      "category": "websocket_connected",
      "value": 108,
      "playerId": 40
    },
    {
      "timestamp": 1757903335769,
      "category": "static_file_loaded",
      "value": 63,
      "playerId": 20
    },
    {
      "timestamp": 1757903335769,
      "category": "submit_flag",
      "value": 63,
      "playerId": 66
    },
    {
      "timestamp": 1757903335769,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903335769,
      "category": "submit_flag",
      "value": 66,
      "playerId": 27
    },
    {
      "timestamp": 1757903335769,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335770,
      "category": "submit_flag",
      "value": 65,
      "playerId": 15
    },
    {
      "timestamp": 1757903335770,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335770,
      "category": "submit_flag",
      "value": 64,
      "playerId": 15
    },
    {
      "timestamp": 1757903335770,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335773,
      "category": "submit_flag",
      "value": 846,
      "playerId": 55
    },
    {
      "timestamp": 1757903335773,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903335776,
      "category": "static_file_loaded",
      "value": 60,
      "playerId": 34
    },
    {
      "timestamp": 1757903335776,
      "category": "submit_flag",
      "value": 71,
      "playerId": 27
    },
    {
      "timestamp": 1757903335776,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903335777,
      "category": "login_attempt",
      "value": 61,
      "playerId": 41
    },
    {
      "timestamp": 1757903335777,
      "category": "login_success",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903335777,
      "category": "submit_flag",
      "value": 61,
      "playerId": 56
    },
    {
      "timestamp": 1757903335777,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335778,
      "category": "static_file_loaded",
      "value": 53,
      "playerId": 67
    },
    {
      "timestamp": 1757903335778,
      "category": "submit_flag",
      "value": 73,
      "playerId": 72
    },
    {
      "timestamp": 1757903335778,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335778,
      "category": "submit_flag",
      "value": 185,
      "playerId": 22
    },
    {
      "timestamp": 1757903335778,
      "category": "flag_correct",
      "value": 1,
      "playerId": 22
    },
    {
      "timestamp": 1757903335778,
      "category": "static_file_loaded",
      "value": 52,
      "playerId": 17
    },
    {
      "timestamp": 1757903335778,
      "category": "submit_flag",
      "value": 51,
      "playerId": 51
    },
    {
      "timestamp": 1757903335778,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903335779,
      "category": "submit_flag",
      "value": 52,
      "playerId": 36
    },
    {
      "timestamp": 1757903335779,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335779,
      "category": "submit_flag",
      "value": 53,
      "playerId": 66
    },
    {
      "timestamp": 1757903335779,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903335784,
      "category": "submit_flag",
      "value": 58,
      "playerId": 15
    },
    {
      "timestamp": 1757903335784,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903335785,
      "category": "submit_flag",
      "value": 79,
      "playerId": 33
    },
    {
      "timestamp": 1757903335785,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903335785,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 63
    },
    {
      "timestamp": 1757903335787,
      "category": "submit_flag",
      "value": 30,
      "playerId": 36
    },
    {
      "timestamp": 1757903335787,
      "category": "flag_correct",
      "value": 1,
      "playerId": 36
    },
    {
      "timestamp": 1757903335787,
      "category": "submit_flag",
      "value": 30,
      "playerId": 68
    },
    {
      "timestamp": 1757903335787,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335789,
      "category": "submit_flag",
      "value": 32,
      "playerId": 72
    },
    {
      "timestamp": 1757903335789,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903335791,
      "category": "submit_flag",
      "value": 34,
      "playerId": 68
    },
    {
      "timestamp": 1757903335791,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903335791,
      "category": "static_file_loaded",
      "value": 22,
      "playerId": 20
    },
    {
      "timestamp": 1757903335802,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 34
    },
    {
      "timestamp": 1757903335803,
      "category": "submit_flag",
      "value": 46,
      "playerId": 64
    },
    {
      "timestamp": 1757903335803,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335819,
      "category": "websocket_connected",
      "value": 147,
      "playerId": 28
    },
    {
      "timestamp": 1757903335820,
      "category": "static_file_loaded",
      "value": 40,
      "playerId": 65
    },
    {
      "timestamp": 1757903335826,
      "category": "submit_flag",
      "value": 45,
      "playerId": 60
    },
    {
      "timestamp": 1757903335826,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903335827,
      "category": "submit_flag",
      "value": 46,
      "playerId": 39
    },
    {
      "timestamp": 1757903335827,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335827,
      "category": "submit_flag",
      "value": 46,
      "playerId": 10
    },
    {
      "timestamp": 1757903335827,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903335843,
      "category": "submit_flag",
      "value": 62,
      "playerId": 60
    },
    {
      "timestamp": 1757903335843,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903335844,
      "category": "submit_flag",
      "value": 56,
      "playerId": 60
    },
    {
      "timestamp": 1757903335844,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903335845,
      "category": "submit_flag",
      "value": 64,
      "playerId": 10
    },
    {
      "timestamp": 1757903335845,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903335845,
      "category": "submit_flag",
      "value": 56,
      "playerId": 64
    },
    {
      "timestamp": 1757903335845,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335854,
      "category": "websocket_connected",
      "value": 150,
      "playerId": 8
    },
    {
      "timestamp": 1757903335855,
      "category": "submit_flag",
      "value": 52,
      "playerId": 2
    },
    {
      "timestamp": 1757903335855,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335864,
      "category": "submit_flag",
      "value": 84,
      "playerId": 56
    },
    {
      "timestamp": 1757903335864,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335864,
      "category": "submit_flag",
      "value": 83,
      "playerId": 52
    },
    {
      "timestamp": 1757903335864,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335865,
      "category": "static_file_loaded",
      "value": 44,
      "playerId": 65
    },
    {
      "timestamp": 1757903335865,
      "category": "submit_flag",
      "value": 49,
      "playerId": 39
    },
    {
      "timestamp": 1757903335865,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903335867,
      "category": "submit_flag",
      "value": 51,
      "playerId": 79
    },
    {
      "timestamp": 1757903335868,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903335868,
      "category": "websocket_connected",
      "value": 153,
      "playerId": 11
    },
    {
      "timestamp": 1757903335878,
      "category": "submit_flag",
      "value": 62,
      "playerId": 25
    },
    {
      "timestamp": 1757903335878,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903335895,
      "category": "static_file_loaded",
      "value": 117,
      "playerId": 17
    },
    {
      "timestamp": 1757903335896,
      "category": "submit_flag",
      "value": 80,
      "playerId": 25
    },
    {
      "timestamp": 1757903335896,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903335897,
      "category": "submit_flag",
      "value": 60,
      "playerId": 79
    },
    {
      "timestamp": 1757903335897,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903335897,
      "category": "submit_flag",
      "value": 60,
      "playerId": 10
    },
    {
      "timestamp": 1757903335897,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903335897,
      "category": "submit_flag",
      "value": 60,
      "playerId": 4
    },
    {
      "timestamp": 1757903335897,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903335900,
      "category": "submit_flag",
      "value": 63,
      "playerId": 64
    },
    {
      "timestamp": 1757903335900,
      "category": "flag_correct",
      "value": 1,
      "playerId": 64
    },
    {
      "timestamp": 1757903335901,
      "category": "submit_flag",
      "value": 62,
      "playerId": 4
    },
    {
      "timestamp": 1757903335901,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903335901,
      "category": "submit_flag",
      "value": 45,
      "playerId": 18
    },
    {
      "timestamp": 1757903335901,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903335902,
      "category": "submit_flag",
      "value": 47,
      "playerId": 52
    },
    {
      "timestamp": 1757903335902,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335902,
      "category": "submit_flag",
      "value": 47,
      "playerId": 3
    },
    {
      "timestamp": 1757903335902,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903335909,
      "category": "submit_flag",
      "value": 53,
      "playerId": 3
    },
    {
      "timestamp": 1757903335909,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903335930,
      "category": "static_file_loaded",
      "value": 138,
      "playerId": 20
    },
    {
      "timestamp": 1757903335930,
      "category": "submit_flag",
      "value": 173,
      "playerId": 56
    },
    {
      "timestamp": 1757903335930,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903335931,
      "category": "submit_flag",
      "value": 173,
      "playerId": 51
    },
    {
      "timestamp": 1757903335931,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903335931,
      "category": "submit_flag",
      "value": 75,
      "playerId": 2
    },
    {
      "timestamp": 1757903335931,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903335932,
      "category": "submit_flag",
      "value": 93,
      "playerId": 52
    },
    {
      "timestamp": 1757903335932,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903335932,
      "category": "submit_flag",
      "value": 77,
      "playerId": 25
    },
    {
      "timestamp": 1757903335932,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903335938,
      "category": "static_file_loaded",
      "value": 73,
      "playerId": 65
    },
    {
      "timestamp": 1757903335940,
      "category": "submit_flag",
      "value": 61,
      "playerId": 78
    },
    {
      "timestamp": 1757903335940,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903335941,
      "category": "submit_flag",
      "value": 62,
      "playerId": 58
    },
    {
      "timestamp": 1757903335941,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903335941,
      "category": "submit_flag",
      "value": 62,
      "playerId": 79
    },
    {
      "timestamp": 1757903335941,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336028,
      "category": "static_file_loaded",
      "value": 133,
      "playerId": 17
    },
    {
      "timestamp": 1757903336029,
      "category": "static_file_loaded",
      "value": 99,
      "playerId": 20
    },
    {
      "timestamp": 1757903336031,
      "category": "submit_flag",
      "value": 274,
      "playerId": 13
    },
    {
      "timestamp": 1757903336031,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336033,
      "category": "submit_flag",
      "value": 84,
      "playerId": 75
    },
    {
      "timestamp": 1757903336033,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336034,
      "category": "submit_flag",
      "value": 1371,
      "playerId": 24
    },
    {
      "timestamp": 1757903336034,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903336035,
      "category": "static_file_loaded",
      "value": 97,
      "playerId": 65
    },
    {
      "timestamp": 1757903336039,
      "category": "login_attempt",
      "value": 137,
      "playerId": 63
    },
    {
      "timestamp": 1757903336039,
      "category": "login_success",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336044,
      "category": "static_file_loaded",
      "value": 242,
      "playerId": 34
    },
    {
      "timestamp": 1757903336045,
      "category": "submit_flag",
      "value": 142,
      "playerId": 47
    },
    {
      "timestamp": 1757903336045,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903336047,
      "category": "submit_flag",
      "value": 79,
      "playerId": 37
    },
    {
      "timestamp": 1757903336047,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336049,
      "category": "submit_flag",
      "value": 193,
      "playerId": 3
    },
    {
      "timestamp": 1757903336049,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336050,
      "category": "submit_flag",
      "value": 195,
      "playerId": 78
    },
    {
      "timestamp": 1757903336050,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903336053,
      "category": "submit_flag",
      "value": 174,
      "playerId": 18
    },
    {
      "timestamp": 1757903336053,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903336056,
      "category": "submit_flag",
      "value": 27,
      "playerId": 35
    },
    {
      "timestamp": 1757903336056,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336062,
      "category": "submit_flag",
      "value": 109,
      "playerId": 75
    },
    {
      "timestamp": 1757903336062,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336070,
      "category": "submit_flag",
      "value": 37,
      "playerId": 27
    },
    {
      "timestamp": 1757903336070,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903336071,
      "category": "login_attempt",
      "value": 189,
      "playerId": 67
    },
    {
      "timestamp": 1757903336071,
      "category": "login_success",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336071,
      "category": "submit_flag",
      "value": 168,
      "playerId": 58
    },
    {
      "timestamp": 1757903336071,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336072,
      "category": "websocket_connected",
      "value": 234,
      "playerId": 41
    },
    {
      "timestamp": 1757903336073,
      "category": "submit_flag",
      "value": 35,
      "playerId": 80
    },
    {
      "timestamp": 1757903336073,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336077,
      "category": "submit_flag",
      "value": 102,
      "playerId": 6
    },
    {
      "timestamp": 1757903336078,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336078,
      "category": "submit_flag",
      "value": 44,
      "playerId": 66
    },
    {
      "timestamp": 1757903336078,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336078,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 34
    },
    {
      "timestamp": 1757903336078,
      "category": "submit_flag",
      "value": 123,
      "playerId": 6
    },
    {
      "timestamp": 1757903336078,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336081,
      "category": "submit_flag",
      "value": 325,
      "playerId": 39
    },
    {
      "timestamp": 1757903336081,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336082,
      "category": "submit_flag",
      "value": 29,
      "playerId": 27
    },
    {
      "timestamp": 1757903336082,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903336083,
      "category": "submit_flag",
      "value": 48,
      "playerId": 6
    },
    {
      "timestamp": 1757903336083,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336083,
      "category": "submit_flag",
      "value": 35,
      "playerId": 80
    },
    {
      "timestamp": 1757903336083,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336088,
      "category": "submit_flag",
      "value": 28,
      "playerId": 72
    },
    {
      "timestamp": 1757903336088,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903336089,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 76
    },
    {
      "timestamp": 1757903336090,
      "category": "submit_flag",
      "value": 35,
      "playerId": 33
    },
    {
      "timestamp": 1757903336090,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336094,
      "category": "submit_flag",
      "value": 108,
      "playerId": 37
    },
    {
      "timestamp": 1757903336094,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336095,
      "category": "submit_flag",
      "value": 35,
      "playerId": 35
    },
    {
      "timestamp": 1757903336095,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336098,
      "category": "submit_flag",
      "value": 50,
      "playerId": 66
    },
    {
      "timestamp": 1757903336098,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336099,
      "category": "submit_flag",
      "value": 98,
      "playerId": 68
    },
    {
      "timestamp": 1757903336099,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903336099,
      "category": "submit_flag",
      "value": 33,
      "playerId": 80
    },
    {
      "timestamp": 1757903336099,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336109,
      "category": "submit_flag",
      "value": 104,
      "playerId": 15
    },
    {
      "timestamp": 1757903336109,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903336110,
      "category": "submit_flag",
      "value": 44,
      "playerId": 68
    },
    {
      "timestamp": 1757903336110,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903336110,
      "category": "submit_flag",
      "value": 122,
      "playerId": 66
    },
    {
      "timestamp": 1757903336110,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336110,
      "category": "submit_flag",
      "value": 271,
      "playerId": 4
    },
    {
      "timestamp": 1757903336110,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336116,
      "category": "submit_flag",
      "value": 37,
      "playerId": 15
    },
    {
      "timestamp": 1757903336116,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903336116,
      "category": "submit_flag",
      "value": 51,
      "playerId": 15
    },
    {
      "timestamp": 1757903336116,
      "category": "flag_correct",
      "value": 1,
      "playerId": 15
    },
    {
      "timestamp": 1757903336117,
      "category": "submit_flag",
      "value": 36,
      "playerId": 60
    },
    {
      "timestamp": 1757903336117,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336121,
      "category": "submit_flag",
      "value": 34,
      "playerId": 26
    },
    {
      "timestamp": 1757903336121,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336121,
      "category": "static_file_loaded",
      "value": 32,
      "playerId": 76
    },
    {
      "timestamp": 1757903336122,
      "category": "submit_flag",
      "value": 87,
      "playerId": 72
    },
    {
      "timestamp": 1757903336122,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903336124,
      "category": "submit_flag",
      "value": 222,
      "playerId": 58
    },
    {
      "timestamp": 1757903336124,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336129,
      "category": "submit_flag",
      "value": 55,
      "playerId": 35
    },
    {
      "timestamp": 1757903336129,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336131,
      "category": "submit_flag",
      "value": 36,
      "playerId": 72
    },
    {
      "timestamp": 1757903336131,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903336133,
      "category": "submit_flag",
      "value": 31,
      "playerId": 40
    },
    {
      "timestamp": 1757903336133,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336140,
      "category": "submit_flag",
      "value": 113,
      "playerId": 33
    },
    {
      "timestamp": 1757903336140,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336147,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 30
    },
    {
      "timestamp": 1757903336148,
      "category": "submit_flag",
      "value": 37,
      "playerId": 60
    },
    {
      "timestamp": 1757903336148,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336148,
      "category": "submit_flag",
      "value": 37,
      "playerId": 40
    },
    {
      "timestamp": 1757903336148,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336152,
      "category": "submit_flag",
      "value": 35,
      "playerId": 40
    },
    {
      "timestamp": 1757903336152,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336164,
      "category": "submit_flag",
      "value": 232,
      "playerId": 18
    },
    {
      "timestamp": 1757903336164,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903336165,
      "category": "login_attempt",
      "value": 37,
      "playerId": 17
    },
    {
      "timestamp": 1757903336165,
      "category": "login_success",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336165,
      "category": "login_attempt",
      "value": 37,
      "playerId": 20
    },
    {
      "timestamp": 1757903336165,
      "category": "login_success",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903336165,
      "category": "static_file_loaded",
      "value": 147,
      "playerId": 7
    },
    {
      "timestamp": 1757903336167,
      "category": "login_attempt",
      "value": 32,
      "playerId": 65
    },
    {
      "timestamp": 1757903336167,
      "category": "login_success",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903336167,
      "category": "submit_flag",
      "value": 86,
      "playerId": 33
    },
    {
      "timestamp": 1757903336167,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336169,
      "category": "static_file_loaded",
      "value": 22,
      "playerId": 30
    },
    {
      "timestamp": 1757903336175,
      "category": "submit_flag",
      "value": 101,
      "playerId": 27
    },
    {
      "timestamp": 1757903336175,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903336176,
      "category": "submit_flag",
      "value": 28,
      "playerId": 60
    },
    {
      "timestamp": 1757903336176,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336181,
      "category": "submit_flag",
      "value": 32,
      "playerId": 26
    },
    {
      "timestamp": 1757903336181,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336189,
      "category": "submit_flag",
      "value": 28,
      "playerId": 26
    },
    {
      "timestamp": 1757903336189,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336190,
      "category": "submit_flag",
      "value": 174,
      "playerId": 68
    },
    {
      "timestamp": 1757903336190,
      "category": "flag_correct",
      "value": 1,
      "playerId": 68
    },
    {
      "timestamp": 1757903336191,
      "category": "submit_flag",
      "value": 30,
      "playerId": 8
    },
    {
      "timestamp": 1757903336191,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336212,
      "category": "static_file_loaded",
      "value": 43,
      "playerId": 30
    },
    {
      "timestamp": 1757903336213,
      "category": "static_file_loaded",
      "value": 48,
      "playerId": 7
    },
    {
      "timestamp": 1757903336215,
      "category": "websocket_connected",
      "value": 125,
      "playerId": 63
    },
    {
      "timestamp": 1757903336224,
      "category": "submit_flag",
      "value": 271,
      "playerId": 37
    },
    {
      "timestamp": 1757903336224,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336225,
      "category": "submit_flag",
      "value": 49,
      "playerId": 11
    },
    {
      "timestamp": 1757903336225,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336225,
      "category": "submit_flag",
      "value": 45,
      "playerId": 11
    },
    {
      "timestamp": 1757903336225,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336226,
      "category": "login_attempt",
      "value": 46,
      "playerId": 34
    },
    {
      "timestamp": 1757903336226,
      "category": "login_success",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903336226,
      "category": "websocket_connected",
      "value": 104,
      "playerId": 67
    },
    {
      "timestamp": 1757903336234,
      "category": "submit_flag",
      "value": 302,
      "playerId": 75
    },
    {
      "timestamp": 1757903336234,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336240,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 30
    },
    {
      "timestamp": 1757903336240,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 54
    },
    {
      "timestamp": 1757903336251,
      "category": "static_file_loaded",
      "value": 130,
      "playerId": 76
    },
    {
      "timestamp": 1757903336252,
      "category": "submit_flag",
      "value": 39,
      "playerId": 8
    },
    {
      "timestamp": 1757903336252,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336254,
      "category": "submit_flag",
      "value": 41,
      "playerId": 11
    },
    {
      "timestamp": 1757903336254,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336255,
      "category": "submit_flag",
      "value": 42,
      "playerId": 25
    },
    {
      "timestamp": 1757903336255,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336256,
      "category": "submit_flag",
      "value": 43,
      "playerId": 8
    },
    {
      "timestamp": 1757903336256,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336257,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 74
    },
    {
      "timestamp": 1757903336258,
      "category": "static_file_loaded",
      "value": 28,
      "playerId": 69
    },
    {
      "timestamp": 1757903336263,
      "category": "submit_flag",
      "value": 33,
      "playerId": 10
    },
    {
      "timestamp": 1757903336263,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336263,
      "category": "submit_flag",
      "value": 30,
      "playerId": 28
    },
    {
      "timestamp": 1757903336263,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336267,
      "category": "submit_flag",
      "value": 34,
      "playerId": 25
    },
    {
      "timestamp": 1757903336267,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336269,
      "category": "submit_flag",
      "value": 39,
      "playerId": 51
    },
    {
      "timestamp": 1757903336269,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903336269,
      "category": "static_file_loaded",
      "value": 29,
      "playerId": 54
    },
    {
      "timestamp": 1757903336273,
      "category": "submit_flag",
      "value": 37,
      "playerId": 52
    },
    {
      "timestamp": 1757903336273,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903336277,
      "category": "submit_flag",
      "value": 47,
      "playerId": 52
    },
    {
      "timestamp": 1757903336277,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903336278,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 76
    },
    {
      "timestamp": 1757903336280,
      "category": "submit_flag",
      "value": 25,
      "playerId": 10
    },
    {
      "timestamp": 1757903336280,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336283,
      "category": "static_file_loaded",
      "value": 26,
      "playerId": 74
    },
    {
      "timestamp": 1757903336284,
      "category": "submit_flag",
      "value": 403,
      "playerId": 2
    },
    {
      "timestamp": 1757903336284,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903336285,
      "category": "static_file_loaded",
      "value": 27,
      "playerId": 69
    },
    {
      "timestamp": 1757903336295,
      "category": "submit_flag",
      "value": 31,
      "playerId": 79
    },
    {
      "timestamp": 1757903336295,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336316,
      "category": "submit_flag",
      "value": 52,
      "playerId": 28
    },
    {
      "timestamp": 1757903336316,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336317,
      "category": "submit_flag",
      "value": 47,
      "playerId": 3
    },
    {
      "timestamp": 1757903336317,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336317,
      "category": "submit_flag",
      "value": 50,
      "playerId": 3
    },
    {
      "timestamp": 1757903336317,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336318,
      "category": "submit_flag",
      "value": 48,
      "playerId": 10
    },
    {
      "timestamp": 1757903336318,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336318,
      "category": "submit_flag",
      "value": 44,
      "playerId": 56
    },
    {
      "timestamp": 1757903336318,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903336319,
      "category": "submit_flag",
      "value": 46,
      "playerId": 79
    },
    {
      "timestamp": 1757903336319,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336320,
      "category": "websocket_connected",
      "value": 92,
      "playerId": 20
    },
    {
      "timestamp": 1757903336329,
      "category": "submit_flag",
      "value": 99,
      "playerId": 51
    },
    {
      "timestamp": 1757903336329,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903336329,
      "category": "submit_flag",
      "value": 49,
      "playerId": 28
    },
    {
      "timestamp": 1757903336329,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336335,
      "category": "websocket_connected",
      "value": 109,
      "playerId": 17
    },
    {
      "timestamp": 1757903336335,
      "category": "submit_flag",
      "value": 57,
      "playerId": 52
    },
    {
      "timestamp": 1757903336335,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903336336,
      "category": "websocket_connected",
      "value": 107,
      "playerId": 65
    },
    {
      "timestamp": 1757903336341,
      "category": "submit_flag",
      "value": 52,
      "playerId": 80
    },
    {
      "timestamp": 1757903336341,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336341,
      "category": "submit_flag",
      "value": 47,
      "playerId": 56
    },
    {
      "timestamp": 1757903336341,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903336352,
      "category": "submit_flag",
      "value": 58,
      "playerId": 25
    },
    {
      "timestamp": 1757903336352,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336352,
      "category": "submit_flag",
      "value": 88,
      "playerId": 79
    },
    {
      "timestamp": 1757903336352,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336353,
      "category": "submit_flag",
      "value": 647,
      "playerId": 13
    },
    {
      "timestamp": 1757903336353,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336353,
      "category": "submit_flag",
      "value": 48,
      "playerId": 80
    },
    {
      "timestamp": 1757903336353,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336353,
      "category": "submit_flag",
      "value": 47,
      "playerId": 6
    },
    {
      "timestamp": 1757903336353,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336354,
      "category": "submit_flag",
      "value": 48,
      "playerId": 3
    },
    {
      "timestamp": 1757903336354,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336370,
      "category": "static_file_loaded",
      "value": 101,
      "playerId": 54
    },
    {
      "timestamp": 1757903336373,
      "category": "submit_flag",
      "value": 67,
      "playerId": 6
    },
    {
      "timestamp": 1757903336373,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336377,
      "category": "submit_flag",
      "value": 84,
      "playerId": 56
    },
    {
      "timestamp": 1757903336377,
      "category": "flag_correct",
      "value": 1,
      "playerId": 56
    },
    {
      "timestamp": 1757903336387,
      "category": "submit_flag",
      "value": 63,
      "playerId": 4
    },
    {
      "timestamp": 1757903336387,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336388,
      "category": "submit_flag",
      "value": 64,
      "playerId": 39
    },
    {
      "timestamp": 1757903336388,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336392,
      "category": "submit_flag",
      "value": 68,
      "playerId": 66
    },
    {
      "timestamp": 1757903336392,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336393,
      "category": "login_attempt",
      "value": 51,
      "playerId": 30
    },
    {
      "timestamp": 1757903336393,
      "category": "login_success",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903336397,
      "category": "submit_flag",
      "value": 55,
      "playerId": 80
    },
    {
      "timestamp": 1757903336397,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336397,
      "category": "submit_flag",
      "value": 73,
      "playerId": 66
    },
    {
      "timestamp": 1757903336397,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336409,
      "category": "submit_flag",
      "value": 51,
      "playerId": 4
    },
    {
      "timestamp": 1757903336409,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336410,
      "category": "submit_flag",
      "value": 52,
      "playerId": 66
    },
    {
      "timestamp": 1757903336410,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336410,
      "category": "submit_flag",
      "value": 52,
      "playerId": 35
    },
    {
      "timestamp": 1757903336410,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336410,
      "category": "submit_flag",
      "value": 86,
      "playerId": 51
    },
    {
      "timestamp": 1757903336410,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903336411,
      "category": "submit_flag",
      "value": 54,
      "playerId": 6
    },
    {
      "timestamp": 1757903336411,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336411,
      "category": "static_file_loaded",
      "value": 41,
      "playerId": 54
    },
    {
      "timestamp": 1757903336411,
      "category": "websocket_connected",
      "value": 135,
      "playerId": 34
    },
    {
      "timestamp": 1757903336417,
      "category": "login_attempt",
      "value": 39,
      "playerId": 76
    },
    {
      "timestamp": 1757903336417,
      "category": "login_success",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903336418,
      "category": "submit_flag",
      "value": 61,
      "playerId": 39
    },
    {
      "timestamp": 1757903336418,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336418,
      "category": "submit_flag",
      "value": 40,
      "playerId": 72
    },
    {
      "timestamp": 1757903336418,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903336423,
      "category": "submit_flag",
      "value": 44,
      "playerId": 58
    },
    {
      "timestamp": 1757903336423,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336425,
      "category": "submit_flag",
      "value": 47,
      "playerId": 58
    },
    {
      "timestamp": 1757903336426,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336439,
      "category": "submit_flag",
      "value": 40,
      "playerId": 18
    },
    {
      "timestamp": 1757903336439,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903336439,
      "category": "submit_flag",
      "value": 41,
      "playerId": 26
    },
    {
      "timestamp": 1757903336439,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336440,
      "category": "submit_flag",
      "value": 42,
      "playerId": 41
    },
    {
      "timestamp": 1757903336440,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903336441,
      "category": "submit_flag",
      "value": 43,
      "playerId": 40
    },
    {
      "timestamp": 1757903336441,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336448,
      "category": "submit_flag",
      "value": 50,
      "playerId": 39
    },
    {
      "timestamp": 1757903336448,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336449,
      "category": "submit_flag",
      "value": 51,
      "playerId": 60
    },
    {
      "timestamp": 1757903336449,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336454,
      "category": "static_file_loaded",
      "value": 169,
      "playerId": 69
    },
    {
      "timestamp": 1757903336455,
      "category": "submit_flag",
      "value": 43,
      "playerId": 4
    },
    {
      "timestamp": 1757903336455,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336456,
      "category": "submit_flag",
      "value": 58,
      "playerId": 58
    },
    {
      "timestamp": 1757903336456,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336457,
      "category": "submit_flag",
      "value": 59,
      "playerId": 72
    },
    {
      "timestamp": 1757903336457,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903336473,
      "category": "submit_flag",
      "value": 50,
      "playerId": 35
    },
    {
      "timestamp": 1757903336473,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336474,
      "category": "submit_flag",
      "value": 593,
      "playerId": 47
    },
    {
      "timestamp": 1757903336474,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903336474,
      "category": "submit_flag",
      "value": 76,
      "playerId": 72
    },
    {
      "timestamp": 1757903336474,
      "category": "flag_correct",
      "value": 1,
      "playerId": 72
    },
    {
      "timestamp": 1757903336474,
      "category": "submit_flag",
      "value": 44,
      "playerId": 41
    },
    {
      "timestamp": 1757903336474,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903336482,
      "category": "static_file_loaded",
      "value": 199,
      "playerId": 74
    },
    {
      "timestamp": 1757903336482,
      "category": "submit_flag",
      "value": 52,
      "playerId": 18
    },
    {
      "timestamp": 1757903336482,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903336482,
      "category": "submit_flag",
      "value": 40,
      "playerId": 75
    },
    {
      "timestamp": 1757903336482,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336483,
      "category": "submit_flag",
      "value": 41,
      "playerId": 18
    },
    {
      "timestamp": 1757903336483,
      "category": "flag_correct",
      "value": 1,
      "playerId": 18
    },
    {
      "timestamp": 1757903336483,
      "category": "submit_flag",
      "value": 53,
      "playerId": 40
    },
    {
      "timestamp": 1757903336483,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336486,
      "category": "submit_flag",
      "value": 37,
      "playerId": 60
    },
    {
      "timestamp": 1757903336486,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336487,
      "category": "submit_flag",
      "value": 36,
      "playerId": 37
    },
    {
      "timestamp": 1757903336487,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336487,
      "category": "static_file_loaded",
      "value": 33,
      "playerId": 69
    },
    {
      "timestamp": 1757903336490,
      "category": "static_file_loaded",
      "value": 277,
      "playerId": 7
    },
    {
      "timestamp": 1757903336491,
      "category": "submit_flag",
      "value": 40,
      "playerId": 60
    },
    {
      "timestamp": 1757903336491,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336494,
      "category": "submit_flag",
      "value": 64,
      "playerId": 40
    },
    {
      "timestamp": 1757903336494,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336494,
      "category": "submit_flag",
      "value": 29,
      "playerId": 27
    },
    {
      "timestamp": 1757903336495,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903336496,
      "category": "submit_flag",
      "value": 30,
      "playerId": 41
    },
    {
      "timestamp": 1757903336496,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903336499,
      "category": "submit_flag",
      "value": 87,
      "playerId": 35
    },
    {
      "timestamp": 1757903336499,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336500,
      "category": "submit_flag",
      "value": 35,
      "playerId": 11
    },
    {
      "timestamp": 1757903336500,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336504,
      "category": "submit_flag",
      "value": 28,
      "playerId": 26
    },
    {
      "timestamp": 1757903336504,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336505,
      "category": "submit_flag",
      "value": 29,
      "playerId": 33
    },
    {
      "timestamp": 1757903336505,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336506,
      "category": "static_file_loaded",
      "value": 24,
      "playerId": 74
    },
    {
      "timestamp": 1757903336513,
      "category": "submit_flag",
      "value": 37,
      "playerId": 11
    },
    {
      "timestamp": 1757903336513,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336513,
      "category": "submit_flag",
      "value": 37,
      "playerId": 33
    },
    {
      "timestamp": 1757903336513,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336516,
      "category": "submit_flag",
      "value": 32,
      "playerId": 37
    },
    {
      "timestamp": 1757903336516,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336516,
      "category": "submit_flag",
      "value": 28,
      "playerId": 37
    },
    {
      "timestamp": 1757903336516,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336520,
      "category": "static_file_loaded",
      "value": 30,
      "playerId": 7
    },
    {
      "timestamp": 1757903336522,
      "category": "submit_flag",
      "value": 35,
      "playerId": 26
    },
    {
      "timestamp": 1757903336522,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336523,
      "category": "submit_flag",
      "value": 32,
      "playerId": 27
    },
    {
      "timestamp": 1757903336523,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903336524,
      "category": "submit_flag",
      "value": 60,
      "playerId": 27
    },
    {
      "timestamp": 1757903336524,
      "category": "flag_correct",
      "value": 1,
      "playerId": 27
    },
    {
      "timestamp": 1757903336539,
      "category": "submit_flag",
      "value": 36,
      "playerId": 75
    },
    {
      "timestamp": 1757903336539,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336543,
      "category": "submit_flag",
      "value": 67,
      "playerId": 8
    },
    {
      "timestamp": 1757903336543,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336544,
      "category": "login_attempt",
      "value": 31,
      "playerId": 54
    },
    {
      "timestamp": 1757903336544,
      "category": "login_success",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903336545,
      "category": "submit_flag",
      "value": 29,
      "playerId": 8
    },
    {
      "timestamp": 1757903336545,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336547,
      "category": "submit_flag",
      "value": 31,
      "playerId": 2
    },
    {
      "timestamp": 1757903336547,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903336549,
      "category": "submit_flag",
      "value": 29,
      "playerId": 8
    },
    {
      "timestamp": 1757903336549,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336550,
      "category": "submit_flag",
      "value": 26,
      "playerId": 2
    },
    {
      "timestamp": 1757903336550,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903336554,
      "category": "submit_flag",
      "value": 29,
      "playerId": 75
    },
    {
      "timestamp": 1757903336554,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336558,
      "category": "submit_flag",
      "value": 30,
      "playerId": 2
    },
    {
      "timestamp": 1757903336558,
      "category": "flag_correct",
      "value": 1,
      "playerId": 2
    },
    {
      "timestamp": 1757903336562,
      "category": "submit_flag",
      "value": 32,
      "playerId": 11
    },
    {
      "timestamp": 1757903336562,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336563,
      "category": "submit_flag",
      "value": 98,
      "playerId": 33
    },
    {
      "timestamp": 1757903336563,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336566,
      "category": "submit_flag",
      "value": 28,
      "playerId": 10
    },
    {
      "timestamp": 1757903336566,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336570,
      "category": "websocket_connected",
      "value": 120,
      "playerId": 30
    },
    {
      "timestamp": 1757903336589,
      "category": "submit_flag",
      "value": 31,
      "playerId": 10
    },
    {
      "timestamp": 1757903336589,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336589,
      "category": "submit_flag",
      "value": 28,
      "playerId": 3
    },
    {
      "timestamp": 1757903336589,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336592,
      "category": "submit_flag",
      "value": 28,
      "playerId": 28
    },
    {
      "timestamp": 1757903336592,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336597,
      "category": "submit_flag",
      "value": 30,
      "playerId": 28
    },
    {
      "timestamp": 1757903336597,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336599,
      "category": "websocket_connected",
      "value": 124,
      "playerId": 76
    },
    {
      "timestamp": 1757903336601,
      "category": "submit_flag",
      "value": 27,
      "playerId": 52
    },
    {
      "timestamp": 1757903336601,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903336601,
      "category": "submit_flag",
      "value": 31,
      "playerId": 63
    },
    {
      "timestamp": 1757903336601,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336603,
      "category": "submit_flag",
      "value": 31,
      "playerId": 63
    },
    {
      "timestamp": 1757903336603,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336609,
      "category": "submit_flag",
      "value": 39,
      "playerId": 13
    },
    {
      "timestamp": 1757903336609,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336610,
      "category": "submit_flag",
      "value": 36,
      "playerId": 3
    },
    {
      "timestamp": 1757903336610,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336611,
      "category": "submit_flag",
      "value": 37,
      "playerId": 79
    },
    {
      "timestamp": 1757903336612,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336621,
      "category": "login_attempt",
      "value": 33,
      "playerId": 69
    },
    {
      "timestamp": 1757903336621,
      "category": "login_success",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903336624,
      "category": "submit_flag",
      "value": 52,
      "playerId": 13
    },
    {
      "timestamp": 1757903336624,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336625,
      "category": "submit_flag",
      "value": 32,
      "playerId": 25
    },
    {
      "timestamp": 1757903336625,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336632,
      "category": "submit_flag",
      "value": 42,
      "playerId": 63
    },
    {
      "timestamp": 1757903336632,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336634,
      "category": "submit_flag",
      "value": 35,
      "playerId": 79
    },
    {
      "timestamp": 1757903336634,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336636,
      "category": "login_attempt",
      "value": 29,
      "playerId": 74
    },
    {
      "timestamp": 1757903336636,
      "category": "login_success",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903336636,
      "category": "submit_flag",
      "value": 27,
      "playerId": 67
    },
    {
      "timestamp": 1757903336636,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336638,
      "category": "submit_flag",
      "value": 30,
      "playerId": 67
    },
    {
      "timestamp": 1757903336638,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336642,
      "category": "submit_flag",
      "value": 739,
      "playerId": 47
    },
    {
      "timestamp": 1757903336642,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903336647,
      "category": "submit_flag",
      "value": 29,
      "playerId": 65
    },
    {
      "timestamp": 1757903336647,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903336648,
      "category": "submit_flag",
      "value": 30,
      "playerId": 10
    },
    {
      "timestamp": 1757903336648,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336655,
      "category": "submit_flag",
      "value": 43,
      "playerId": 25
    },
    {
      "timestamp": 1757903336655,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336656,
      "category": "submit_flag",
      "value": 30,
      "playerId": 17
    },
    {
      "timestamp": 1757903336656,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336656,
      "category": "submit_flag",
      "value": 44,
      "playerId": 67
    },
    {
      "timestamp": 1757903336656,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336664,
      "category": "login_attempt",
      "value": 39,
      "playerId": 7
    },
    {
      "timestamp": 1757903336664,
      "category": "login_success",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903336666,
      "category": "submit_flag",
      "value": 40,
      "playerId": 17
    },
    {
      "timestamp": 1757903336666,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336668,
      "category": "submit_flag",
      "value": 42,
      "playerId": 3
    },
    {
      "timestamp": 1757903336668,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336673,
      "category": "submit_flag",
      "value": 36,
      "playerId": 20
    },
    {
      "timestamp": 1757903336674,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903336674,
      "category": "submit_flag",
      "value": 40,
      "playerId": 28
    },
    {
      "timestamp": 1757903336674,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336674,
      "category": "submit_flag",
      "value": 35,
      "playerId": 4
    },
    {
      "timestamp": 1757903336674,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336681,
      "category": "submit_flag",
      "value": 42,
      "playerId": 17
    },
    {
      "timestamp": 1757903336681,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336681,
      "category": "submit_flag",
      "value": 36,
      "playerId": 58
    },
    {
      "timestamp": 1757903336681,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336681,
      "category": "submit_flag",
      "value": 44,
      "playerId": 51
    },
    {
      "timestamp": 1757903336681,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903336682,
      "category": "submit_flag",
      "value": 56,
      "playerId": 52
    },
    {
      "timestamp": 1757903336682,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903336685,
      "category": "submit_flag",
      "value": 36,
      "playerId": 80
    },
    {
      "timestamp": 1757903336685,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336685,
      "category": "submit_flag",
      "value": 32,
      "playerId": 25
    },
    {
      "timestamp": 1757903336685,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336693,
      "category": "submit_flag",
      "value": 54,
      "playerId": 51
    },
    {
      "timestamp": 1757903336693,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903336694,
      "category": "websocket_connected",
      "value": 100,
      "playerId": 54
    },
    {
      "timestamp": 1757903336694,
      "category": "submit_flag",
      "value": 58,
      "playerId": 66
    },
    {
      "timestamp": 1757903336694,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336699,
      "category": "submit_flag",
      "value": 40,
      "playerId": 79
    },
    {
      "timestamp": 1757903336699,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336699,
      "category": "submit_flag",
      "value": 39,
      "playerId": 65
    },
    {
      "timestamp": 1757903336699,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903336699,
      "category": "submit_flag",
      "value": 87,
      "playerId": 6
    },
    {
      "timestamp": 1757903336699,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336701,
      "category": "submit_flag",
      "value": 32,
      "playerId": 65
    },
    {
      "timestamp": 1757903336701,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903336704,
      "category": "submit_flag",
      "value": 35,
      "playerId": 20
    },
    {
      "timestamp": 1757903336704,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903336711,
      "category": "submit_flag",
      "value": 37,
      "playerId": 58
    },
    {
      "timestamp": 1757903336711,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336713,
      "category": "submit_flag",
      "value": 37,
      "playerId": 80
    },
    {
      "timestamp": 1757903336714,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336717,
      "category": "submit_flag",
      "value": 68,
      "playerId": 13
    },
    {
      "timestamp": 1757903336717,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336744,
      "category": "submit_flag",
      "value": 58,
      "playerId": 66
    },
    {
      "timestamp": 1757903336744,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336750,
      "category": "submit_flag",
      "value": 68,
      "playerId": 4
    },
    {
      "timestamp": 1757903336750,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336751,
      "category": "submit_flag",
      "value": 77,
      "playerId": 80
    },
    {
      "timestamp": 1757903336751,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336758,
      "category": "submit_flag",
      "value": 51,
      "playerId": 60
    },
    {
      "timestamp": 1757903336758,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336760,
      "category": "submit_flag",
      "value": 78,
      "playerId": 20
    },
    {
      "timestamp": 1757903336760,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903336761,
      "category": "submit_flag",
      "value": 66,
      "playerId": 51
    },
    {
      "timestamp": 1757903336761,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903336762,
      "category": "submit_flag",
      "value": 56,
      "playerId": 40
    },
    {
      "timestamp": 1757903336762,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336765,
      "category": "submit_flag",
      "value": 35,
      "playerId": 26
    },
    {
      "timestamp": 1757903336765,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336767,
      "category": "submit_flag",
      "value": 62,
      "playerId": 35
    },
    {
      "timestamp": 1757903336767,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336767,
      "category": "submit_flag",
      "value": 50,
      "playerId": 41
    },
    {
      "timestamp": 1757903336767,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903336771,
      "category": "submit_flag",
      "value": 35,
      "playerId": 39
    },
    {
      "timestamp": 1757903336771,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336774,
      "category": "submit_flag",
      "value": 42,
      "playerId": 58
    },
    {
      "timestamp": 1757903336774,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336774,
      "category": "submit_flag",
      "value": 33,
      "playerId": 34
    },
    {
      "timestamp": 1757903336774,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903336780,
      "category": "submit_flag",
      "value": 69,
      "playerId": 26
    },
    {
      "timestamp": 1757903336780,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336780,
      "category": "submit_flag",
      "value": 35,
      "playerId": 8
    },
    {
      "timestamp": 1757903336780,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336781,
      "category": "submit_flag",
      "value": 34,
      "playerId": 33
    },
    {
      "timestamp": 1757903336781,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336784,
      "category": "submit_flag",
      "value": 84,
      "playerId": 34
    },
    {
      "timestamp": 1757903336784,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903336785,
      "category": "submit_flag",
      "value": 35,
      "playerId": 11
    },
    {
      "timestamp": 1757903336785,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336787,
      "category": "submit_flag",
      "value": 42,
      "playerId": 8
    },
    {
      "timestamp": 1757903336787,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336788,
      "category": "submit_flag",
      "value": 32,
      "playerId": 75
    },
    {
      "timestamp": 1757903336788,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336789,
      "category": "submit_flag",
      "value": 88,
      "playerId": 39
    },
    {
      "timestamp": 1757903336789,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336790,
      "category": "submit_flag",
      "value": 104,
      "playerId": 66
    },
    {
      "timestamp": 1757903336790,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903336793,
      "category": "submit_flag",
      "value": 31,
      "playerId": 33
    },
    {
      "timestamp": 1757903336793,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336794,
      "category": "submit_flag",
      "value": 182,
      "playerId": 52
    },
    {
      "timestamp": 1757903336794,
      "category": "flag_correct",
      "value": 1,
      "playerId": 52
    },
    {
      "timestamp": 1757903336799,
      "category": "submit_flag",
      "value": 63,
      "playerId": 4
    },
    {
      "timestamp": 1757903336799,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903336800,
      "category": "websocket_connected",
      "value": 125,
      "playerId": 69
    },
    {
      "timestamp": 1757903336802,
      "category": "submit_flag",
      "value": 28,
      "playerId": 34
    },
    {
      "timestamp": 1757903336802,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903336803,
      "category": "websocket_connected",
      "value": 117,
      "playerId": 74
    },
    {
      "timestamp": 1757903336806,
      "category": "submit_flag",
      "value": 102,
      "playerId": 60
    },
    {
      "timestamp": 1757903336806,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336814,
      "category": "websocket_connected",
      "value": 99,
      "playerId": 7
    },
    {
      "timestamp": 1757903336815,
      "category": "submit_flag",
      "value": 40,
      "playerId": 40
    },
    {
      "timestamp": 1757903336815,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336816,
      "category": "submit_flag",
      "value": 116,
      "playerId": 39
    },
    {
      "timestamp": 1757903336816,
      "category": "flag_correct",
      "value": 1,
      "playerId": 39
    },
    {
      "timestamp": 1757903336822,
      "category": "submit_flag",
      "value": 47,
      "playerId": 60
    },
    {
      "timestamp": 1757903336822,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903336825,
      "category": "submit_flag",
      "value": 44,
      "playerId": 26
    },
    {
      "timestamp": 1757903336825,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903336826,
      "category": "submit_flag",
      "value": 140,
      "playerId": 6
    },
    {
      "timestamp": 1757903336826,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336831,
      "category": "submit_flag",
      "value": 46,
      "playerId": 35
    },
    {
      "timestamp": 1757903336831,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336833,
      "category": "submit_flag",
      "value": 48,
      "playerId": 37
    },
    {
      "timestamp": 1757903336833,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336834,
      "category": "submit_flag",
      "value": 131,
      "playerId": 35
    },
    {
      "timestamp": 1757903336834,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903336835,
      "category": "submit_flag",
      "value": 33,
      "playerId": 8
    },
    {
      "timestamp": 1757903336835,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903336836,
      "category": "submit_flag",
      "value": 141,
      "playerId": 41
    },
    {
      "timestamp": 1757903336836,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903336837,
      "category": "submit_flag",
      "value": 95,
      "playerId": 37
    },
    {
      "timestamp": 1757903336837,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336840,
      "category": "submit_flag",
      "value": 38,
      "playerId": 75
    },
    {
      "timestamp": 1757903336840,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336842,
      "category": "submit_flag",
      "value": 44,
      "playerId": 33
    },
    {
      "timestamp": 1757903336842,
      "category": "flag_correct",
      "value": 1,
      "playerId": 33
    },
    {
      "timestamp": 1757903336845,
      "category": "submit_flag",
      "value": 35,
      "playerId": 75
    },
    {
      "timestamp": 1757903336845,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903336846,
      "category": "submit_flag",
      "value": 40,
      "playerId": 11
    },
    {
      "timestamp": 1757903336846,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336848,
      "category": "submit_flag",
      "value": 945,
      "playerId": 78
    },
    {
      "timestamp": 1757903336848,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903336849,
      "category": "submit_flag",
      "value": 64,
      "playerId": 41
    },
    {
      "timestamp": 1757903336849,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903336851,
      "category": "submit_flag",
      "value": 48,
      "playerId": 11
    },
    {
      "timestamp": 1757903336852,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903336864,
      "category": "submit_flag",
      "value": 161,
      "playerId": 6
    },
    {
      "timestamp": 1757903336864,
      "category": "flag_correct",
      "value": 1,
      "playerId": 6
    },
    {
      "timestamp": 1757903336867,
      "category": "submit_flag",
      "value": 185,
      "playerId": 40
    },
    {
      "timestamp": 1757903336867,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903336886,
      "category": "submit_flag",
      "value": 3328,
      "playerId": 49
    },
    {
      "timestamp": 1757903336886,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903336888,
      "category": "submit_flag",
      "value": 159,
      "playerId": 37
    },
    {
      "timestamp": 1757903336888,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903336895,
      "category": "submit_flag",
      "value": 39,
      "playerId": 10
    },
    {
      "timestamp": 1757903336895,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336902,
      "category": "submit_flag",
      "value": 40,
      "playerId": 47
    },
    {
      "timestamp": 1757903336902,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903336904,
      "category": "submit_flag",
      "value": 41,
      "playerId": 67
    },
    {
      "timestamp": 1757903336904,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336906,
      "category": "submit_flag",
      "value": 37,
      "playerId": 67
    },
    {
      "timestamp": 1757903336906,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336907,
      "category": "submit_flag",
      "value": 36,
      "playerId": 10
    },
    {
      "timestamp": 1757903336907,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336910,
      "category": "submit_flag",
      "value": 67,
      "playerId": 10
    },
    {
      "timestamp": 1757903336910,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903336916,
      "category": "submit_flag",
      "value": 48,
      "playerId": 63
    },
    {
      "timestamp": 1757903336916,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336920,
      "category": "submit_flag",
      "value": 29,
      "playerId": 63
    },
    {
      "timestamp": 1757903336920,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336932,
      "category": "submit_flag",
      "value": 35,
      "playerId": 47
    },
    {
      "timestamp": 1757903336932,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903336932,
      "category": "submit_flag",
      "value": 35,
      "playerId": 17
    },
    {
      "timestamp": 1757903336932,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336939,
      "category": "submit_flag",
      "value": 31,
      "playerId": 28
    },
    {
      "timestamp": 1757903336939,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336939,
      "category": "submit_flag",
      "value": 32,
      "playerId": 3
    },
    {
      "timestamp": 1757903336939,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336943,
      "category": "submit_flag",
      "value": 36,
      "playerId": 28
    },
    {
      "timestamp": 1757903336943,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903336945,
      "category": "submit_flag",
      "value": 34,
      "playerId": 63
    },
    {
      "timestamp": 1757903336945,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903336946,
      "category": "submit_flag",
      "value": 39,
      "playerId": 17
    },
    {
      "timestamp": 1757903336946,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336948,
      "category": "submit_flag",
      "value": 30,
      "playerId": 3
    },
    {
      "timestamp": 1757903336948,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336956,
      "category": "submit_flag",
      "value": 31,
      "playerId": 17
    },
    {
      "timestamp": 1757903336956,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903336957,
      "category": "submit_flag",
      "value": 31,
      "playerId": 30
    },
    {
      "timestamp": 1757903336957,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903336960,
      "category": "submit_flag",
      "value": 25,
      "playerId": 30
    },
    {
      "timestamp": 1757903336960,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903336965,
      "category": "submit_flag",
      "value": 32,
      "playerId": 47
    },
    {
      "timestamp": 1757903336965,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903336966,
      "category": "submit_flag",
      "value": 29,
      "playerId": 76
    },
    {
      "timestamp": 1757903336966,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903336968,
      "category": "submit_flag",
      "value": 34,
      "playerId": 67
    },
    {
      "timestamp": 1757903336968,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903336972,
      "category": "submit_flag",
      "value": 31,
      "playerId": 25
    },
    {
      "timestamp": 1757903336972,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336972,
      "category": "submit_flag",
      "value": 29,
      "playerId": 25
    },
    {
      "timestamp": 1757903336972,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336975,
      "category": "submit_flag",
      "value": 30,
      "playerId": 80
    },
    {
      "timestamp": 1757903336975,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903336981,
      "category": "submit_flag",
      "value": 38,
      "playerId": 30
    },
    {
      "timestamp": 1757903336981,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903336986,
      "category": "submit_flag",
      "value": 33,
      "playerId": 13
    },
    {
      "timestamp": 1757903336986,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336990,
      "category": "submit_flag",
      "value": 37,
      "playerId": 3
    },
    {
      "timestamp": 1757903336990,
      "category": "flag_correct",
      "value": 1,
      "playerId": 3
    },
    {
      "timestamp": 1757903336990,
      "category": "submit_flag",
      "value": 2064,
      "playerId": 71
    },
    {
      "timestamp": 1757903336990,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903336992,
      "category": "submit_flag",
      "value": 85,
      "playerId": 25
    },
    {
      "timestamp": 1757903336992,
      "category": "flag_correct",
      "value": 1,
      "playerId": 25
    },
    {
      "timestamp": 1757903336994,
      "category": "submit_flag",
      "value": 30,
      "playerId": 79
    },
    {
      "timestamp": 1757903336994,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903336997,
      "category": "submit_flag",
      "value": 63,
      "playerId": 13
    },
    {
      "timestamp": 1757903336997,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903336998,
      "category": "submit_flag",
      "value": 37,
      "playerId": 58
    },
    {
      "timestamp": 1757903336998,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903336999,
      "category": "submit_flag",
      "value": 27,
      "playerId": 13
    },
    {
      "timestamp": 1757903336999,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337008,
      "category": "submit_flag",
      "value": 30,
      "playerId": 58
    },
    {
      "timestamp": 1757903337008,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903337008,
      "category": "submit_flag",
      "value": 29,
      "playerId": 76
    },
    {
      "timestamp": 1757903337008,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337012,
      "category": "submit_flag",
      "value": 30,
      "playerId": 20
    },
    {
      "timestamp": 1757903337012,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337014,
      "category": "submit_flag",
      "value": 28,
      "playerId": 65
    },
    {
      "timestamp": 1757903337014,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337017,
      "category": "submit_flag",
      "value": 109,
      "playerId": 76
    },
    {
      "timestamp": 1757903337017,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337021,
      "category": "submit_flag",
      "value": 29,
      "playerId": 79
    },
    {
      "timestamp": 1757903337021,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903337028,
      "category": "submit_flag",
      "value": 32,
      "playerId": 65
    },
    {
      "timestamp": 1757903337028,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337036,
      "category": "submit_flag",
      "value": 35,
      "playerId": 79
    },
    {
      "timestamp": 1757903337036,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903337039,
      "category": "submit_flag",
      "value": 30,
      "playerId": 26
    },
    {
      "timestamp": 1757903337039,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903337043,
      "category": "submit_flag",
      "value": 50,
      "playerId": 80
    },
    {
      "timestamp": 1757903337043,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903337048,
      "category": "submit_flag",
      "value": 30,
      "playerId": 66
    },
    {
      "timestamp": 1757903337048,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903337051,
      "category": "submit_flag",
      "value": 29,
      "playerId": 20
    },
    {
      "timestamp": 1757903337051,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337059,
      "category": "submit_flag",
      "value": 41,
      "playerId": 51
    },
    {
      "timestamp": 1757903337059,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903337061,
      "category": "submit_flag",
      "value": 31,
      "playerId": 80
    },
    {
      "timestamp": 1757903337061,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903337066,
      "category": "submit_flag",
      "value": 33,
      "playerId": 60
    },
    {
      "timestamp": 1757903337066,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903337070,
      "category": "submit_flag",
      "value": 51,
      "playerId": 26
    },
    {
      "timestamp": 1757903337070,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903337087,
      "category": "submit_flag",
      "value": 43,
      "playerId": 51
    },
    {
      "timestamp": 1757903337087,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903337089,
      "category": "submit_flag",
      "value": 80,
      "playerId": 65
    },
    {
      "timestamp": 1757903337089,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337090,
      "category": "submit_flag",
      "value": 2163,
      "playerId": 55
    },
    {
      "timestamp": 1757903337090,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337097,
      "category": "submit_flag",
      "value": 46,
      "playerId": 60
    },
    {
      "timestamp": 1757903337097,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903337100,
      "category": "submit_flag",
      "value": 47,
      "playerId": 8
    },
    {
      "timestamp": 1757903337100,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903337104,
      "category": "submit_flag",
      "value": 39,
      "playerId": 78
    },
    {
      "timestamp": 1757903337104,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337109,
      "category": "submit_flag",
      "value": 33,
      "playerId": 54
    },
    {
      "timestamp": 1757903337109,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337116,
      "category": "submit_flag",
      "value": 30,
      "playerId": 78
    },
    {
      "timestamp": 1757903337116,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337117,
      "category": "submit_flag",
      "value": 105,
      "playerId": 51
    },
    {
      "timestamp": 1757903337117,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903337121,
      "category": "submit_flag",
      "value": 32,
      "playerId": 8
    },
    {
      "timestamp": 1757903337121,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903337124,
      "category": "submit_flag",
      "value": 33,
      "playerId": 41
    },
    {
      "timestamp": 1757903337124,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337124,
      "category": "submit_flag",
      "value": 33,
      "playerId": 35
    },
    {
      "timestamp": 1757903337124,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903337127,
      "category": "submit_flag",
      "value": 36,
      "playerId": 35
    },
    {
      "timestamp": 1757903337127,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903337128,
      "category": "submit_flag",
      "value": 31,
      "playerId": 37
    },
    {
      "timestamp": 1757903337128,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903337130,
      "category": "submit_flag",
      "value": 29,
      "playerId": 75
    },
    {
      "timestamp": 1757903337130,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903337131,
      "category": "submit_flag",
      "value": 34,
      "playerId": 49
    },
    {
      "timestamp": 1757903337132,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903337134,
      "category": "submit_flag",
      "value": 31,
      "playerId": 8
    },
    {
      "timestamp": 1757903337134,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903337135,
      "category": "submit_flag",
      "value": 90,
      "playerId": 54
    },
    {
      "timestamp": 1757903337135,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337138,
      "category": "submit_flag",
      "value": 205,
      "playerId": 28
    },
    {
      "timestamp": 1757903337138,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337138,
      "category": "submit_flag",
      "value": 39,
      "playerId": 7
    },
    {
      "timestamp": 1757903337138,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337141,
      "category": "submit_flag",
      "value": 29,
      "playerId": 40
    },
    {
      "timestamp": 1757903337141,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903337141,
      "category": "submit_flag",
      "value": 28,
      "playerId": 10
    },
    {
      "timestamp": 1757903337141,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903337143,
      "category": "submit_flag",
      "value": 83,
      "playerId": 35
    },
    {
      "timestamp": 1757903337144,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903337145,
      "category": "submit_flag",
      "value": 37,
      "playerId": 75
    },
    {
      "timestamp": 1757903337145,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903337151,
      "category": "submit_flag",
      "value": 51,
      "playerId": 10
    },
    {
      "timestamp": 1757903337151,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903337152,
      "category": "submit_flag",
      "value": 31,
      "playerId": 74
    },
    {
      "timestamp": 1757903337153,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337155,
      "category": "submit_flag",
      "value": 34,
      "playerId": 75
    },
    {
      "timestamp": 1757903337155,
      "category": "flag_correct",
      "value": 1,
      "playerId": 75
    },
    {
      "timestamp": 1757903337158,
      "category": "submit_flag",
      "value": 37,
      "playerId": 41
    },
    {
      "timestamp": 1757903337158,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337159,
      "category": "submit_flag",
      "value": 31,
      "playerId": 41
    },
    {
      "timestamp": 1757903337159,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337161,
      "category": "submit_flag",
      "value": 130,
      "playerId": 26
    },
    {
      "timestamp": 1757903337161,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903337164,
      "category": "submit_flag",
      "value": 151,
      "playerId": 54
    },
    {
      "timestamp": 1757903337164,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337165,
      "category": "submit_flag",
      "value": 29,
      "playerId": 40
    },
    {
      "timestamp": 1757903337165,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903337171,
      "category": "submit_flag",
      "value": 115,
      "playerId": 4
    },
    {
      "timestamp": 1757903337171,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903337171,
      "category": "submit_flag",
      "value": 117,
      "playerId": 34
    },
    {
      "timestamp": 1757903337171,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903337173,
      "category": "submit_flag",
      "value": 34,
      "playerId": 49
    },
    {
      "timestamp": 1757903337173,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903337173,
      "category": "submit_flag",
      "value": 29,
      "playerId": 11
    },
    {
      "timestamp": 1757903337173,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903337174,
      "category": "submit_flag",
      "value": 35,
      "playerId": 63
    },
    {
      "timestamp": 1757903337175,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337175,
      "category": "submit_flag",
      "value": 28,
      "playerId": 17
    },
    {
      "timestamp": 1757903337175,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337180,
      "category": "submit_flag",
      "value": 31,
      "playerId": 74
    },
    {
      "timestamp": 1757903337180,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337182,
      "category": "submit_flag",
      "value": 28,
      "playerId": 17
    },
    {
      "timestamp": 1757903337182,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337188,
      "category": "submit_flag",
      "value": 35,
      "playerId": 10
    },
    {
      "timestamp": 1757903337188,
      "category": "flag_correct",
      "value": 1,
      "playerId": 10
    },
    {
      "timestamp": 1757903337191,
      "category": "submit_flag",
      "value": 31,
      "playerId": 40
    },
    {
      "timestamp": 1757903337191,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903337192,
      "category": "submit_flag",
      "value": 2548,
      "playerId": 24
    },
    {
      "timestamp": 1757903337192,
      "category": "flag_correct",
      "value": 1,
      "playerId": 24
    },
    {
      "timestamp": 1757903337196,
      "category": "submit_flag",
      "value": 33,
      "playerId": 30
    },
    {
      "timestamp": 1757903337196,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337199,
      "category": "submit_flag",
      "value": 34,
      "playerId": 67
    },
    {
      "timestamp": 1757903337199,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337199,
      "category": "submit_flag",
      "value": 63,
      "playerId": 7
    },
    {
      "timestamp": 1757903337199,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337203,
      "category": "submit_flag",
      "value": 135,
      "playerId": 49
    },
    {
      "timestamp": 1757903337203,
      "category": "flag_correct",
      "value": 1,
      "playerId": 49
    },
    {
      "timestamp": 1757903337207,
      "category": "submit_flag",
      "value": 68,
      "playerId": 37
    },
    {
      "timestamp": 1757903337207,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903337209,
      "category": "submit_flag",
      "value": 66,
      "playerId": 11
    },
    {
      "timestamp": 1757903337209,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903337211,
      "category": "submit_flag",
      "value": 216,
      "playerId": 20
    },
    {
      "timestamp": 1757903337211,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337212,
      "category": "submit_flag",
      "value": 31,
      "playerId": 69
    },
    {
      "timestamp": 1757903337212,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337217,
      "category": "submit_flag",
      "value": 110,
      "playerId": 78
    },
    {
      "timestamp": 1757903337217,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337217,
      "category": "submit_flag",
      "value": 27,
      "playerId": 13
    },
    {
      "timestamp": 1757903337218,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337219,
      "category": "submit_flag",
      "value": 27,
      "playerId": 30
    },
    {
      "timestamp": 1757903337219,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337224,
      "category": "submit_flag",
      "value": 33,
      "playerId": 7
    },
    {
      "timestamp": 1757903337224,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337229,
      "category": "submit_flag",
      "value": 32,
      "playerId": 71
    },
    {
      "timestamp": 1757903337229,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903337232,
      "category": "submit_flag",
      "value": 31,
      "playerId": 67
    },
    {
      "timestamp": 1757903337232,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337233,
      "category": "submit_flag",
      "value": 32,
      "playerId": 69
    },
    {
      "timestamp": 1757903337234,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337260,
      "category": "submit_flag",
      "value": 65,
      "playerId": 63
    },
    {
      "timestamp": 1757903337260,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337265,
      "category": "submit_flag",
      "value": 26,
      "playerId": 17
    },
    {
      "timestamp": 1757903337265,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337270,
      "category": "submit_flag",
      "value": 31,
      "playerId": 47
    },
    {
      "timestamp": 1757903337270,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903337271,
      "category": "submit_flag",
      "value": 212,
      "playerId": 66
    },
    {
      "timestamp": 1757903337271,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903337273,
      "category": "submit_flag",
      "value": 38,
      "playerId": 67
    },
    {
      "timestamp": 1757903337273,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337275,
      "category": "submit_flag",
      "value": 45,
      "playerId": 76
    },
    {
      "timestamp": 1757903337275,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337278,
      "category": "submit_flag",
      "value": 41,
      "playerId": 47
    },
    {
      "timestamp": 1757903337278,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903337280,
      "category": "submit_flag",
      "value": 34,
      "playerId": 47
    },
    {
      "timestamp": 1757903337280,
      "category": "flag_correct",
      "value": 1,
      "playerId": 47
    },
    {
      "timestamp": 1757903337280,
      "category": "submit_flag",
      "value": 26,
      "playerId": 80
    },
    {
      "timestamp": 1757903337280,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903337282,
      "category": "submit_flag",
      "value": 49,
      "playerId": 30
    },
    {
      "timestamp": 1757903337282,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337301,
      "category": "submit_flag",
      "value": 145,
      "playerId": 37
    },
    {
      "timestamp": 1757903337301,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903337303,
      "category": "submit_flag",
      "value": 43,
      "playerId": 79
    },
    {
      "timestamp": 1757903337303,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903337303,
      "category": "submit_flag",
      "value": 40,
      "playerId": 13
    },
    {
      "timestamp": 1757903337303,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337305,
      "category": "submit_flag",
      "value": 78,
      "playerId": 69
    },
    {
      "timestamp": 1757903337305,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337312,
      "category": "submit_flag",
      "value": 36,
      "playerId": 76
    },
    {
      "timestamp": 1757903337312,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337315,
      "category": "submit_flag",
      "value": 115,
      "playerId": 71
    },
    {
      "timestamp": 1757903337315,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903337315,
      "category": "submit_flag",
      "value": 255,
      "playerId": 66
    },
    {
      "timestamp": 1757903337315,
      "category": "flag_correct",
      "value": 1,
      "playerId": 66
    },
    {
      "timestamp": 1757903337316,
      "category": "submit_flag",
      "value": 38,
      "playerId": 13
    },
    {
      "timestamp": 1757903337316,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337319,
      "category": "submit_flag",
      "value": 34,
      "playerId": 76
    },
    {
      "timestamp": 1757903337319,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337321,
      "category": "submit_flag",
      "value": 105,
      "playerId": 63
    },
    {
      "timestamp": 1757903337321,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337328,
      "category": "submit_flag",
      "value": 30,
      "playerId": 80
    },
    {
      "timestamp": 1757903337328,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903337329,
      "category": "submit_flag",
      "value": 31,
      "playerId": 55
    },
    {
      "timestamp": 1757903337329,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337331,
      "category": "submit_flag",
      "value": 25,
      "playerId": 79
    },
    {
      "timestamp": 1757903337331,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903337337,
      "category": "submit_flag",
      "value": 167,
      "playerId": 74
    },
    {
      "timestamp": 1757903337337,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337340,
      "category": "submit_flag",
      "value": 115,
      "playerId": 79
    },
    {
      "timestamp": 1757903337340,
      "category": "flag_correct",
      "value": 1,
      "playerId": 79
    },
    {
      "timestamp": 1757903337343,
      "category": "submit_flag",
      "value": 27,
      "playerId": 80
    },
    {
      "timestamp": 1757903337343,
      "category": "flag_correct",
      "value": 1,
      "playerId": 80
    },
    {
      "timestamp": 1757903337349,
      "category": "submit_flag",
      "value": 29,
      "playerId": 55
    },
    {
      "timestamp": 1757903337349,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337351,
      "category": "submit_flag",
      "value": 25,
      "playerId": 28
    },
    {
      "timestamp": 1757903337351,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337355,
      "category": "submit_flag",
      "value": 32,
      "playerId": 65
    },
    {
      "timestamp": 1757903337355,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337360,
      "category": "login_attempt",
      "value": 2716,
      "playerId": 77
    },
    {
      "timestamp": 1757903337360,
      "category": "login_success",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903337364,
      "category": "submit_flag",
      "value": 27,
      "playerId": 35
    },
    {
      "timestamp": 1757903337364,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903337368,
      "category": "submit_flag",
      "value": 149,
      "playerId": 71
    },
    {
      "timestamp": 1757903337368,
      "category": "flag_correct",
      "value": 1,
      "playerId": 71
    },
    {
      "timestamp": 1757903337370,
      "category": "submit_flag",
      "value": 29,
      "playerId": 51
    },
    {
      "timestamp": 1757903337370,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903337376,
      "category": "submit_flag",
      "value": 29,
      "playerId": 8
    },
    {
      "timestamp": 1757903337376,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903337390,
      "category": "submit_flag",
      "value": 29,
      "playerId": 54
    },
    {
      "timestamp": 1757903337390,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337394,
      "category": "submit_flag",
      "value": 26,
      "playerId": 65
    },
    {
      "timestamp": 1757903337394,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337399,
      "category": "submit_flag",
      "value": 29,
      "playerId": 26
    },
    {
      "timestamp": 1757903337399,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903337404,
      "category": "submit_flag",
      "value": 31,
      "playerId": 65
    },
    {
      "timestamp": 1757903337404,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337407,
      "category": "submit_flag",
      "value": 39,
      "playerId": 55
    },
    {
      "timestamp": 1757903337407,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337408,
      "category": "submit_flag",
      "value": 35,
      "playerId": 41
    },
    {
      "timestamp": 1757903337408,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337409,
      "category": "submit_flag",
      "value": 35,
      "playerId": 28
    },
    {
      "timestamp": 1757903337409,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337412,
      "category": "submit_flag",
      "value": 379,
      "playerId": 4
    },
    {
      "timestamp": 1757903337412,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903337412,
      "category": "submit_flag",
      "value": 26,
      "playerId": 51
    },
    {
      "timestamp": 1757903337412,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903337417,
      "category": "submit_flag",
      "value": 33,
      "playerId": 51
    },
    {
      "timestamp": 1757903337417,
      "category": "flag_correct",
      "value": 1,
      "playerId": 51
    },
    {
      "timestamp": 1757903337419,
      "category": "submit_flag",
      "value": 30,
      "playerId": 28
    },
    {
      "timestamp": 1757903337419,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337421,
      "category": "submit_flag",
      "value": 29,
      "playerId": 8
    },
    {
      "timestamp": 1757903337421,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903337424,
      "category": "submit_flag",
      "value": 34,
      "playerId": 8
    },
    {
      "timestamp": 1757903337424,
      "category": "flag_correct",
      "value": 1,
      "playerId": 8
    },
    {
      "timestamp": 1757903337435,
      "category": "submit_flag",
      "value": 27,
      "playerId": 26
    },
    {
      "timestamp": 1757903337435,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903337439,
      "category": "submit_flag",
      "value": 29,
      "playerId": 41
    },
    {
      "timestamp": 1757903337439,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337442,
      "category": "submit_flag",
      "value": 29,
      "playerId": 26
    },
    {
      "timestamp": 1757903337442,
      "category": "flag_correct",
      "value": 1,
      "playerId": 26
    },
    {
      "timestamp": 1757903337446,
      "category": "submit_flag",
      "value": 31,
      "playerId": 35
    },
    {
      "timestamp": 1757903337446,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903337462,
      "category": "submit_flag",
      "value": 402,
      "playerId": 60
    },
    {
      "timestamp": 1757903337462,
      "category": "flag_correct",
      "value": 1,
      "playerId": 60
    },
    {
      "timestamp": 1757903337466,
      "category": "submit_flag",
      "value": 30,
      "playerId": 40
    },
    {
      "timestamp": 1757903337466,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903337468,
      "category": "submit_flag",
      "value": 431,
      "playerId": 34
    },
    {
      "timestamp": 1757903337468,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903337475,
      "category": "submit_flag",
      "value": 45,
      "playerId": 7
    },
    {
      "timestamp": 1757903337475,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337475,
      "category": "submit_flag",
      "value": 49,
      "playerId": 35
    },
    {
      "timestamp": 1757903337475,
      "category": "flag_correct",
      "value": 1,
      "playerId": 35
    },
    {
      "timestamp": 1757903337475,
      "category": "submit_flag",
      "value": 34,
      "playerId": 54
    },
    {
      "timestamp": 1757903337475,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337478,
      "category": "submit_flag",
      "value": 38,
      "playerId": 7
    },
    {
      "timestamp": 1757903337478,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337479,
      "category": "submit_flag",
      "value": 54,
      "playerId": 54
    },
    {
      "timestamp": 1757903337479,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337491,
      "category": "websocket_connected",
      "value": 81,
      "playerId": 77
    },
    {
      "timestamp": 1757903337499,
      "category": "submit_flag",
      "value": 76,
      "playerId": 41
    },
    {
      "timestamp": 1757903337499,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337504,
      "category": "submit_flag",
      "value": 34,
      "playerId": 17
    },
    {
      "timestamp": 1757903337504,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337511,
      "category": "submit_flag",
      "value": 35,
      "playerId": 7
    },
    {
      "timestamp": 1757903337511,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337512,
      "category": "submit_flag",
      "value": 36,
      "playerId": 20
    },
    {
      "timestamp": 1757903337512,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337514,
      "category": "submit_flag",
      "value": 35,
      "playerId": 40
    },
    {
      "timestamp": 1757903337514,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903337516,
      "category": "submit_flag",
      "value": 40,
      "playerId": 40
    },
    {
      "timestamp": 1757903337516,
      "category": "flag_correct",
      "value": 1,
      "playerId": 40
    },
    {
      "timestamp": 1757903337517,
      "category": "submit_flag",
      "value": 39,
      "playerId": 17
    },
    {
      "timestamp": 1757903337517,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337520,
      "category": "submit_flag",
      "value": 29,
      "playerId": 67
    },
    {
      "timestamp": 1757903337520,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337522,
      "category": "submit_flag",
      "value": 34,
      "playerId": 20
    },
    {
      "timestamp": 1757903337522,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337524,
      "category": "submit_flag",
      "value": 30,
      "playerId": 20
    },
    {
      "timestamp": 1757903337524,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337524,
      "category": "submit_flag",
      "value": 26,
      "playerId": 78
    },
    {
      "timestamp": 1757903337524,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337528,
      "category": "submit_flag",
      "value": 28,
      "playerId": 69
    },
    {
      "timestamp": 1757903337528,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337535,
      "category": "submit_flag",
      "value": 37,
      "playerId": 37
    },
    {
      "timestamp": 1757903337535,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903337539,
      "category": "submit_flag",
      "value": 26,
      "playerId": 63
    },
    {
      "timestamp": 1757903337539,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337543,
      "category": "submit_flag",
      "value": 27,
      "playerId": 37
    },
    {
      "timestamp": 1757903337543,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903337545,
      "category": "submit_flag",
      "value": 26,
      "playerId": 78
    },
    {
      "timestamp": 1757903337545,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337552,
      "category": "submit_flag",
      "value": 31,
      "playerId": 67
    },
    {
      "timestamp": 1757903337552,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337553,
      "category": "submit_flag",
      "value": 63,
      "playerId": 78
    },
    {
      "timestamp": 1757903337553,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337556,
      "category": "submit_flag",
      "value": 27,
      "playerId": 74
    },
    {
      "timestamp": 1757903337556,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337561,
      "category": "submit_flag",
      "value": 28,
      "playerId": 30
    },
    {
      "timestamp": 1757903337561,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337563,
      "category": "submit_flag",
      "value": 27,
      "playerId": 30
    },
    {
      "timestamp": 1757903337564,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337574,
      "category": "submit_flag",
      "value": 36,
      "playerId": 13
    },
    {
      "timestamp": 1757903337574,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337575,
      "category": "submit_flag",
      "value": 36,
      "playerId": 76
    },
    {
      "timestamp": 1757903337575,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337580,
      "category": "submit_flag",
      "value": 40,
      "playerId": 69
    },
    {
      "timestamp": 1757903337580,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337580,
      "category": "submit_flag",
      "value": 38,
      "playerId": 67
    },
    {
      "timestamp": 1757903337580,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337580,
      "category": "submit_flag",
      "value": 40,
      "playerId": 30
    },
    {
      "timestamp": 1757903337580,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337582,
      "category": "submit_flag",
      "value": 36,
      "playerId": 76
    },
    {
      "timestamp": 1757903337582,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337584,
      "category": "submit_flag",
      "value": 34,
      "playerId": 17
    },
    {
      "timestamp": 1757903337584,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337586,
      "category": "submit_flag",
      "value": 29,
      "playerId": 76
    },
    {
      "timestamp": 1757903337586,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337592,
      "category": "submit_flag",
      "value": 38,
      "playerId": 63
    },
    {
      "timestamp": 1757903337592,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337598,
      "category": "submit_flag",
      "value": 25,
      "playerId": 37
    },
    {
      "timestamp": 1757903337598,
      "category": "flag_correct",
      "value": 1,
      "playerId": 37
    },
    {
      "timestamp": 1757903337604,
      "category": "submit_flag",
      "value": 31,
      "playerId": 69
    },
    {
      "timestamp": 1757903337604,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337605,
      "category": "submit_flag",
      "value": 28,
      "playerId": 63
    },
    {
      "timestamp": 1757903337605,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337612,
      "category": "submit_flag",
      "value": 27,
      "playerId": 74
    },
    {
      "timestamp": 1757903337612,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337613,
      "category": "submit_flag",
      "value": 26,
      "playerId": 13
    },
    {
      "timestamp": 1757903337613,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337625,
      "category": "submit_flag",
      "value": 29,
      "playerId": 55
    },
    {
      "timestamp": 1757903337625,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337631,
      "category": "submit_flag",
      "value": 29,
      "playerId": 13
    },
    {
      "timestamp": 1757903337631,
      "category": "flag_correct",
      "value": 1,
      "playerId": 13
    },
    {
      "timestamp": 1757903337645,
      "category": "submit_flag",
      "value": 29,
      "playerId": 55
    },
    {
      "timestamp": 1757903337645,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337654,
      "category": "submit_flag",
      "value": 616,
      "playerId": 4
    },
    {
      "timestamp": 1757903337654,
      "category": "flag_correct",
      "value": 1,
      "playerId": 4
    },
    {
      "timestamp": 1757903337667,
      "category": "submit_flag",
      "value": 47,
      "playerId": 65
    },
    {
      "timestamp": 1757903337667,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337668,
      "category": "submit_flag",
      "value": 46,
      "playerId": 74
    },
    {
      "timestamp": 1757903337668,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337693,
      "category": "submit_flag",
      "value": 26,
      "playerId": 28
    },
    {
      "timestamp": 1757903337693,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337698,
      "category": "submit_flag",
      "value": 30,
      "playerId": 65
    },
    {
      "timestamp": 1757903337698,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337699,
      "category": "submit_flag",
      "value": 28,
      "playerId": 65
    },
    {
      "timestamp": 1757903337699,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337701,
      "category": "submit_flag",
      "value": 35,
      "playerId": 28
    },
    {
      "timestamp": 1757903337701,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337714,
      "category": "submit_flag",
      "value": 31,
      "playerId": 28
    },
    {
      "timestamp": 1757903337714,
      "category": "flag_correct",
      "value": 1,
      "playerId": 28
    },
    {
      "timestamp": 1757903337715,
      "category": "submit_flag",
      "value": 27,
      "playerId": 41
    },
    {
      "timestamp": 1757903337715,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337720,
      "category": "submit_flag",
      "value": 28,
      "playerId": 55
    },
    {
      "timestamp": 1757903337720,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337731,
      "category": "submit_flag",
      "value": 29,
      "playerId": 7
    },
    {
      "timestamp": 1757903337731,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337732,
      "category": "submit_flag",
      "value": 29,
      "playerId": 54
    },
    {
      "timestamp": 1757903337732,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337734,
      "category": "submit_flag",
      "value": 30,
      "playerId": 7
    },
    {
      "timestamp": 1757903337734,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337748,
      "category": "submit_flag",
      "value": 30,
      "playerId": 54
    },
    {
      "timestamp": 1757903337748,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337752,
      "category": "submit_flag",
      "value": 28,
      "playerId": 20
    },
    {
      "timestamp": 1757903337752,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337757,
      "category": "submit_flag",
      "value": 4264,
      "playerId": 32
    },
    {
      "timestamp": 1757903337757,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903337758,
      "category": "submit_flag",
      "value": 26,
      "playerId": 20
    },
    {
      "timestamp": 1757903337758,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337763,
      "category": "submit_flag",
      "value": 29,
      "playerId": 41
    },
    {
      "timestamp": 1757903337763,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337770,
      "category": "submit_flag",
      "value": 30,
      "playerId": 20
    },
    {
      "timestamp": 1757903337770,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903337773,
      "category": "submit_flag",
      "value": 28,
      "playerId": 54
    },
    {
      "timestamp": 1757903337773,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903337793,
      "category": "submit_flag",
      "value": 29,
      "playerId": 67
    },
    {
      "timestamp": 1757903337793,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337796,
      "category": "submit_flag",
      "value": 25,
      "playerId": 77
    },
    {
      "timestamp": 1757903337796,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903337797,
      "category": "submit_flag",
      "value": 28,
      "playerId": 78
    },
    {
      "timestamp": 1757903337797,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337801,
      "category": "submit_flag",
      "value": 29,
      "playerId": 77
    },
    {
      "timestamp": 1757903337801,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903337804,
      "category": "submit_flag",
      "value": 29,
      "playerId": 41
    },
    {
      "timestamp": 1757903337805,
      "category": "flag_correct",
      "value": 1,
      "playerId": 41
    },
    {
      "timestamp": 1757903337805,
      "category": "submit_flag",
      "value": 28,
      "playerId": 78
    },
    {
      "timestamp": 1757903337805,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337809,
      "category": "submit_flag",
      "value": 32,
      "playerId": 17
    },
    {
      "timestamp": 1757903337809,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337810,
      "category": "submit_flag",
      "value": 28,
      "playerId": 30
    },
    {
      "timestamp": 1757903337810,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337813,
      "category": "submit_flag",
      "value": 29,
      "playerId": 76
    },
    {
      "timestamp": 1757903337814,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337815,
      "category": "submit_flag",
      "value": 31,
      "playerId": 7
    },
    {
      "timestamp": 1757903337815,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903337815,
      "category": "submit_flag",
      "value": 27,
      "playerId": 63
    },
    {
      "timestamp": 1757903337815,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337821,
      "category": "submit_flag",
      "value": 30,
      "playerId": 77
    },
    {
      "timestamp": 1757903337821,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903337822,
      "category": "submit_flag",
      "value": 30,
      "playerId": 69
    },
    {
      "timestamp": 1757903337822,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337831,
      "category": "submit_flag",
      "value": 49,
      "playerId": 30
    },
    {
      "timestamp": 1757903337831,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337833,
      "category": "submit_flag",
      "value": 30,
      "playerId": 63
    },
    {
      "timestamp": 1757903337833,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337835,
      "category": "submit_flag",
      "value": 33,
      "playerId": 78
    },
    {
      "timestamp": 1757903337835,
      "category": "flag_correct",
      "value": 1,
      "playerId": 78
    },
    {
      "timestamp": 1757903337838,
      "category": "submit_flag",
      "value": 28,
      "playerId": 17
    },
    {
      "timestamp": 1757903337838,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337844,
      "category": "submit_flag",
      "value": 31,
      "playerId": 76
    },
    {
      "timestamp": 1757903337844,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337854,
      "category": "submit_flag",
      "value": 32,
      "playerId": 69
    },
    {
      "timestamp": 1757903337854,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337855,
      "category": "submit_flag",
      "value": 3881,
      "playerId": 31
    },
    {
      "timestamp": 1757903337855,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903337856,
      "category": "submit_flag",
      "value": 29,
      "playerId": 30
    },
    {
      "timestamp": 1757903337856,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903337861,
      "category": "submit_flag",
      "value": 29,
      "playerId": 67
    },
    {
      "timestamp": 1757903337861,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337874,
      "category": "submit_flag",
      "value": 28,
      "playerId": 76
    },
    {
      "timestamp": 1757903337874,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903337881,
      "category": "submit_flag",
      "value": 28,
      "playerId": 69
    },
    {
      "timestamp": 1757903337881,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903337883,
      "category": "submit_flag",
      "value": 27,
      "playerId": 67
    },
    {
      "timestamp": 1757903337883,
      "category": "flag_correct",
      "value": 1,
      "playerId": 67
    },
    {
      "timestamp": 1757903337887,
      "category": "submit_flag",
      "value": 31,
      "playerId": 74
    },
    {
      "timestamp": 1757903337887,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337889,
      "category": "submit_flag",
      "value": 26,
      "playerId": 17
    },
    {
      "timestamp": 1757903337889,
      "category": "flag_correct",
      "value": 1,
      "playerId": 17
    },
    {
      "timestamp": 1757903337902,
      "category": "submit_flag",
      "value": 28,
      "playerId": 63
    },
    {
      "timestamp": 1757903337902,
      "category": "flag_correct",
      "value": 1,
      "playerId": 63
    },
    {
      "timestamp": 1757903337918,
      "category": "submit_flag",
      "value": 26,
      "playerId": 65
    },
    {
      "timestamp": 1757903337918,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337934,
      "category": "submit_flag",
      "value": 28,
      "playerId": 65
    },
    {
      "timestamp": 1757903337934,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337937,
      "category": "submit_flag",
      "value": 28,
      "playerId": 65
    },
    {
      "timestamp": 1757903337937,
      "category": "flag_correct",
      "value": 1,
      "playerId": 65
    },
    {
      "timestamp": 1757903337941,
      "category": "submit_flag",
      "value": 31,
      "playerId": 55
    },
    {
      "timestamp": 1757903337941,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903337942,
      "category": "submit_flag",
      "value": 28,
      "playerId": 74
    },
    {
      "timestamp": 1757903337942,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337944,
      "category": "submit_flag",
      "value": 30,
      "playerId": 74
    },
    {
      "timestamp": 1757903337944,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903337957,
      "category": "submit_flag",
      "value": 899,
      "playerId": 34
    },
    {
      "timestamp": 1757903337957,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903337987,
      "category": "submit_flag",
      "value": 24,
      "playerId": 55
    },
    {
      "timestamp": 1757903337987,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903338008,
      "category": "submit_flag",
      "value": 28,
      "playerId": 55
    },
    {
      "timestamp": 1757903338008,
      "category": "flag_correct",
      "value": 1,
      "playerId": 55
    },
    {
      "timestamp": 1757903338013,
      "category": "submit_flag",
      "value": 28,
      "playerId": 54
    },
    {
      "timestamp": 1757903338013,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903338036,
      "category": "submit_flag",
      "value": 28,
      "playerId": 77
    },
    {
      "timestamp": 1757903338036,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338041,
      "category": "submit_flag",
      "value": 30,
      "playerId": 77
    },
    {
      "timestamp": 1757903338041,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338045,
      "category": "submit_flag",
      "value": 28,
      "playerId": 20
    },
    {
      "timestamp": 1757903338045,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903338051,
      "category": "submit_flag",
      "value": 42,
      "playerId": 20
    },
    {
      "timestamp": 1757903338051,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903338053,
      "category": "submit_flag",
      "value": 37,
      "playerId": 54
    },
    {
      "timestamp": 1757903338054,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903338056,
      "category": "submit_flag",
      "value": 36,
      "playerId": 54
    },
    {
      "timestamp": 1757903338056,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903338058,
      "category": "submit_flag",
      "value": 997,
      "playerId": 11
    },
    {
      "timestamp": 1757903338058,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903338060,
      "category": "submit_flag",
      "value": 41,
      "playerId": 7
    },
    {
      "timestamp": 1757903338060,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903338075,
      "category": "submit_flag",
      "value": 56,
      "playerId": 77
    },
    {
      "timestamp": 1757903338075,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338079,
      "category": "submit_flag",
      "value": 27,
      "playerId": 20
    },
    {
      "timestamp": 1757903338079,
      "category": "flag_correct",
      "value": 1,
      "playerId": 20
    },
    {
      "timestamp": 1757903338090,
      "category": "submit_flag",
      "value": 34,
      "playerId": 7
    },
    {
      "timestamp": 1757903338090,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903338091,
      "category": "submit_flag",
      "value": 34,
      "playerId": 30
    },
    {
      "timestamp": 1757903338091,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903338098,
      "category": "submit_flag",
      "value": 28,
      "playerId": 76
    },
    {
      "timestamp": 1757903338098,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903338111,
      "category": "submit_flag",
      "value": 32,
      "playerId": 31
    },
    {
      "timestamp": 1757903338111,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903338112,
      "category": "submit_flag",
      "value": 31,
      "playerId": 7
    },
    {
      "timestamp": 1757903338112,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903338119,
      "category": "submit_flag",
      "value": 28,
      "playerId": 76
    },
    {
      "timestamp": 1757903338119,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903338123,
      "category": "submit_flag",
      "value": 29,
      "playerId": 76
    },
    {
      "timestamp": 1757903338123,
      "category": "flag_correct",
      "value": 1,
      "playerId": 76
    },
    {
      "timestamp": 1757903338124,
      "category": "submit_flag",
      "value": 28,
      "playerId": 30
    },
    {
      "timestamp": 1757903338124,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903338127,
      "category": "submit_flag",
      "value": 27,
      "playerId": 69
    },
    {
      "timestamp": 1757903338127,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903338130,
      "category": "submit_flag",
      "value": 26,
      "playerId": 31
    },
    {
      "timestamp": 1757903338131,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903338135,
      "category": "submit_flag",
      "value": 29,
      "playerId": 69
    },
    {
      "timestamp": 1757903338135,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903338142,
      "category": "submit_flag",
      "value": 29,
      "playerId": 31
    },
    {
      "timestamp": 1757903338142,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903338156,
      "category": "submit_flag",
      "value": 30,
      "playerId": 30
    },
    {
      "timestamp": 1757903338157,
      "category": "flag_correct",
      "value": 1,
      "playerId": 30
    },
    {
      "timestamp": 1757903338157,
      "category": "submit_flag",
      "value": 31,
      "playerId": 69
    },
    {
      "timestamp": 1757903338157,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903338190,
      "category": "submit_flag",
      "value": 27,
      "playerId": 34
    },
    {
      "timestamp": 1757903338190,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338215,
      "category": "submit_flag",
      "value": 27,
      "playerId": 74
    },
    {
      "timestamp": 1757903338215,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903338219,
      "category": "submit_flag",
      "value": 28,
      "playerId": 74
    },
    {
      "timestamp": 1757903338219,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903338226,
      "category": "submit_flag",
      "value": 28,
      "playerId": 74
    },
    {
      "timestamp": 1757903338226,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903338230,
      "category": "submit_flag",
      "value": 27,
      "playerId": 34
    },
    {
      "timestamp": 1757903338230,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338255,
      "category": "submit_flag",
      "value": 4527,
      "playerId": 53
    },
    {
      "timestamp": 1757903338255,
      "category": "flag_correct",
      "value": 1,
      "playerId": 53
    },
    {
      "timestamp": 1757903338258,
      "category": "submit_flag",
      "value": 28,
      "playerId": 34
    },
    {
      "timestamp": 1757903338258,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338292,
      "category": "submit_flag",
      "value": 26,
      "playerId": 54
    },
    {
      "timestamp": 1757903338292,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903338313,
      "category": "submit_flag",
      "value": 29,
      "playerId": 77
    },
    {
      "timestamp": 1757903338313,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338321,
      "category": "submit_flag",
      "value": 27,
      "playerId": 11
    },
    {
      "timestamp": 1757903338321,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903338325,
      "category": "submit_flag",
      "value": 25,
      "playerId": 54
    },
    {
      "timestamp": 1757903338325,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903338330,
      "category": "submit_flag",
      "value": 27,
      "playerId": 77
    },
    {
      "timestamp": 1757903338330,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338331,
      "category": "submit_flag",
      "value": 30,
      "playerId": 11
    },
    {
      "timestamp": 1757903338331,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903338340,
      "category": "submit_flag",
      "value": 29,
      "playerId": 11
    },
    {
      "timestamp": 1757903338340,
      "category": "flag_correct",
      "value": 1,
      "playerId": 11
    },
    {
      "timestamp": 1757903338343,
      "category": "submit_flag",
      "value": 26,
      "playerId": 7
    },
    {
      "timestamp": 1757903338343,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903338351,
      "category": "submit_flag",
      "value": 28,
      "playerId": 54
    },
    {
      "timestamp": 1757903338351,
      "category": "flag_correct",
      "value": 1,
      "playerId": 54
    },
    {
      "timestamp": 1757903338353,
      "category": "submit_flag",
      "value": 25,
      "playerId": 31
    },
    {
      "timestamp": 1757903338354,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903338357,
      "category": "submit_flag",
      "value": 4353,
      "playerId": 61
    },
    {
      "timestamp": 1757903338357,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338359,
      "category": "submit_flag",
      "value": 31,
      "playerId": 7
    },
    {
      "timestamp": 1757903338359,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903338364,
      "category": "submit_flag",
      "value": 29,
      "playerId": 77
    },
    {
      "timestamp": 1757903338364,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338398,
      "category": "submit_flag",
      "value": 3719,
      "playerId": 62
    },
    {
      "timestamp": 1757903338398,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338403,
      "category": "submit_flag",
      "value": 34,
      "playerId": 31
    },
    {
      "timestamp": 1757903338403,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903338408,
      "category": "submit_flag",
      "value": 25,
      "playerId": 7
    },
    {
      "timestamp": 1757903338408,
      "category": "flag_correct",
      "value": 1,
      "playerId": 7
    },
    {
      "timestamp": 1757903338418,
      "category": "submit_flag",
      "value": 29,
      "playerId": 69
    },
    {
      "timestamp": 1757903338418,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903338430,
      "category": "submit_flag",
      "value": 27,
      "playerId": 69
    },
    {
      "timestamp": 1757903338430,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903338438,
      "category": "submit_flag",
      "value": 29,
      "playerId": 69
    },
    {
      "timestamp": 1757903338438,
      "category": "flag_correct",
      "value": 1,
      "playerId": 69
    },
    {
      "timestamp": 1757903338443,
      "category": "submit_flag",
      "value": 28,
      "playerId": 31
    },
    {
      "timestamp": 1757903338443,
      "category": "flag_correct",
      "value": 1,
      "playerId": 31
    },
    {
      "timestamp": 1757903338446,
      "category": "submit_flag",
      "value": 28,
      "playerId": 74
    },
    {
      "timestamp": 1757903338446,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903338458,
      "category": "submit_flag",
      "value": 29,
      "playerId": 74
    },
    {
      "timestamp": 1757903338458,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903338470,
      "category": "submit_flag",
      "value": 26,
      "playerId": 34
    },
    {
      "timestamp": 1757903338470,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338474,
      "category": "submit_flag",
      "value": 29,
      "playerId": 74
    },
    {
      "timestamp": 1757903338475,
      "category": "flag_correct",
      "value": 1,
      "playerId": 74
    },
    {
      "timestamp": 1757903338492,
      "category": "submit_flag",
      "value": 27,
      "playerId": 34
    },
    {
      "timestamp": 1757903338492,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338495,
      "category": "submit_flag",
      "value": 4940,
      "playerId": 32
    },
    {
      "timestamp": 1757903338495,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903338527,
      "category": "submit_flag",
      "value": 27,
      "playerId": 34
    },
    {
      "timestamp": 1757903338527,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338589,
      "category": "submit_flag",
      "value": 27,
      "playerId": 61
    },
    {
      "timestamp": 1757903338589,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338601,
      "category": "submit_flag",
      "value": 25,
      "playerId": 61
    },
    {
      "timestamp": 1757903338602,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338614,
      "category": "submit_flag",
      "value": 27,
      "playerId": 77
    },
    {
      "timestamp": 1757903338614,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338616,
      "category": "submit_flag",
      "value": 25,
      "playerId": 62
    },
    {
      "timestamp": 1757903338616,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338631,
      "category": "submit_flag",
      "value": 25,
      "playerId": 62
    },
    {
      "timestamp": 1757903338631,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338638,
      "category": "submit_flag",
      "value": 28,
      "playerId": 62
    },
    {
      "timestamp": 1757903338638,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338652,
      "category": "submit_flag",
      "value": 27,
      "playerId": 77
    },
    {
      "timestamp": 1757903338652,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338658,
      "category": "submit_flag",
      "value": 29,
      "playerId": 61
    },
    {
      "timestamp": 1757903338658,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338680,
      "category": "submit_flag",
      "value": 115,
      "playerId": 77
    },
    {
      "timestamp": 1757903338680,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338695,
      "category": "submit_flag",
      "value": 4437,
      "playerId": 48
    },
    {
      "timestamp": 1757903338695,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903338705,
      "category": "submit_flag",
      "value": 28,
      "playerId": 32
    },
    {
      "timestamp": 1757903338705,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903338706,
      "category": "submit_flag",
      "value": 26,
      "playerId": 32
    },
    {
      "timestamp": 1757903338706,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903338722,
      "category": "submit_flag",
      "value": 28,
      "playerId": 32
    },
    {
      "timestamp": 1757903338722,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903338775,
      "category": "submit_flag",
      "value": 27,
      "playerId": 34
    },
    {
      "timestamp": 1757903338775,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338796,
      "category": "submit_flag",
      "value": 4191,
      "playerId": 50
    },
    {
      "timestamp": 1757903338796,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903338807,
      "category": "submit_flag",
      "value": 27,
      "playerId": 34
    },
    {
      "timestamp": 1757903338807,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338821,
      "category": "submit_flag",
      "value": 26,
      "playerId": 34
    },
    {
      "timestamp": 1757903338821,
      "category": "flag_correct",
      "value": 1,
      "playerId": 34
    },
    {
      "timestamp": 1757903338848,
      "category": "submit_flag",
      "value": 28,
      "playerId": 62
    },
    {
      "timestamp": 1757903338848,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338851,
      "category": "submit_flag",
      "value": 25,
      "playerId": 62
    },
    {
      "timestamp": 1757903338851,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338890,
      "category": "submit_flag",
      "value": 37,
      "playerId": 61
    },
    {
      "timestamp": 1757903338890,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338899,
      "category": "submit_flag",
      "value": 1888,
      "playerId": 58
    },
    {
      "timestamp": 1757903338899,
      "category": "flag_correct",
      "value": 1,
      "playerId": 58
    },
    {
      "timestamp": 1757903338907,
      "category": "submit_flag",
      "value": 29,
      "playerId": 62
    },
    {
      "timestamp": 1757903338907,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903338913,
      "category": "submit_flag",
      "value": 25,
      "playerId": 38
    },
    {
      "timestamp": 1757903338914,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903338914,
      "category": "submit_flag",
      "value": 27,
      "playerId": 61
    },
    {
      "timestamp": 1757903338914,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338923,
      "category": "submit_flag",
      "value": 26,
      "playerId": 77
    },
    {
      "timestamp": 1757903338923,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338926,
      "category": "submit_flag",
      "value": 27,
      "playerId": 61
    },
    {
      "timestamp": 1757903338927,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903338943,
      "category": "submit_flag",
      "value": 28,
      "playerId": 38
    },
    {
      "timestamp": 1757903338943,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903338955,
      "category": "submit_flag",
      "value": 25,
      "playerId": 48
    },
    {
      "timestamp": 1757903338955,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903338962,
      "category": "submit_flag",
      "value": 30,
      "playerId": 77
    },
    {
      "timestamp": 1757903338962,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338974,
      "category": "submit_flag",
      "value": 27,
      "playerId": 38
    },
    {
      "timestamp": 1757903338974,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903338975,
      "category": "submit_flag",
      "value": 28,
      "playerId": 48
    },
    {
      "timestamp": 1757903338975,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903338980,
      "category": "submit_flag",
      "value": 28,
      "playerId": 77
    },
    {
      "timestamp": 1757903338980,
      "category": "flag_correct",
      "value": 1,
      "playerId": 77
    },
    {
      "timestamp": 1757903338983,
      "category": "submit_flag",
      "value": 27,
      "playerId": 48
    },
    {
      "timestamp": 1757903338983,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903338983,
      "category": "submit_flag",
      "value": 31,
      "playerId": 32
    },
    {
      "timestamp": 1757903338983,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903338999,
      "category": "submit_flag",
      "value": 5489,
      "playerId": 46
    },
    {
      "timestamp": 1757903338999,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903339011,
      "category": "submit_flag",
      "value": 30,
      "playerId": 32
    },
    {
      "timestamp": 1757903339011,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339012,
      "category": "submit_flag",
      "value": 30,
      "playerId": 50
    },
    {
      "timestamp": 1757903339012,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903339025,
      "category": "submit_flag",
      "value": 28,
      "playerId": 32
    },
    {
      "timestamp": 1757903339025,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339030,
      "category": "submit_flag",
      "value": 25,
      "playerId": 50
    },
    {
      "timestamp": 1757903339030,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903339068,
      "category": "submit_flag",
      "value": 45,
      "playerId": 50
    },
    {
      "timestamp": 1757903339068,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903339161,
      "category": "submit_flag",
      "value": 28,
      "playerId": 61
    },
    {
      "timestamp": 1757903339161,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903339161,
      "category": "submit_flag",
      "value": 29,
      "playerId": 62
    },
    {
      "timestamp": 1757903339161,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903339169,
      "category": "submit_flag",
      "value": 37,
      "playerId": 61
    },
    {
      "timestamp": 1757903339169,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903339182,
      "category": "submit_flag",
      "value": 28,
      "playerId": 62
    },
    {
      "timestamp": 1757903339182,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903339189,
      "category": "submit_flag",
      "value": 26,
      "playerId": 61
    },
    {
      "timestamp": 1757903339189,
      "category": "flag_correct",
      "value": 1,
      "playerId": 61
    },
    {
      "timestamp": 1757903339194,
      "category": "submit_flag",
      "value": 29,
      "playerId": 62
    },
    {
      "timestamp": 1757903339194,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903339206,
      "category": "submit_flag",
      "value": 26,
      "playerId": 48
    },
    {
      "timestamp": 1757903339206,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903339219,
      "category": "submit_flag",
      "value": 26,
      "playerId": 38
    },
    {
      "timestamp": 1757903339219,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339230,
      "category": "submit_flag",
      "value": 28,
      "playerId": 38
    },
    {
      "timestamp": 1757903339230,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339235,
      "category": "submit_flag",
      "value": 29,
      "playerId": 46
    },
    {
      "timestamp": 1757903339235,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903339238,
      "category": "submit_flag",
      "value": 28,
      "playerId": 38
    },
    {
      "timestamp": 1757903339238,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339243,
      "category": "submit_flag",
      "value": 27,
      "playerId": 48
    },
    {
      "timestamp": 1757903339243,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903339251,
      "category": "submit_flag",
      "value": 28,
      "playerId": 46
    },
    {
      "timestamp": 1757903339251,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903339254,
      "category": "submit_flag",
      "value": 28,
      "playerId": 48
    },
    {
      "timestamp": 1757903339254,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903339274,
      "category": "submit_flag",
      "value": 27,
      "playerId": 46
    },
    {
      "timestamp": 1757903339274,
      "category": "flag_correct",
      "value": 1,
      "playerId": 46
    },
    {
      "timestamp": 1757903339289,
      "category": "submit_flag",
      "value": 27,
      "playerId": 32
    },
    {
      "timestamp": 1757903339289,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339302,
      "category": "submit_flag",
      "value": 29,
      "playerId": 32
    },
    {
      "timestamp": 1757903339302,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339306,
      "category": "submit_flag",
      "value": 29,
      "playerId": 50
    },
    {
      "timestamp": 1757903339306,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903339314,
      "category": "submit_flag",
      "value": 28,
      "playerId": 50
    },
    {
      "timestamp": 1757903339314,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903339342,
      "category": "submit_flag",
      "value": 26,
      "playerId": 32
    },
    {
      "timestamp": 1757903339342,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339368,
      "category": "submit_flag",
      "value": 28,
      "playerId": 50
    },
    {
      "timestamp": 1757903339368,
      "category": "flag_correct",
      "value": 1,
      "playerId": 50
    },
    {
      "timestamp": 1757903339433,
      "category": "submit_flag",
      "value": 29,
      "playerId": 62
    },
    {
      "timestamp": 1757903339433,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903339440,
      "category": "submit_flag",
      "value": 26,
      "playerId": 62
    },
    {
      "timestamp": 1757903339440,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903339468,
      "category": "submit_flag",
      "value": 27,
      "playerId": 62
    },
    {
      "timestamp": 1757903339468,
      "category": "flag_correct",
      "value": 1,
      "playerId": 62
    },
    {
      "timestamp": 1757903339477,
      "category": "submit_flag",
      "value": 32,
      "playerId": 38
    },
    {
      "timestamp": 1757903339477,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339478,
      "category": "submit_flag",
      "value": 28,
      "playerId": 48
    },
    {
      "timestamp": 1757903339478,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903339502,
      "category": "submit_flag",
      "value": 28,
      "playerId": 48
    },
    {
      "timestamp": 1757903339502,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903339517,
      "category": "submit_flag",
      "value": 27,
      "playerId": 38
    },
    {
      "timestamp": 1757903339517,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339527,
      "category": "submit_flag",
      "value": 27,
      "playerId": 38
    },
    {
      "timestamp": 1757903339527,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339539,
      "category": "submit_flag",
      "value": 30,
      "playerId": 48
    },
    {
      "timestamp": 1757903339539,
      "category": "flag_correct",
      "value": 1,
      "playerId": 48
    },
    {
      "timestamp": 1757903339569,
      "category": "submit_flag",
      "value": 28,
      "playerId": 32
    },
    {
      "timestamp": 1757903339569,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339580,
      "category": "submit_flag",
      "value": 26,
      "playerId": 32
    },
    {
      "timestamp": 1757903339580,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339587,
      "category": "submit_flag",
      "value": 29,
      "playerId": 32
    },
    {
      "timestamp": 1757903339587,
      "category": "flag_correct",
      "value": 1,
      "playerId": 32
    },
    {
      "timestamp": 1757903339748,
      "category": "submit_flag",
      "value": 29,
      "playerId": 38
    },
    {
      "timestamp": 1757903339748,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339773,
      "category": "submit_flag",
      "value": 25,
      "playerId": 38
    },
    {
      "timestamp": 1757903339773,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903339818,
      "category": "submit_flag",
      "value": 29,
      "playerId": 38
    },
    {
      "timestamp": 1757903339819,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903340042,
      "category": "submit_flag",
      "value": 29,
      "playerId": 38
    },
    {
      "timestamp": 1757903340042,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903340056,
      "category": "submit_flag",
      "value": 27,
      "playerId": 38
    },
    {
      "timestamp": 1757903340056,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    },
    {
      "timestamp": 1757903340103,
      "category": "submit_flag",
      "value": 28,
      "playerId": 38
    },
    {
      "timestamp": 1757903340103,
      "category": "flag_correct",
      "value": 1,
      "playerId": 38
    }
  ],
  "responseTimes": {
    "staticFiles": [
      142,
      120,
      104,
      25,
      27,
      24,
      107,
      104,
      25,
      24,
      111,
      28,
      163,
      183,
      191,
      114,
      24,
      149,
      26,
      27,
      26,
      25,
      181,
      117,
      25,
      25,
      26,
      110,
      25,
      26,
      166,
      33,
      64,
      156,
      25,
      27,
      27,
      25,
      188,
      40,
      151,
      69,
      28,
      24,
      27,
      50,
      79,
      27,
      23,
      22,
      23,
      25,
      57,
      23,
      25,
      23,
      26,
      31,
      77,
      87,
      44,
      29,
      24,
      62,
      23,
      28,
      75,
      25,
      110,
      25,
      25,
      25,
      23,
      47,
      41,
      26,
      27,
      24,
      217,
      27,
      28,
      154,
      26,
      24,
      26,
      24,
      27,
      40,
      64,
      58,
      115,
      74,
      46,
      210,
      146,
      27,
      24,
      24,
      27,
      26,
      23,
      25,
      24,
      25,
      26,
      61,
      51,
      41,
      218,
      26,
      230,
      28,
      29,
      140,
      28,
      24,
      45,
      262,
      38,
      25,
      26,
      24,
      24,
      24,
      24,
      26,
      37,
      152,
      171,
      25,
      24,
      23,
      165,
      44,
      37,
      23,
      25,
      26,
      24,
      23,
      24,
      28,
      23,
      25,
      152,
      30,
      26,
      26,
      28,
      118,
      43,
      157,
      164,
      51,
      41,
      27,
      24,
      26,
      28,
      28,
      24,
      26,
      44,
      64,
      25,
      26,
      205,
      26,
      175,
      35,
      33,
      174,
      25,
      23,
      31,
      30,
      25,
      23,
      26,
      26,
      26,
      25,
      25,
      47,
      60,
      103,
      68,
      70,
      72,
      148,
      64,
      54,
      56,
      110,
      34,
      312,
      44,
      32,
      30,
      98,
      192,
      27,
      24,
      29,
      287,
      28,
      24,
      23,
      180,
      25,
      25,
      102,
      26,
      28,
      32,
      142,
      34,
      31,
      25,
      27,
      197,
      25,
      27,
      49,
      44,
      46,
      44,
      42,
      23,
      24,
      24,
      29,
      206,
      48,
      52,
      54,
      54,
      33,
      221,
      128,
      49,
      33,
      28,
      28,
      31,
      34,
      40,
      222,
      37,
      126,
      34,
      252,
      36,
      29,
      208,
      33,
      135,
      36,
      47,
      36,
      56,
      238,
      315,
      33,
      50,
      48,
      30,
      228,
      27,
      29,
      85,
      68,
      30,
      24,
      36,
      30,
      110,
      35,
      62,
      63,
      60,
      53,
      52,
      29,
      22,
      26,
      40,
      44,
      117,
      138,
      73,
      133,
      99,
      97,
      242,
      33,
      29,
      32,
      29,
      147,
      22,
      43,
      48,
      27,
      27,
      130,
      27,
      28,
      29,
      27,
      26,
      27,
      101,
      41,
      169,
      199,
      33,
      277,
      24,
      30
    ],
    "login": [
      42,
      64,
      65,
      38,
      92,
      29,
      42,
      43,
      26,
      29,
      30,
      28,
      29,
      32,
      95,
      105,
      31,
      31,
      27,
      32,
      55,
      28,
      223,
      249,
      29,
      309,
      32,
      35,
      33,
      70,
      61,
      27,
      27,
      131,
      38,
      48,
      36,
      112,
      56,
      269,
      37,
      134,
      92,
      36,
      48,
      39,
      32,
      31,
      84,
      153,
      52,
      33,
      38,
      41,
      38,
      40,
      33,
      36,
      35,
      79,
      28,
      44,
      47,
      29,
      49,
      39,
      61,
      137,
      189,
      37,
      37,
      32,
      46,
      51,
      39,
      31,
      33,
      29,
      39,
      2716
    ],
    "challenges": [],
    "submit": [
      36,
      28,
      37,
      39,
      33,
      30,
      35,
      37,
      29,
      26,
      31,
      28,
      29,
      29,
      105,
      95,
      122,
      101,
      30,
      29,
      34,
      27,
      29,
      94,
      207,
      55,
      47,
      44,
      34,
      38,
      28,
      70,
      36,
      38,
      29,
      30,
      33,
      29,
      41,
      40,
      36,
      32,
      30,
      43,
      31,
      32,
      33,
      30,
      27,
      31,
      38,
      28,
      44,
      123,
      75,
      45,
      44,
      45,
      49,
      63,
      30,
      30,
      82,
      47,
      31,
      29,
      62,
      47,
      81,
      92,
      33,
      35,
      33,
      53,
      49,
      67,
      64,
      60,
      67,
      90,
      63,
      84,
      80,
      96,
      96,
      127,
      46,
      53,
      136,
      43,
      70,
      121,
      116,
      46,
      30,
      34,
      155,
      65,
      129,
      34,
      82,
      35,
      34,
      86,
      33,
      31,
      63,
      30,
      184,
      27,
      52,
      49,
      99,
      251,
      107,
      80,
      33,
      33,
      34,
      36,
      30,
      50,
      27,
      36,
      44,
      38,
      35,
      34,
      39,
      33,
      33,
      51,
      26,
      37,
      38,
      94,
      58,
      38,
      49,
      97,
      30,
      363,
      32,
      38,
      37,
      62,
      69,
      52,
      46,
      69,
      36,
      172,
      40,
      64,
      64,
      29,
      29,
      31,
      35,
      57,
      64,
      31,
      26,
      89,
      28,
      103,
      31,
      37,
      257,
      30,
      32,
      49,
      38,
      32,
      27,
      29,
      28,
      32,
      362,
      81,
      266,
      62,
      27,
      35,
      29,
      27,
      423,
      30,
      37,
      34,
      31,
      366,
      47,
      35,
      30,
      35,
      39,
      34,
      34,
      69,
      36,
      33,
      37,
      110,
      54,
      129,
      81,
      84,
      151,
      56,
      36,
      29,
      31,
      49,
      85,
      30,
      39,
      32,
      29,
      46,
      34,
      33,
      64,
      82,
      29,
      130,
      108,
      31,
      84,
      106,
      38,
      108,
      193,
      51,
      46,
      45,
      45,
      102,
      72,
      87,
      33,
      220,
      116,
      36,
      38,
      41,
      31,
      54,
      149,
      219,
      41,
      41,
      86,
      83,
      118,
      32,
      37,
      31,
      33,
      45,
      31,
      91,
      41,
      137,
      51,
      86,
      30,
      168,
      722,
      130,
      39,
      33,
      32,
      39,
      46,
      47,
      28,
      30,
      95,
      31,
      32,
      30,
      31,
      38,
      122,
      28,
      30,
      142,
      30,
      84,
      29,
      241,
      32,
      53,
      63,
      60,
      66,
      68,
      106,
      94,
      259,
      70,
      70,
      142,
      537,
      72,
      149,
      75,
      78,
      369,
      58,
      281,
      184,
      73,
      1052,
      38,
      52,
      102,
      390,
      56,
      57,
      131,
      45,
      206,
      64,
      172,
      139,
      149,
      192,
      36,
      40,
      34,
      50,
      61,
      31,
      68,
      66,
      30,
      103,
      260,
      35,
      28,
      36,
      121,
      32,
      35,
      137,
      30,
      47,
      327,
      34,
      29,
      39,
      33,
      37,
      30,
      29,
      43,
      48,
      91,
      35,
      39,
      66,
      42,
      132,
      112,
      36,
      37,
      268,
      135,
      83,
      46,
      47,
      123,
      48,
      60,
      62,
      27,
      35,
      41,
      161,
      37,
      40,
      119,
      62,
      55,
      57,
      54,
      115,
      63,
      81,
      89,
      104,
      49,
      54,
      58,
      150,
      450,
      34,
      31,
      32,
      83,
      33,
      35,
      34,
      56,
      114,
      373,
      46,
      47,
      49,
      49,
      118,
      38,
      44,
      34,
      34,
      111,
      38,
      43,
      40,
      40,
      31,
      35,
      51,
      52,
      56,
      42,
      57,
      45,
      667,
      440,
      60,
      43,
      35,
      40,
      41,
      43,
      124,
      74,
      74,
      70,
      123,
      61,
      76,
      77,
      78,
      78,
      49,
      49,
      50,
      49,
      49,
      648,
      55,
      111,
      61,
      32,
      38,
      39,
      43,
      44,
      81,
      33,
      34,
      30,
      34,
      39,
      60,
      139,
      82,
      137,
      80,
      177,
      67,
      745,
      68,
      76,
      44,
      42,
      48,
      47,
      82,
      51,
      161,
      26,
      170,
      28,
      32,
      34,
      38,
      41,
      37,
      54,
      36,
      35,
      34,
      80,
      28,
      88,
      42,
      50,
      51,
      42,
      42,
      38,
      42,
      39,
      41,
      41,
      43,
      163,
      63,
      66,
      65,
      64,
      846,
      71,
      61,
      73,
      185,
      51,
      52,
      53,
      58,
      79,
      30,
      30,
      32,
      34,
      46,
      45,
      46,
      46,
      62,
      56,
      64,
      56,
      52,
      84,
      83,
      49,
      51,
      62,
      80,
      60,
      60,
      60,
      63,
      62,
      45,
      47,
      47,
      53,
      173,
      173,
      75,
      93,
      77,
      61,
      62,
      62,
      274,
      84,
      1371,
      142,
      79,
      193,
      195,
      174,
      27,
      109,
      37,
      168,
      35,
      102,
      44,
      123,
      325,
      29,
      48,
      35,
      28,
      35,
      108,
      35,
      50,
      98,
      33,
      104,
      44,
      122,
      271,
      37,
      51,
      36,
      34,
      87,
      222,
      55,
      36,
      31,
      113,
      37,
      37,
      35,
      232,
      86,
      101,
      28,
      32,
      28,
      174,
      30,
      271,
      49,
      45,
      302,
      39,
      41,
      42,
      43,
      33,
      30,
      34,
      39,
      37,
      47,
      25,
      403,
      31,
      52,
      47,
      50,
      48,
      44,
      46,
      99,
      49,
      57,
      52,
      47,
      58,
      88,
      647,
      48,
      47,
      48,
      67,
      84,
      63,
      64,
      68,
      55,
      73,
      51,
      52,
      52,
      86,
      54,
      61,
      40,
      44,
      47,
      40,
      41,
      42,
      43,
      50,
      51,
      43,
      58,
      59,
      50,
      593,
      76,
      44,
      52,
      40,
      41,
      53,
      37,
      36,
      40,
      64,
      29,
      30,
      87,
      35,
      28,
      29,
      37,
      37,
      32,
      28,
      35,
      32,
      60,
      36,
      67,
      29,
      31,
      29,
      26,
      29,
      30,
      32,
      98,
      28,
      31,
      28,
      28,
      30,
      27,
      31,
      31,
      39,
      36,
      37,
      52,
      32,
      42,
      35,
      27,
      30,
      739,
      29,
      30,
      43,
      30,
      44,
      40,
      42,
      36,
      40,
      35,
      42,
      36,
      44,
      56,
      36,
      32,
      54,
      58,
      40,
      39,
      87,
      32,
      35,
      37,
      37,
      68,
      58,
      68,
      77,
      51,
      78,
      66,
      56,
      35,
      62,
      50,
      35,
      42,
      33,
      69,
      35,
      34,
      84,
      35,
      42,
      32,
      88,
      104,
      31,
      182,
      63,
      28,
      102,
      40,
      116,
      47,
      44,
      140,
      46,
      48,
      131,
      33,
      141,
      95,
      38,
      44,
      35,
      40,
      945,
      64,
      48,
      161,
      185,
      3328,
      159,
      39,
      40,
      41,
      37,
      36,
      67,
      48,
      29,
      35,
      35,
      31,
      32,
      36,
      34,
      39,
      30,
      31,
      31,
      25,
      32,
      29,
      34,
      31,
      29,
      30,
      38,
      33,
      37,
      2064,
      85,
      30,
      63,
      37,
      27,
      30,
      29,
      30,
      28,
      109,
      29,
      32,
      35,
      30,
      50,
      30,
      29,
      41,
      31,
      33,
      51,
      43,
      80,
      2163,
      46,
      47,
      39,
      33,
      30,
      105,
      32,
      33,
      33,
      36,
      31,
      29,
      34,
      31,
      90,
      205,
      39,
      29,
      28,
      83,
      37,
      51,
      31,
      34,
      37,
      31,
      130,
      151,
      29,
      115,
      117,
      34,
      29,
      35,
      28,
      31,
      28,
      35,
      31,
      2548,
      33,
      34,
      63,
      135,
      68,
      66,
      216,
      31,
      110,
      27,
      27,
      33,
      32,
      31,
      32,
      65,
      26,
      31,
      212,
      38,
      45,
      41,
      34,
      26,
      49,
      145,
      43,
      40,
      78,
      36,
      115,
      255,
      38,
      34,
      105,
      30,
      31,
      25,
      167,
      115,
      27,
      29,
      25,
      32,
      27,
      149,
      29,
      29,
      29,
      26,
      29,
      31,
      39,
      35,
      35,
      379,
      26,
      33,
      30,
      29,
      34,
      27,
      29,
      29,
      31,
      402,
      30,
      431,
      45,
      49,
      34,
      38,
      54,
      76,
      34,
      35,
      36,
      35,
      40,
      39,
      29,
      34,
      30,
      26,
      28,
      37,
      26,
      27,
      26,
      31,
      63,
      27,
      28,
      27,
      36,
      36,
      40,
      38,
      40,
      36,
      34,
      29,
      38,
      25,
      31,
      28,
      27,
      26,
      29,
      29,
      29,
      616,
      47,
      46,
      26,
      30,
      28,
      35,
      31,
      27,
      28,
      29,
      29,
      30,
      30,
      28,
      4264,
      26,
      29,
      30,
      28,
      29,
      25,
      28,
      29,
      29,
      28,
      32,
      28,
      29,
      31,
      27,
      30,
      30,
      49,
      30,
      33,
      28,
      31,
      32,
      3881,
      29,
      29,
      28,
      28,
      27,
      31,
      26,
      28,
      26,
      28,
      28,
      31,
      28,
      30,
      899,
      24,
      28,
      28,
      28,
      30,
      28,
      42,
      37,
      36,
      997,
      41,
      56,
      27,
      34,
      34,
      28,
      32,
      31,
      28,
      29,
      28,
      27,
      26,
      29,
      29,
      30,
      31,
      27,
      27,
      28,
      28,
      27,
      4527,
      28,
      26,
      29,
      27,
      25,
      27,
      30,
      29,
      26,
      28,
      25,
      4353,
      31,
      29,
      3719,
      34,
      25,
      29,
      27,
      29,
      28,
      28,
      29,
      26,
      29,
      27,
      4940,
      27,
      27,
      25,
      27,
      25,
      25,
      28,
      27,
      29,
      115,
      4437,
      28,
      26,
      28,
      27,
      4191,
      27,
      26,
      28,
      25,
      37,
      1888,
      29,
      25,
      27,
      26,
      27,
      28,
      25,
      30,
      27,
      28,
      28,
      27,
      31,
      5489,
      30,
      30,
      28,
      25,
      45,
      28,
      29,
      37,
      28,
      26,
      29,
      26,
      26,
      28,
      29,
      28,
      27,
      28,
      28,
      27,
      27,
      29,
      29,
      28,
      26,
      28,
      29,
      26,
      27,
      32,
      28,
      28,
      27,
      27,
      30,
      28,
      26,
      29,
      29,
      25,
      29,
      29,
      27,
      28
    ],
    "websocket": [
      116,
      124,
      130,
      135,
      108,
      94,
      75,
      79,
      77,
      96,
      108,
      81,
      103,
      97,
      98,
      96,
      95,
      157,
      118,
      129,
      122,
      77,
      88,
      119,
      127,
      108,
      133,
      113,
      103,
      90,
      93,
      87,
      85,
      107,
      98,
      94,
      92,
      90,
      112,
      181,
      168,
      170,
      113,
      105,
      97,
      91,
      110,
      140,
      139,
      140,
      136,
      121,
      131,
      137,
      123,
      153,
      137,
      142,
      158,
      108,
      147,
      96,
      108,
      147,
      150,
      153,
      234,
      125,
      104,
      92,
      109,
      107,
      135,
      120,
      124,
      100,
      125,
      117,
      99,
      81
    ]
  },
  "staticFileBreakdown": {
    "index.html": [
      142,
      120,
      104,
      107,
      104,
      111,
      114,
      117,
      26,
      110,
      25,
      40,
      23,
      23,
      25,
      26,
      44,
      110,
      25,
      23,
      27,
      27,
      28,
      26,
      74,
      146,
      23,
      25,
      26,
      28,
      38,
      25,
      24,
      37,
      25,
      24,
      23,
      24,
      26,
      28,
      28,
      28,
      44,
      33,
      31,
      30,
      25,
      23,
      25,
      68,
      70,
      30,
      192,
      24,
      25,
      32,
      31,
      25,
      27,
      44,
      23,
      52,
      54,
      31,
      34,
      126,
      33,
      48,
      68,
      36,
      35,
      63,
      60,
      40,
      29,
      29,
      147,
      27,
      27,
      28
    ],
    "CSS": [
      25,
      27,
      24,
      25,
      24,
      28,
      26,
      25,
      25,
      26,
      25,
      27,
      22,
      23,
      25,
      31,
      23,
      25,
      25,
      41,
      24,
      24,
      27,
      40,
      24,
      26,
      24,
      25,
      51,
      28,
      24,
      24,
      26,
      25,
      26,
      28,
      23,
      25,
      26,
      51,
      24,
      26,
      25,
      25,
      26,
      26,
      26,
      25,
      60,
      54,
      56,
      27,
      28,
      24,
      26,
      34,
      27,
      44,
      42,
      24,
      29,
      33,
      33,
      40,
      37,
      36,
      36,
      27,
      24,
      30,
      52,
      22,
      26,
      44,
      32,
      22,
      48,
      29,
      26,
      27
    ],
    "banner image": [
      163,
      183,
      191,
      149,
      181,
      166,
      64,
      156,
      188,
      151,
      69,
      79,
      57,
      77,
      87,
      62,
      75,
      47,
      217,
      154,
      64,
      58,
      115,
      210,
      61,
      218,
      230,
      140,
      45,
      262,
      152,
      171,
      165,
      44,
      152,
      118,
      43,
      157,
      164,
      64,
      205,
      175,
      174,
      47,
      103,
      148,
      110,
      312,
      98,
      287,
      180,
      102,
      142,
      197,
      49,
      206,
      48,
      221,
      128,
      222,
      252,
      208,
      135,
      56,
      238,
      315,
      228,
      85,
      110,
      62,
      117,
      138,
      73,
      242,
      43,
      130,
      101,
      169,
      199,
      277
    ],
    "app.js": [
      24,
      26,
      27,
      25,
      25,
      33,
      27,
      27,
      28,
      24,
      50,
      27,
      23,
      29,
      24,
      28,
      25,
      26,
      26,
      24,
      46,
      27,
      24,
      27,
      41,
      26,
      29,
      24,
      26,
      24,
      24,
      23,
      37,
      23,
      30,
      41,
      27,
      24,
      26,
      26,
      26,
      35,
      23,
      72,
      64,
      34,
      44,
      32,
      29,
      23,
      25,
      28,
      25,
      46,
      24,
      54,
      49,
      28,
      28,
      34,
      29,
      47,
      36,
      33,
      50,
      30,
      29,
      30,
      53,
      29,
      133,
      99,
      97,
      33,
      27,
      27,
      41,
      33,
      24,
      30
    ]
  }
}